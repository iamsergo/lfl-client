[{"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\index.tsx":"1","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\App.tsx":"2","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournament\\index.tsx":"3","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByTour.ts":"4","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Team\\index.tsx":"5","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByClub.ts":"6","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Game\\index.tsx":"7","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournaments\\index.tsx":"8","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\store.ts":"9","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\rootReducer.ts":"10","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\navigation.ts":"11","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\constans\\index.ts":"12","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournaments.ts":"13","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\index.ts":"14","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\games.ts":"15","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\tournaments.ts":"16","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\squads.ts":"17","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\BASE_URL.ts":"18","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\request.ts":"19","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournament.ts":"20","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\team.ts":"21","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\game.ts":"22","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\PlainHeader.tsx":"23","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\GameHeader.tsx":"24","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GameInfoTabs\\index.tsx":"25","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GamesList\\index.tsx":"26","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Table\\TableRow.tsx":"27","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\EventRow\\index.tsx":"28","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\ListHeader\\index.tsx":"29","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\user.ts":"30","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Prediction\\index.tsx":"31","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\predictions.ts":"32","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\predictions.ts":"33","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\user.ts":"34","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\nowLessThen.ts":"35","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\League\\index.tsx":"36","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\league.ts":"37","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\AddWidget\\index.tsx":"38","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\widget.ts":"39"},{"size":544,"mtime":1612711068670,"results":"40","hashOfConfig":"41"},{"size":4020,"mtime":1612711065997,"results":"42","hashOfConfig":"41"},{"size":5990,"mtime":1612612705545,"results":"43","hashOfConfig":"41"},{"size":354,"mtime":1611816832719,"results":"44","hashOfConfig":"41"},{"size":3938,"mtime":1612508532673,"results":"45","hashOfConfig":"41"},{"size":206,"mtime":1611753256674,"results":"46","hashOfConfig":"41"},{"size":7121,"mtime":1612110480070,"results":"47","hashOfConfig":"41"},{"size":5994,"mtime":1612635927147,"results":"48","hashOfConfig":"41"},{"size":291,"mtime":1611856366447,"results":"49","hashOfConfig":"41"},{"size":611,"mtime":1612609913838,"results":"50","hashOfConfig":"41"},{"size":1281,"mtime":1612676185931,"results":"51","hashOfConfig":"41"},{"size":244,"mtime":1612636914666,"results":"52","hashOfConfig":"41"},{"size":1450,"mtime":1611998738393,"results":"53","hashOfConfig":"41"},{"size":450,"mtime":1612694515456,"results":"54","hashOfConfig":"41"},{"size":209,"mtime":1612092061592,"results":"55","hashOfConfig":"41"},{"size":411,"mtime":1612546969012,"results":"56","hashOfConfig":"41"},{"size":272,"mtime":1611778173653,"results":"57","hashOfConfig":"41"},{"size":108,"mtime":1612711070203,"results":"58","hashOfConfig":"41"},{"size":104,"mtime":1611778010684,"results":"59","hashOfConfig":"41"},{"size":2142,"mtime":1612529248428,"results":"60","hashOfConfig":"41"},{"size":2087,"mtime":1612113083100,"results":"61","hashOfConfig":"41"},{"size":2497,"mtime":1612595743003,"results":"62","hashOfConfig":"41"},{"size":883,"mtime":1612711030364,"results":"63","hashOfConfig":"41"},{"size":1134,"mtime":1611967846577,"results":"64","hashOfConfig":"41"},{"size":1107,"mtime":1611966883106,"results":"65","hashOfConfig":"41"},{"size":2021,"mtime":1612703273379,"results":"66","hashOfConfig":"41"},{"size":1287,"mtime":1612108879539,"results":"67","hashOfConfig":"41"},{"size":640,"mtime":1611965479659,"results":"68","hashOfConfig":"41"},{"size":595,"mtime":1612002832923,"results":"69","hashOfConfig":"41"},{"size":1302,"mtime":1612086632767,"results":"70","hashOfConfig":"41"},{"size":2270,"mtime":1612109396518,"results":"71","hashOfConfig":"41"},{"size":638,"mtime":1612081063560,"results":"72","hashOfConfig":"41"},{"size":1951,"mtime":1612089898128,"results":"73","hashOfConfig":"41"},{"size":458,"mtime":1612086598622,"results":"74","hashOfConfig":"41"},{"size":237,"mtime":1612088675264,"results":"75","hashOfConfig":"41"},{"size":3401,"mtime":1612643502677,"results":"76","hashOfConfig":"41"},{"size":511,"mtime":1612609572046,"results":"77","hashOfConfig":"41"},{"size":10947,"mtime":1612700253449,"results":"78","hashOfConfig":"41"},{"size":665,"mtime":1612700251058,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mhq12z",{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"87"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"87"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"87"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"87"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"87"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"87"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"87"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\App.tsx",["169","170","171"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournament\\index.tsx",["172","173","174"],"import React from 'react';\r\n\r\nimport {\r\n  Cell,\r\n  HorizontalScroll, \r\n  List, \r\n  Panel, \r\n  PanelHeader, \r\n  PanelHeaderBack, \r\n  Tabs, \r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { clearActiveTournament, setActiveTab } from '../../store/slices/tournament';\r\nimport { requestSquad, setActiveTeam} from '../../store/slices/team';\r\nimport { setActiveGameInfo } from '../../store/slices/game';\r\n\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport GamesList from '../../components/GamesList';\r\nimport TableRow from '../../components/Table/TableRow';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\n\r\nimport { getGamesByTours } from '../../utils/getGamesByTour';\r\nimport { GAME_PANEL, TEAM_PANEL } from '../../constans';\r\n\r\ninterface TournamentPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst TABS = [ 'Таблица', 'Расписание', 'Результаты']\r\n\r\nconst TournamentPanel : React.FC<TournamentPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const {activeTournament,activeTournamentName,activeTournamentCity,activeTab,activeSiteType,activeVkHref} = useSelector((s:RootState) => s.tournament)\r\n\r\n  const goToTeam = (team : ClubInfo) => {\r\n    dispatch(setActiveTeam(team))\r\n    dispatch(goForward(TEAM_PANEL))\r\n  }\r\n\r\n  const goToGame = (game : GameInfo) => {\r\n    console.log(game)\r\n    if(game.date === '-' && !game.score) return\r\n    \r\n    dispatch(setActiveGameInfo(game))\r\n    dispatch(goForward(GAME_PANEL))\r\n  }\r\n\r\n  const goToTournaments = () => {\r\n    dispatch(goBack())\r\n    dispatch(clearActiveTournament())\r\n    dispatch(setActiveTab(0))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToTournaments} />}\r\n      >Турнир</PanelHeader>\r\n      \r\n      <PlainHeader\r\n        hrefText={'Сайт'}\r\n        href={activeSiteType === 0\r\n            ? `https://lfl.ru/tournament${activeTournament?.tournamentId}`\r\n            : `https://www.goalstream.org/season/${activeTournament?.tournamentId}`\r\n        }\r\n        title={activeTournamentName}\r\n        city={activeTournamentCity}\r\n      />\r\n      <HorizontalScroll>\r\n        <Tabs mode=\"buttons\">\r\n          {TABS.map((tab,i) => {\r\n            return <TabsItem\r\n              key={i}\r\n              selected={activeTab === i}\r\n              onClick={() => dispatch(setActiveTab(i))}\r\n            >{tab}</TabsItem>\r\n          })}\r\n        </Tabs>\r\n      </HorizontalScroll>\r\n\r\n      \r\n      {activeTab === 0 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n            isHeader={true}\r\n            title={'Команда'}\r\n            values={['И','В','Н','П','О']}\r\n            colors={['','green','orange','red']}\r\n          />\r\n          {\r\n            activeTournament.table.map((team,i) => {\r\n              if(team.title === '') return\r\n\r\n              return team.title\r\n                ? <Cell\r\n                    key={i}\r\n                    disabled\r\n                    style={{fontWeight:'bold'}}\r\n                  >{team.title}</Cell>\r\n                : <TableRow\r\n                    key={i}\r\n                    n={team.place}\r\n                    title={team.name}\r\n                    photo={team.logo}\r\n                    onClick={() => goToTeam(team)}\r\n                    values={[team.win+team.draw+team.lose,team.win,team.draw,team.lose,team.points].map(n=>''+n)}\r\n                    colors={['','green','orange','red']}\r\n                    isDark={i % 2 === 0}\r\n                  />\r\n            })\r\n          }\r\n        </List>\r\n      }\r\n\r\n      {activeTab === 1 && activeTournament &&\r\n        Object.entries(getGamesByTours(activeTournament.calendar))\r\n          .map(([tour, games],i) => {\r\n            return <GamesList\r\n              key={i}\r\n              header={`${tour} ТУР`}\r\n              games={games}\r\n              onGoToGame={goToGame} // !!!!\r\n            />\r\n          })\r\n      }\r\n\r\n      {activeTab === 2 && activeTournament &&\r\n        Object.entries(getGamesByTours(activeTournament.results)).reverse()\r\n          .map(([tour, games],i) => {\r\n            return <GamesList\r\n              key={i}\r\n              header={`${tour} ТУР`}\r\n              games={games}\r\n              onGoToGame={goToGame}\r\n            />\r\n          })\r\n      }\r\n\r\n      {/* {activeTab === 3 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n              isHeader={true}\r\n              title={'Игрок'}\r\n              values={['Г']}\r\n              colors={[]}\r\n            />\r\n          {\r\n            activeTournament.strikers.map((player,i) => {\r\n              return <TableRow\r\n                key={i}\r\n                n={i+1}\r\n                title={player.playerName}\r\n                photo={player.playerPhoto}\r\n                description={player.teamName}\r\n                values={[''+player.points]}\r\n                colors={[]}\r\n                isDark={i % 2 === 0}\r\n              />\r\n            })\r\n          }\r\n        </List>\r\n      }\r\n\r\n      {activeTab === 4 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n              isHeader={true}\r\n              title={'Игрок'}\r\n              values={['А']}\r\n              colors={[]}\r\n            />\r\n          {\r\n            activeTournament.assistents.map((player,i) => {\r\n              return <TableRow\r\n                key={i}\r\n                n={i+1}\r\n                title={player.playerName}\r\n                photo={player.playerPhoto}\r\n                description={player.teamName}\r\n                values={[''+player.points]}\r\n                colors={[]}\r\n                isDark={i % 2 === 0}\r\n              />\r\n            })\r\n          }\r\n        </List>\r\n      } */}\r\n\r\n\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TournamentPanel",["175","176"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByTour.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Team\\index.tsx",["177","178","179","180","181","182","183"],"import React from 'react';\r\n\r\n\r\nimport {\r\n  Div,\r\n  Group,\r\n  HorizontalScroll,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Spinner,\r\n  Tabs,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { clearActiveteam, goForwardToTeam,setActiveTab } from '../../store/slices/team';\r\nimport { goBackToGame, setActiveGameInfo } from '../../store/slices/game';\r\n\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport GamesList from '../../components/GamesList';\r\nimport TableRow from '../../components/Table/TableRow';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\n\r\nimport { GAME_PANEL } from '../../constans';\r\n\r\ninterface TeamPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\n// const TABS = [ 'Расписание', 'Результаты', 'Состав' ]\r\nconst TABS = [ 'Расписание', 'Результаты']\r\n\r\nconst TeamPanel : React.FC<TeamPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const { activeTeamSquad, loading, activeTeam, activeTab } = useSelector((s:RootState) => s.team)\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeTournament,activeTournamentCity,activeTournamentName} = useSelector((s:RootState) => s.tournament)\r\n\r\n  const goToBack = () => {\r\n    const isToGame = history[history.length-2] === 'game'\r\n    if(isToGame) dispatch(goBackToGame())\r\n\r\n    dispatch(goBack())\r\n    dispatch(clearActiveteam())\r\n  }\r\n\r\n  const goToGame = (game : GameInfo) => {\r\n    if(game.date === '-' && !game.score) return\r\n\r\n    dispatch(goForwardToTeam())\r\n    dispatch(setActiveGameInfo(game))\r\n    dispatch(goForward(GAME_PANEL))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Команда</PanelHeader>\r\n\r\n      {activeTeam && <>\r\n        <PlainHeader\r\n          logo={activeTeam.logo}\r\n          title={activeTeam.name}\r\n          city={activeTournamentCity}\r\n        />\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => dispatch(setActiveTab(i))}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      </>}\r\n\r\n      \r\n      {activeTab === 0 && activeTeam &&\r\n        <GamesList\r\n          games={activeTournament!.calendar.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {activeTab === 1 && activeTeam &&\r\n        <GamesList\r\n          teamHref={activeTeam.href}\r\n          games={activeTournament!.results.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {/* {activeTab === 2 && activeTeam &&\r\n        <Group>\r\n          <TableRow\r\n            isHeader={true}\r\n            title={'Игрок'}\r\n            values={['И', 'Г','А','Ж','К']}\r\n            colors={['','green','gray','orange','red']}\r\n          />\r\n          {\r\n            loading\r\n              ? <Div><Spinner/></Div>\r\n              : activeTeamSquad.map((player,i) => {\r\n                return <TableRow\r\n                  key={i}\r\n                  title={player.playerName}\r\n                  photo={player.playerPhoto}\r\n                  description={player.amplua}\r\n                  values={[player.games,player.goals,player.assists,player.yc,player.rc].map(n=>''+n)}\r\n                  colors={['','green','gray','orange','red']}\r\n                  isDark={i % 2 === 0}\r\n                />\r\n              })\r\n          }\r\n        </Group>\r\n      } */}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TeamPanel","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByClub.ts",[],["184","185"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Game\\index.tsx",["186"],"import React from 'react';\r\n\r\nimport {\r\n  Cell,\r\n  Div,\r\n  HorizontalScroll,\r\n  List,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Spinner,\r\n  Tabs,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { goBackToTeam, requestSquad, setActiveTeam } from '../../store/slices/team';\r\nimport { clearActiveGame, goForwardToGame, requestGame } from '../../store/slices/game';\r\nimport {useAppDispatch} from '../../store/store';\r\n\r\nimport GameHeader from '../../components/Headers/GameHeader';\r\nimport GameInfoTabs from '../../components/GameInfoTabs';\r\nimport EventRow from '../../components/EventRow';\r\n\r\nimport { TEAM_PANEL } from '../../constans';\r\n\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\nimport Prediction from '../../components/Prediction';\r\nimport { requestDoPrediction, requestPredictions, clearPredictionsInfo } from '../../store/slices/predictions';\r\nimport { addPrediction } from '../../store/slices/user';\r\nimport { nowLessThen } from '../../utils/nowLessThen';\r\n\r\ninterface GamePanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst TABS = [ 'События', 'Составы',]\r\n\r\nconst GamePanel : React.FC<GamePanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeGameInfo,activeGameEvents,loading} = useSelector((s:RootState) => s.game)\r\n  const {activeTournament} = useSelector((s:RootState) => s.tournament)\r\n  const {user} = useSelector((s:RootState) => s.user)\r\n  const {predictionsInfo, loading : loadingPrediction} = useSelector((s:RootState) => s.predictions)\r\n\r\n  const [activeTab, setActiveTab] = React.useState(0)\r\n  const [activeTeamTab, setActiveTeamTab] = React.useState(0)\r\n  const [userPrediction, setUserPrediction] = React.useState<0|1|null>(null)\r\n\r\n  const canPredict = nowLessThen(\r\n    activeGameInfo.date.split(' ')[0].split('.').map(s=>+s),\r\n    activeGameInfo.time.split(':').map(s=>+s)\r\n  )\r\n\r\n  const goToBack = () => {\r\n    const isToTeam = history[history.length-2] === 'team'\r\n    if(isToTeam) dispatch(goBackToTeam())\r\n    \r\n    dispatch(goBack())\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n  }\r\n\r\n  const goToTeam = (team : ClubInfo) => {\r\n    const tournamentId = activeTournament!.tournamentId\r\n    const clubId = team.href.replace('/club','')\r\n\r\n    dispatch(goForwardToGame())\r\n    \r\n    dispatch(setActiveTeam(team))\r\n    dispatch(goForward(TEAM_PANEL))\r\n\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n\r\n    dispatch(requestSquad({tournamentId, clubId}))\r\n  }\r\n\r\n  const doPredict = (prediction : 0 | 1) => {\r\n    const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\r\n    dispatch(addPrediction({matchId, prediction}))\r\n    dispatch(requestDoPrediction({ matchId, prediction, userId : user!.id, }))\r\n      .then(_ => dispatch(requestPredictions(matchId)))\r\n    setUserPrediction(prediction)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if(activeGameEvents) return\r\n\r\n    if(activeGameInfo.matchHref.includes('/empty_protocol'))\r\n    {\r\n      const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\r\n      const prediction = user!.predictions.find(p => p.matchId === matchId)\r\n      if(prediction)\r\n      {\r\n        setUserPrediction(prediction.prediction)\r\n      }\r\n\r\n      if(!canPredict || !!prediction)\r\n        dispatch(requestPredictions(matchId))\r\n      return\r\n    }\r\n\r\n    const req = dispatch(requestGame(+activeGameInfo.matchHref.replace('/match','')))\r\n    return () => {\r\n      req.abort()\r\n    }\r\n  },[])\r\n\r\n  const home = {\r\n    name : activeGameInfo.homeName,\r\n    href : activeGameInfo.homeHref,\r\n    logo : activeGameInfo.homeLogo,\r\n  }\r\n  \r\n  const away = {\r\n    name : activeGameInfo.awayName,\r\n    href : activeGameInfo.awayHref,\r\n    logo : activeGameInfo.awayLogo,\r\n  }\r\n\r\n  const noInformation = activeGameEvents && !activeGameEvents.squads.some(s => s.length > 0)\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Матч</PanelHeader>\r\n\r\n      <GameHeader\r\n        home={home}\r\n        away={away}\r\n        score={!activeGameInfo.score ? '-:-' : activeGameInfo.score}\r\n        onGoToTeam={goToTeam}\r\n      />\r\n\r\n      <GameInfoTabs\r\n        date={activeGameInfo.date !== '-' ? `${activeGameInfo.date}, ${activeGameInfo.time}` : null}\r\n        refery={activeGameEvents && activeGameEvents.refery !== '-' ? activeGameEvents.refery : null}\r\n        place={activeGameEvents && activeGameEvents.place !== '-' ? activeGameEvents.place : null}\r\n      />\r\n\r\n      {!loading && !noInformation && activeGameInfo.score &&\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => setActiveTab(i)}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      }\r\n      \r\n      {!activeGameInfo.score &&\r\n        <Prediction\r\n          canPredict={canPredict}\r\n          userPrediction={userPrediction}\r\n          predictionsInfo={predictionsInfo}\r\n          loading={loadingPrediction}\r\n          title=\"Количество голов\"\r\n          variants={['Больше 7', 'Не больше 7']}\r\n          onPrediction={doPredict}\r\n        />\r\n      }\r\n\r\n      {noInformation && <Placeholder>Нет информации</Placeholder>}\r\n      \r\n      {loading && <Div><Spinner/></Div>}\r\n\r\n\r\n      {!loading && activeTab === 0 && activeGameEvents &&\r\n        activeGameEvents.events.map((e,i) => {\r\n          let eventSymbol = ''\r\n          if(e.type === 'goal') eventSymbol = '⚽'\r\n          else if(e.type === 'assist') eventSymbol = '✅'\r\n          else if(e.type === 'yc') eventSymbol = '🟨'\r\n          else eventSymbol = '🟥'\r\n          \r\n          return <EventRow\r\n            key={i}\r\n            playerName={e.name}\r\n            eventType={eventSymbol}\r\n            isHome={e.team === 0}\r\n            minute={e.minute}\r\n          />\r\n        })\r\n      }\r\n\r\n      {!loading && activeTab === 1 && <>\r\n        <Tabs mode=\"buttons\">\r\n          {[activeGameInfo.homeName,activeGameInfo.awayName].map((team,i) => {\r\n            return <TabsItem\r\n              key={i}\r\n              selected={activeTeamTab === i}\r\n              onClick={() => setActiveTeamTab(i)}\r\n            >{team}</TabsItem>\r\n          })}\r\n        </Tabs>\r\n        <List>\r\n          {activeGameEvents &&\r\n            activeGameEvents.squads[activeTeamTab].map((player,i) => {\r\n              return <Cell\r\n                disabled\r\n                key={i}\r\n                description={activeGameInfo[activeTeamTab === 0 ? 'homeName' : 'awayName']}\r\n              >{player.name}</Cell>\r\n            })\r\n          }\r\n        </List>\r\n      </>}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default GamePanel","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournaments\\index.tsx",["187","188","189","190","191","192","193","194"],"import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Cell,\r\n  Div,\r\n  Header,\r\n  List,\r\n  Panel,\r\n  PanelHeader,\r\n  Snackbar,\r\n  usePlatform,\r\n} from '@vkontakte/vkui';\r\nimport { \r\n  Icon28ChevronRightOutline, \r\n  Icon28ChevronDownOutline,\r\n  Icon28FavoriteCircleFillYellow,\r\n  Icon28AddCircleFillBlue,\r\n  Icon28ReplyCircleFillGreen,\r\n  Icon28Users3Outline,\r\n  Icon16DoneCircle,\r\n  Icon28HomeOutline\r\n} from '@vkontakte/icons';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { goForward } from '../../store/slices/navigation';\r\nimport { requestTournament, setActiveTournament } from '../../store/slices/tournament';\r\n\r\nimport { LEAGUE_PANEL, TOURNAMENT_PANEL } from '../../constans';\r\n\r\nimport { CityInfo } from '../../types/CityInfo';\r\nimport { Tournament } from '../../types/Tournament';\r\nimport { toggleCollapse } from '../../store/slices/tournaments';\r\nimport { setActiveLeague } from '../../store/slices/league';\r\n\r\ninterface TournamentsPanelProps\r\n{\r\n  id : string\r\n  cities : (CityInfo & {collapsed : boolean})[]\r\n}\r\n\r\nconst GROUP_ID = 202380422\r\nconst GROUP_HREF = `https://vk.com/club${GROUP_ID}`\r\n\r\nconst TournamentsPanel : React.FC<TournamentsPanelProps> = ({\r\n  id,\r\n  cities,\r\n}) => {\r\n  const IS_ANDROID = window.location.href.includes('mobile_android')\r\n  const dispatch = useDispatch()\r\n\r\n  const goToLeague = (league : CityInfo) => {\r\n    dispatch(goForward(LEAGUE_PANEL))\r\n    dispatch(setActiveLeague(league))\r\n  }\r\n\r\n  const [snackbar, setSnackbar] = React.useState<React.ReactElement | null>(null)\r\n  const openSnackbar = (text : string) => {\r\n    setSnackbar(\r\n      <Snackbar\r\n        before={\r\n          <Avatar size={24} style={{backgroundColor:'var(--accent)'}}>\r\n            <Icon16DoneCircle fill=\"#fff\" width={14} height={14} />\r\n          </Avatar>\r\n        }\r\n        onClose={() => setSnackbar(null)}\r\n      >{text}</Snackbar>\r\n    )\r\n  }\r\n\r\n  const addToFavourite = () => {\r\n    bridge.send('VKWebAppAddToFavorites')\r\n      .then(_=>openSnackbar('Успешно добавлено !'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const joinToGroup = () => {\r\n    bridge.send('VKWebAppJoinGroup',{group_id:GROUP_ID})\r\n      .then(_=>openSnackbar('Вы вступили. Спасибо!'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const goToGroup = () => {\r\n    let a = document.createElement('a')\r\n    a.href = GROUP_HREF\r\n    a.target = '_blank'\r\n    a.click()\r\n    a.remove()\r\n  }\r\n\r\n  const share = () => {\r\n    bridge.send('VKWebAppShare')\r\n      .then(res=>res)\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const addToHomeScreen = () => {\r\n    bridge.send('VKWebAppAddToHomeScreen')\r\n      .then(_=>openSnackbar('Успешно добавлено !'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader separator={false}>Главная</PanelHeader>\r\n      \r\n      <Header style={{marginTop:8}}>Информация</Header>\r\n      <Div>\r\n        <Card>\r\n          <Div>\r\n            <div style={{display:'flex'}}>\r\n              <Button\r\n                style={{marginBottom:8,width:'100%',display:'flex',marginRight:8}}\r\n                size=\"l\"\r\n                before={<Icon28Users3Outline/>}\r\n                onClick={goToGroup}\r\n              >Группа</Button>\r\n              <Button\r\n                style={{marginBottom:8,display:'flex',justifyContent:'center',alignItems:'center'}}\r\n                size=\"l\"\r\n                before={<Icon28AddCircleFillBlue/>}\r\n                onClick={joinToGroup}\r\n              />\r\n            </div>\r\n            <Button\r\n              style={{marginBottom:8,width:'100%',display:'flex',}}\r\n              size=\"l\"\r\n              before={<Icon28FavoriteCircleFillYellow/>}\r\n              onClick={addToFavourite}\r\n            >Добавить в избранное</Button>\r\n            <Button\r\n              style={{marginBottom:IS_ANDROID?8:0,width:'100%',display:'flex',}}\r\n              size=\"l\"\r\n              before={<Icon28ReplyCircleFillGreen/>}\r\n              onClick={share}\r\n            >Поделиться</Button>\r\n            {IS_ANDROID &&\r\n              <Button\r\n                style={{marginBottom:0,width:'100%',display:'flex',}}\r\n                size=\"l\"\r\n                onClick={addToHomeScreen}\r\n                before={<Icon28HomeOutline/>}\r\n              >На дом. экран</Button>\r\n            }\r\n          </Div>\r\n        </Card>\r\n      </Div>\r\n\r\n      <Header>Турниры</Header>\r\n      {/* {cities.map((city, i) => {\r\n        return <Div key={i} style={{paddingBottom: i===cities.length-1 ? 12 : 0}}>\r\n          <Card>\r\n            <div\r\n              onClick={() => dispatch(toggleCollapse(i))}\r\n              style={{display:'flex',padding:8}}\r\n            >\r\n              <div style={{display:'flex',flex:1,alignItems:'center',}}>\r\n                <Avatar mode=\"image\" size={32} src={city.tournaments[0].logo}/>\r\n                &nbsp;&nbsp;<div style={{flex:1}}>{city.title}</div>\r\n              </div>\r\n              <Icon28ChevronDownOutline\r\n                style={{color:'var(--accent)',transform : `rotate(${city.collapsed ? '0deg' : '180deg'})`}}\r\n              />\r\n            </div>\r\n            {!city.collapsed &&\r\n              <List>\r\n                {city.tournaments.map((t,i) => {\r\n                  return <Cell\r\n                    key={i}\r\n                    after={<Icon28ChevronRightOutline/>}\r\n                    onClick={() => goToTournament(t)}\r\n                  >{t.name}</Cell>\r\n                })}\r\n              </List>\r\n            }\r\n          </Card>\r\n        </Div>\r\n      })} */}\r\n      {cities.map((city,i) => {\r\n        return <Cell\r\n          key={i}\r\n          before={<Avatar size={32} mode=\"image\" src={city.tournaments[0].logo} />}\r\n          after={<Icon28ChevronRightOutline/>}\r\n          onClick={() => goToLeague(city)}\r\n        >{city.title}</Cell>\r\n      })}\r\n\r\n      {snackbar}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TournamentsPanel","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\store.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\rootReducer.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\navigation.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\constans\\index.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournaments.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\index.ts",["195"],"import {getGames} from './games'\r\nimport {getTournaments, getTournament} from './tournaments'\r\nimport {getSquads} from './squads'\r\nimport {getPredictionsByMatch,doPrediction} from './predictions'\r\nimport {getUser, registerUser} from './user'\r\nimport {addWidget} from './widget'\r\n\r\nexport default {\r\n  getGames,\r\n  getTournaments,\r\n  getTournament,\r\n  getSquads,\r\n  getPredictionsByMatch,\r\n  doPrediction,\r\n  getUser,\r\n  registerUser,\r\n  addWidget,\r\n}","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\games.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\tournaments.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\squads.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\BASE_URL.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\request.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournament.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\team.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\game.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\PlainHeader.tsx",["196"],"import React from 'react';\r\n\r\nimport {Avatar, Div, Link} from '@vkontakte/vkui';\r\nimport { Icon24Globe } from '@vkontakte/icons';\r\n\r\ninterface PlainHeaderProps\r\n{\r\n  logo ?: string\r\n  title : string\r\n  league ?: string\r\n  city ?: string\r\n  href ?: string\r\n  hrefText ?: string\r\n}\r\n\r\nconst PlainHeader : React.FC<PlainHeaderProps> = ({\r\n  logo,\r\n  title,\r\n  city,\r\n  href,\r\n  hrefText,\r\n}) => {\r\n  return(\r\n    <Div style={{display:'flex',marginTop:12}}>\r\n      {logo && <Avatar mode=\"image\" size={74} src={logo}/>}\r\n      <div>\r\n        <h3 style={{padding:0, margin:0, marginLeft: logo ? 8 : 0}}>{title}</h3>\r\n        <h5 style={{padding:0, margin:0,marginTop:4,marginLeft: logo ? 8 : 0,color:'gray'}}>{city}</h5>\r\n        {href && <Link target=\"_blank\" style={{marginLeft:logo ? 8 : 0}} href={href}>{hrefText}</Link>}\r\n      </div>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default PlainHeader","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\GameHeader.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GameInfoTabs\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GamesList\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Table\\TableRow.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\EventRow\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\ListHeader\\index.tsx",[],["197","198"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\user.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Prediction\\index.tsx",["199"],"import React from 'react';\r\nimport './Prediction.sass';\r\n\r\nimport { Card, Div, Header, Spinner } from '@vkontakte/vkui';\r\nimport { PredictionInfo } from '../../types/PredictionInfo';\r\nimport { Icon12Verified } from '@vkontakte/icons';\r\n\r\ninterface PredictionProps\r\n{\r\n  title : string\r\n  variants : string[]\r\n  onPrediction : (variant : 0 | 1) => void\r\n  loading : boolean\r\n  predictionsInfo : PredictionInfo | null\r\n  userPrediction : 0 | 1 | null\r\n  canPredict : boolean\r\n}\r\n\r\nconst Prediction : React.FC<PredictionProps> = ({\r\n  title,\r\n  variants,\r\n  onPrediction,\r\n  loading,\r\n  predictionsInfo,\r\n  userPrediction,\r\n  canPredict,\r\n}) => {\r\n  const [activeVariant, setActiveVariant] = React.useState<0 | 1 | null>(userPrediction)\r\n  const doPrediction = (predict : 0|1) => {\r\n    if(loading || userPrediction !== null || !canPredict) return\r\n\r\n    setActiveVariant(predict)\r\n    onPrediction(predict)\r\n  }\r\n\r\n  return(\r\n    <Div>\r\n      <Card style={{display:'flex',flexDirection:'column'}}>\r\n        <Header>{title}</Header>\r\n        {loading\r\n          ? <Div><Spinner/></Div>\r\n          : <Div>\r\n            {variants.map((variant,i) => {\r\n              return <div\r\n                key={i}\r\n                className=\"prediction__btn\"\r\n                onClick={() => doPrediction(i as 0|1)}\r\n                style={{background : (!canPredict || userPrediction !== null) ? 'rgba(0,0,0,0.3)' : ''}}\r\n              >\r\n                <div className=\"prediction__variant\">\r\n                  {variant}\r\n                  {predictionsInfo && ` - ${i === 0 ? predictionsInfo.over : predictionsInfo.under}`}                  \r\n                </div>\r\n                {predictionsInfo &&\r\n                  <div className=\"prediction__stat\">\r\n                    {(userPrediction==i || activeVariant === i) && <Icon12Verified/>}\r\n                    {predictionsInfo.over + predictionsInfo.under === 0\r\n                      ? 0\r\n                      : (([predictionsInfo.over,predictionsInfo.under][i]/(predictionsInfo.over + predictionsInfo.under))*100).toFixed(0)\r\n                    }%\r\n                  </div>\r\n                }\r\n              </div>\r\n            })}\r\n          </Div>\r\n        }\r\n\r\n      </Card>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default Prediction","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\predictions.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\predictions.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\user.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\nowLessThen.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\League\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\league.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\AddWidget\\index.tsx",["200","201","202"],"import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {\r\n  Button,\r\n  Div,\r\n  FormItem,\r\n  Gallery,\r\n  Link,\r\n  NativeSelect,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Spinner,\r\n} from '@vkontakte/vkui';\r\nimport { Icon56CheckCircleOutline } from '@vkontakte/icons';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport api from '../../api';\r\nimport { TournamentInfo } from '../../types/TournamentInfo';\r\n\r\ninterface AddWidgetPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst APP_ID = 7746401\r\nconst VERSION = '5.126'\r\n\r\nconst AddWidgetPanel : React.FC<AddWidgetPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  // const {user} = useSelector((s:RootState) => s.user)\r\n  const user = {id:612381684}\r\n  const {activeLeague} = useSelector((s:RootState) => s.league)\r\n\r\n  const goToLeague = () => {\r\n    dispatch(goBack())\r\n  }\r\n\r\n  const [step, setStep] = React.useState(0)\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [error, setError] = React.useState('')\r\n\r\n  const [activeGroup, setActiveGroup] = React.useState<number|null>(null)\r\n  const [activeTournament, setActiveTournament] = React.useState<number>(+activeLeague!.tournaments[0].id)\r\n  const [groups,setGroups] = React.useState<{id:number,name:string,photo_50:string}[]>([])\r\n  const [accessToken,setAccessToken] = React.useState('')\r\n  const [appInGroup,setAppInGroup] = React.useState(false)\r\n  \r\n  const requestGroups = async () => {\r\n    try\r\n    {\r\n      setLoading(true)\r\n      const {access_token} = await bridge.send('VKWebAppGetAuthToken',{app_id:APP_ID,scope:'groups'})\r\n      const res = await bridge.send('VKWebAppCallAPIMethod', {\r\n        method : 'groups.get', params : {user_id : user!.id,filter:'admin',extended:1,fields:'name',access_token,v:VERSION}\r\n      })\r\n      setLoading(false)\r\n\r\n      const groups = res.response.items\r\n      if(groups.length === 0)\r\n      {\r\n        setError('У вас нет администрируемых групп')\r\n        setStep(-1)\r\n      }\r\n      else\r\n      {\r\n        setGroups(groups)\r\n        setActiveGroup(groups[0].id)\r\n        setStep(s=>s+1)\r\n      }\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n    finally\r\n    {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const changeGroup = (e : React.FormEvent<HTMLSelectElement>) => {\r\n    if(accessToken) setAccessToken('')\r\n    setActiveGroup(+e.currentTarget.value)\r\n  }\r\n\r\n  const changeTournament = (e : React.FormEvent<HTMLSelectElement>) => {\r\n    setActiveTournament(+e.currentTarget.value)\r\n  }\r\n\r\n  const addWidget = async () => {\r\n    setLoading(true)\r\n    try\r\n    {\r\n      const tournament : TournamentInfo = await api.getTournament({\r\n        tournamentId:activeTournament!,\r\n        siteType:activeLeague!.tournaments[0].siteType,\r\n      })\r\n\r\n      const createMatch = ({\r\n        date, home, away, score\r\n      } : {\r\n        date : string,\r\n        home : string,\r\n        away : string,\r\n        score : number[]\r\n      }) => {\r\n        return {\r\n          state : date,\r\n          team_a : { name : home },\r\n          team_b : { name : away },\r\n          score : { team_a : score[0], team_b : score[1] }\r\n        }\r\n      }\r\n\r\n      const games = tournament.calendar.length !== 0 ? tournament.calendar.slice(0,4) : tournament.results.slice(0,4)\r\n      const matches = JSON.stringify(games.map(game => {\r\n        const score = !game.score ? [0,0] : game.score.split(':').map(s=>+s)\r\n        return createMatch({\r\n          date:`${game.date.replace('.2021','').replace('.2020','').replace(' ','')}, ${game.time}`,\r\n          home:game.homeName,\r\n          away:game.awayName,\r\n          score,\r\n        })\r\n      }) )\r\n\r\n      const code = `\r\n            return {\r\n              \"title\": \"Матчи\",\r\n              \"title_url\": \"https://vk.com/app7746401#league${activeLeague?.id}\",\r\n              \"more\": \"Весь список\",\r\n              \"more_url\": \"https://vk.com/app7746401#league${activeLeague?.id}\",\r\n              \"matches\": ${matches}\r\n            };\r\n          `\r\n\r\n      await bridge.send('VKWebAppShowCommunityWidgetPreviewBox',{group_id : activeGroup!, type : 'matches', code,})\r\n\r\n      await api.addWidget({\r\n        user_id : user!.id,\r\n        group_id : activeGroup!,\r\n        app_id : APP_ID,\r\n        access_token : accessToken,\r\n        v : VERSION,\r\n        league_id : activeLeague!.id,\r\n        tournament_id : activeTournament!,\r\n        site_type : activeLeague!.tournaments[0].siteType\r\n      })\r\n      setStep(s=>s+1)\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n    finally\r\n    {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const requestToken = async () => {\r\n    try\r\n    {\r\n      const {access_token} = await bridge.send(\"VKWebAppGetCommunityToken\", {\r\n        app_id : APP_ID,\r\n        group_id : activeGroup!,\r\n        scope:'app_widget'\r\n      })\r\n      setAccessToken(access_token)\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  const addInGroup = async () => {\r\n    try\r\n    {\r\n      await bridge.send('VKWebAppAddToCommunity')\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('Error : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // React.useEffect(() => {\r\n  //   const app_id = 7746401\r\n  //   const group_id = 202380422\r\n  //   const v = '5.126'\r\n  //   const trying = async () => {\r\n  //     try\r\n  //     {\r\n  //       const {access_token} = await bridge.send(\"VKWebAppGetCommunityToken\", {app_id,group_id,scope:'app_widget'})\r\n        \r\n  //       const createMatch = ({\r\n  //         date, home, away, score\r\n  //       } : {\r\n  //         date : string,\r\n  //         home : string,\r\n  //         away : string,\r\n  //         score : number[]\r\n  //       }) => {\r\n  //         return {\r\n  //           state : date,\r\n  //           team_a : { name : home },\r\n  //           team_b : { name : away },\r\n  //           score : { team_a : score[0], team_b : score[1] }\r\n  //         }\r\n  //       }\r\n\r\n  //       const code = `\r\n  //             return {\r\n  //               \"title_counter\" : 10,\r\n  //               \"title\": \"Name of widget\",\r\n  //               \"title_url\": \"https://vk.com/app123456#source=from_title\",\r\n  //               \"more\": \"Весь список\",\r\n  //               \"more_url\": \"https://vk.com/app123456#source=from_footer\",\r\n  //               \"matches\": ${JSON.stringify([\r\n  //                 createMatch({date:'15.01.21 (пн), 20:45',home:'HOME1',away:'AWAY AWAY AWAY 1',score:[5,3]}),\r\n  //                 createMatch({date:'15 февраля 2021, пн, 20:99',home:'Home sdds fsd2',away:'away2',score:[3,4]})\r\n  //               ])}\r\n  //             };\r\n  //           `\r\n\r\n  //       await bridge.send('VKWebAppShowCommunityWidgetPreviewBox',{\r\n  //         group_id, type : 'matches', code,\r\n  //       })\r\n\r\n  //       // await bridge.send('VKWebAppCallAPIMethod',{\r\n  //       //   method : 'appWidgets.update',\r\n  //       //   params : {\r\n  //       //     v,\r\n  //       //     access_token,\r\n  //       //     type : 'matches',\r\n  //       //     code,\r\n  //       //   }\r\n  //       // })\r\n  //     }\r\n  //     catch(e)\r\n  //     {\r\n  //       console.log('ERROR : ',e.error_data)\r\n  //     }\r\n  //   }\r\n\r\n  //   // trying()\r\n  // },[])\r\n\r\n  \r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToLeague} />}\r\n      >Виджет</PanelHeader>\r\n\r\n      {loading && <Div><Spinner/></Div>}\r\n      {error && <h1>Error :(</h1>}\r\n\r\n      {step === 0 && !loading && <>\r\n        <Placeholder\r\n          action={<Button onClick={requestGroups} mode=\"tertiary\">Запросить группы</Button>}\r\n        >\r\n          Необходимо выбрать группу, в которую будет установлен виджет.\r\n          Для получения списка групп понадобится токен доступа.\r\n        </Placeholder>\r\n      </>}\r\n\r\n      {step === 1 && <>\r\n        <FormItem top=\"Выберите группу\">\r\n          <NativeSelect\r\n            onChange={changeGroup}\r\n          >\r\n            {groups.map(group => {\r\n              return <option key={group.id} value={group.id}>{group.name}</option>\r\n            })}\r\n          </NativeSelect>\r\n        </FormItem>\r\n        {!accessToken\r\n          ? <Button\r\n              before={'❌'}\r\n              mode=\"tertiary\"\r\n              style={{width:'100%',display:'flex',color:'var(--accent)'}}\r\n              size=\"l\"\r\n              onClick={requestToken}\r\n            >Предоставить токен</Button>\r\n          : <div style={{paddingLeft:12}}>✅ Токен предоставлен</div>\r\n        }\r\n        {accessToken &&\r\n          <Div>\r\n            <Button\r\n              style={{width:'100%'}}\r\n              size=\"l\"\r\n              onClick={() => setStep(s=>s+1)}\r\n            >Далее</Button>\r\n          </Div>\r\n        }\r\n      </>}\r\n\r\n      {step === 2 && <>\r\n          <FormItem top=\"Выберите лигу для отображения\">\r\n          <NativeSelect\r\n            onChange={changeTournament}\r\n          >\r\n            {activeLeague!.tournaments.map(t => {\r\n              return <option key={t.id} value={t.id}>{t.name}</option>\r\n            })}\r\n          </NativeSelect>\r\n        </FormItem>\r\n        \r\n        <Button\r\n          before={'⚠️'}\r\n          mode=\"tertiary\"\r\n          style={{width:'100%',display:'flex',color:'var(--accent)'}}\r\n          size=\"l\"\r\n          onClick={addInGroup}\r\n        >Убедитесь, что приложение установлено в сообществе</Button>\r\n        <Div>\r\n          <Button\r\n            style={{width:'100%'}}\r\n            size=\"l\"\r\n            onClick={addWidget}\r\n          >Предпросмотр</Button>\r\n        </Div>\r\n      </>}\r\n\r\n      {step === 3 && <>\r\n        <Placeholder\r\n          icon={<Icon56CheckCircleOutline fill=\"green\"/>}\r\n        >\r\n          Виджет установлен <br/><br/>\r\n          ⚠️ <br/>\r\n          В данный момент он доступен только администраторам сообщества.\r\n          Чтобы открыть его для всех, перейдите с компьютера в\r\n          <Link target=\"_blank\" href={`https://vk.com/club${activeGroup}?act=apps`}> управление сообществом {'>'} приложения </Link>\r\n          и установите поле <b>Видимость виджета приложения </b> в значение <b>все пользователи</b>\r\n        </Placeholder>\r\n      </>}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default AddWidgetPanel","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\widget.ts",[],{"ruleId":"203","severity":1,"message":"204","line":4,"column":9,"nodeType":"205","messageId":"206","endLine":4,"endColumn":27},{"ruleId":"203","severity":1,"message":"207","line":10,"column":10,"nodeType":"205","messageId":"206","endLine":10,"endColumn":21},{"ruleId":"208","severity":1,"message":"209","line":56,"column":5,"nodeType":"210","endLine":56,"endColumn":7,"suggestions":"211"},{"ruleId":"203","severity":1,"message":"212","line":18,"column":10,"nodeType":"205","messageId":"206","endLine":18,"endColumn":22},{"ruleId":"203","severity":1,"message":"213","line":42,"column":94,"nodeType":"205","messageId":"206","endLine":42,"endColumn":106},{"ruleId":"214","severity":1,"message":"215","line":101,"column":37,"nodeType":"216","messageId":"217","endLine":101,"endColumn":43},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"203","severity":1,"message":"222","line":5,"column":3,"nodeType":"205","messageId":"206","endLine":5,"endColumn":6},{"ruleId":"203","severity":1,"message":"223","line":6,"column":3,"nodeType":"205","messageId":"206","endLine":6,"endColumn":8},{"ruleId":"203","severity":1,"message":"224","line":11,"column":3,"nodeType":"205","messageId":"206","endLine":11,"endColumn":10},{"ruleId":"203","severity":1,"message":"225","line":24,"column":8,"nodeType":"205","messageId":"206","endLine":24,"endColumn":16},{"ruleId":"203","severity":1,"message":"226","line":42,"column":11,"nodeType":"205","messageId":"206","endLine":42,"endColumn":26},{"ruleId":"203","severity":1,"message":"227","line":42,"column":28,"nodeType":"205","messageId":"206","endLine":42,"endColumn":35},{"ruleId":"203","severity":1,"message":"228","line":44,"column":48,"nodeType":"205","messageId":"206","endLine":44,"endColumn":68},{"ruleId":"218","replacedBy":"229"},{"ruleId":"220","replacedBy":"230"},{"ruleId":"208","severity":1,"message":"231","line":115,"column":5,"nodeType":"210","endLine":115,"endColumn":7,"suggestions":"232"},{"ruleId":"203","severity":1,"message":"233","line":11,"column":3,"nodeType":"205","messageId":"206","endLine":11,"endColumn":7},{"ruleId":"203","severity":1,"message":"234","line":15,"column":3,"nodeType":"205","messageId":"206","endLine":15,"endColumn":14},{"ruleId":"203","severity":1,"message":"235","line":19,"column":3,"nodeType":"205","messageId":"206","endLine":19,"endColumn":27},{"ruleId":"203","severity":1,"message":"236","line":30,"column":10,"nodeType":"205","messageId":"206","endLine":30,"endColumn":27},{"ruleId":"203","severity":1,"message":"237","line":30,"column":29,"nodeType":"205","messageId":"206","endLine":30,"endColumn":48},{"ruleId":"203","severity":1,"message":"238","line":32,"column":24,"nodeType":"205","messageId":"206","endLine":32,"endColumn":40},{"ruleId":"203","severity":1,"message":"239","line":35,"column":10,"nodeType":"205","messageId":"206","endLine":35,"endColumn":20},{"ruleId":"203","severity":1,"message":"240","line":36,"column":10,"nodeType":"205","messageId":"206","endLine":36,"endColumn":24},{"ruleId":"241","severity":1,"message":"242","line":8,"column":1,"nodeType":"243","endLine":18,"endColumn":2},{"ruleId":"203","severity":1,"message":"244","line":4,"column":10,"nodeType":"205","messageId":"206","endLine":4,"endColumn":21},{"ruleId":"218","replacedBy":"245"},{"ruleId":"220","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":56,"column":37,"nodeType":"249","messageId":"250","endLine":56,"endColumn":39},{"ruleId":"203","severity":1,"message":"251","line":8,"column":3,"nodeType":"205","messageId":"206","endLine":8,"endColumn":10},{"ruleId":"203","severity":1,"message":"252","line":54,"column":10,"nodeType":"205","messageId":"206","endLine":54,"endColumn":20},{"ruleId":"203","severity":1,"message":"253","line":54,"column":21,"nodeType":"205","messageId":"206","endLine":54,"endColumn":34},"@typescript-eslint/no-unused-vars","'AdaptivityProvider' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["254"],"'requestSquad' is defined but never used.","'activeVkHref' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-native-reassign",["255"],"no-negated-in-lhs",["256"],"'Div' is defined but never used.","'Group' is defined but never used.","'Spinner' is defined but never used.","'TableRow' is defined but never used.","'activeTeamSquad' is assigned a value but never used.","'loading' is assigned a value but never used.","'activeTournamentName' is assigned a value but never used.",["255"],["256"],"React Hook React.useEffect has missing dependencies: 'activeGameEvents', 'activeGameInfo.matchHref', 'canPredict', 'dispatch', and 'user'. Either include them or remove the dependency array.",["257"],"'List' is defined but never used.","'usePlatform' is defined but never used.","'Icon28ChevronDownOutline' is defined but never used.","'requestTournament' is defined but never used.","'setActiveTournament' is defined but never used.","'TOURNAMENT_PANEL' is defined but never used.","'Tournament' is defined but never used.","'toggleCollapse' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Icon24Globe' is defined but never used.",["255"],["256"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Gallery' is defined but never used.","'appInGroup' is assigned a value but never used.","'setAppInGroup' is assigned a value but never used.",{"desc":"258","fix":"259"},"no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},"Update the dependencies array to be: [dispatch]",{"range":"262","text":"263"},"Update the dependencies array to be: [activeGameEvents, activeGameInfo.matchHref, canPredict, dispatch, user]",{"range":"264","text":"265"},[2614,2616],"[dispatch]",[3747,3749],"[activeGameEvents, activeGameInfo.matchHref, canPredict, dispatch, user]"]