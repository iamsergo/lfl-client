[{"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\index.tsx":"1","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\App.tsx":"2","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournament\\index.tsx":"3","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByTour.ts":"4","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Team\\index.tsx":"5","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByClub.ts":"6","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Game\\index.tsx":"7","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournaments\\index.tsx":"8","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\store.ts":"9","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\rootReducer.ts":"10","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\navigation.ts":"11","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\constans\\index.ts":"12","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournaments.ts":"13","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\index.ts":"14","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\games.ts":"15","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\tournaments.ts":"16","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\squads.ts":"17","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\BASE_URL.ts":"18","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\request.ts":"19","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournament.ts":"20","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\team.ts":"21","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\game.ts":"22","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\PlainHeader.tsx":"23","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\GameHeader.tsx":"24","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GameInfoTabs\\index.tsx":"25","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GamesList\\index.tsx":"26","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Table\\TableRow.tsx":"27","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\EventRow\\index.tsx":"28","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\ListHeader\\index.tsx":"29","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\user.ts":"30","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Prediction\\index.tsx":"31","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\predictions.ts":"32","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\predictions.ts":"33","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\user.ts":"34","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\nowLessThen.ts":"35","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\League\\index.tsx":"36","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\league.ts":"37"},{"size":544,"mtime":1612614865758,"results":"38","hashOfConfig":"39"},{"size":3904,"mtime":1612614861826,"results":"40","hashOfConfig":"39"},{"size":5990,"mtime":1612612705545,"results":"41","hashOfConfig":"39"},{"size":354,"mtime":1611816832719,"results":"42","hashOfConfig":"39"},{"size":3938,"mtime":1612508532673,"results":"43","hashOfConfig":"39"},{"size":206,"mtime":1611753256674,"results":"44","hashOfConfig":"39"},{"size":7121,"mtime":1612110480070,"results":"45","hashOfConfig":"39"},{"size":5969,"mtime":1612610298203,"results":"46","hashOfConfig":"39"},{"size":291,"mtime":1611856366447,"results":"47","hashOfConfig":"39"},{"size":611,"mtime":1612609913838,"results":"48","hashOfConfig":"39"},{"size":1231,"mtime":1612614534749,"results":"49","hashOfConfig":"39"},{"size":198,"mtime":1612608396664,"results":"50","hashOfConfig":"39"},{"size":1450,"mtime":1611998738393,"results":"51","hashOfConfig":"39"},{"size":400,"mtime":1612335360799,"results":"52","hashOfConfig":"39"},{"size":209,"mtime":1612092061592,"results":"53","hashOfConfig":"39"},{"size":411,"mtime":1612546969012,"results":"54","hashOfConfig":"39"},{"size":272,"mtime":1611778173653,"results":"55","hashOfConfig":"39"},{"size":108,"mtime":1612539588111,"results":"56","hashOfConfig":"39"},{"size":104,"mtime":1611778010684,"results":"57","hashOfConfig":"39"},{"size":2142,"mtime":1612529248428,"results":"58","hashOfConfig":"39"},{"size":2087,"mtime":1612113083100,"results":"59","hashOfConfig":"39"},{"size":2497,"mtime":1612595743003,"results":"60","hashOfConfig":"39"},{"size":854,"mtime":1612612798576,"results":"61","hashOfConfig":"39"},{"size":1134,"mtime":1611967846577,"results":"62","hashOfConfig":"39"},{"size":1107,"mtime":1611966883106,"results":"63","hashOfConfig":"39"},{"size":2008,"mtime":1612595742828,"results":"64","hashOfConfig":"39"},{"size":1287,"mtime":1612108879539,"results":"65","hashOfConfig":"39"},{"size":640,"mtime":1611965479659,"results":"66","hashOfConfig":"39"},{"size":595,"mtime":1612002832923,"results":"67","hashOfConfig":"39"},{"size":1302,"mtime":1612086632767,"results":"68","hashOfConfig":"39"},{"size":2270,"mtime":1612109396518,"results":"69","hashOfConfig":"39"},{"size":638,"mtime":1612081063560,"results":"70","hashOfConfig":"39"},{"size":1951,"mtime":1612089898128,"results":"71","hashOfConfig":"39"},{"size":458,"mtime":1612086598622,"results":"72","hashOfConfig":"39"},{"size":237,"mtime":1612088675264,"results":"73","hashOfConfig":"39"},{"size":3095,"mtime":1612613525214,"results":"74","hashOfConfig":"39"},{"size":511,"mtime":1612609572046,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mhq12z",{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"84"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\App.tsx",["157","158","159"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournament\\index.tsx",["160","161","162"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByTour.ts",[],["163","164"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Team\\index.tsx",["165","166","167","168","169","170","171"],"import React from 'react';\r\n\r\n\r\nimport {\r\n  Div,\r\n  Group,\r\n  HorizontalScroll,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Spinner,\r\n  Tabs,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { clearActiveteam, goForwardToTeam,setActiveTab } from '../../store/slices/team';\r\nimport { goBackToGame, setActiveGameInfo } from '../../store/slices/game';\r\n\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport GamesList from '../../components/GamesList';\r\nimport TableRow from '../../components/Table/TableRow';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\n\r\nimport { GAME_PANEL } from '../../constans';\r\n\r\ninterface TeamPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\n// const TABS = [ 'Расписание', 'Результаты', 'Состав' ]\r\nconst TABS = [ 'Расписание', 'Результаты']\r\n\r\nconst TeamPanel : React.FC<TeamPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const { activeTeamSquad, loading, activeTeam, activeTab } = useSelector((s:RootState) => s.team)\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeTournament,activeTournamentCity,activeTournamentName} = useSelector((s:RootState) => s.tournament)\r\n\r\n  const goToBack = () => {\r\n    const isToGame = history[history.length-2] === 'game'\r\n    if(isToGame) dispatch(goBackToGame())\r\n\r\n    dispatch(goBack())\r\n    dispatch(clearActiveteam())\r\n  }\r\n\r\n  const goToGame = (game : GameInfo) => {\r\n    if(game.date === '-' && !game.score) return\r\n\r\n    dispatch(goForwardToTeam())\r\n    dispatch(setActiveGameInfo(game))\r\n    dispatch(goForward(GAME_PANEL))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Команда</PanelHeader>\r\n\r\n      {activeTeam && <>\r\n        <PlainHeader\r\n          logo={activeTeam.logo}\r\n          title={activeTeam.name}\r\n          city={activeTournamentCity}\r\n        />\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => dispatch(setActiveTab(i))}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      </>}\r\n\r\n      \r\n      {activeTab === 0 && activeTeam &&\r\n        <GamesList\r\n          games={activeTournament!.calendar.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {activeTab === 1 && activeTeam &&\r\n        <GamesList\r\n          teamHref={activeTeam.href}\r\n          games={activeTournament!.results.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {/* {activeTab === 2 && activeTeam &&\r\n        <Group>\r\n          <TableRow\r\n            isHeader={true}\r\n            title={'Игрок'}\r\n            values={['И', 'Г','А','Ж','К']}\r\n            colors={['','green','gray','orange','red']}\r\n          />\r\n          {\r\n            loading\r\n              ? <Div><Spinner/></Div>\r\n              : activeTeamSquad.map((player,i) => {\r\n                return <TableRow\r\n                  key={i}\r\n                  title={player.playerName}\r\n                  photo={player.playerPhoto}\r\n                  description={player.amplua}\r\n                  values={[player.games,player.goals,player.assists,player.yc,player.rc].map(n=>''+n)}\r\n                  colors={['','green','gray','orange','red']}\r\n                  isDark={i % 2 === 0}\r\n                />\r\n              })\r\n          }\r\n        </Group>\r\n      } */}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TeamPanel","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByClub.ts",[],["172","173"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Game\\index.tsx",["174"],"import React from 'react';\r\n\r\nimport {\r\n  Cell,\r\n  Div,\r\n  HorizontalScroll,\r\n  List,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Spinner,\r\n  Tabs,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { goBackToTeam, requestSquad, setActiveTeam } from '../../store/slices/team';\r\nimport { clearActiveGame, goForwardToGame, requestGame } from '../../store/slices/game';\r\nimport {useAppDispatch} from '../../store/store';\r\n\r\nimport GameHeader from '../../components/Headers/GameHeader';\r\nimport GameInfoTabs from '../../components/GameInfoTabs';\r\nimport EventRow from '../../components/EventRow';\r\n\r\nimport { TEAM_PANEL } from '../../constans';\r\n\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\nimport Prediction from '../../components/Prediction';\r\nimport { requestDoPrediction, requestPredictions, clearPredictionsInfo } from '../../store/slices/predictions';\r\nimport { addPrediction } from '../../store/slices/user';\r\nimport { nowLessThen } from '../../utils/nowLessThen';\r\n\r\ninterface GamePanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst TABS = [ 'События', 'Составы',]\r\n\r\nconst GamePanel : React.FC<GamePanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeGameInfo,activeGameEvents,loading} = useSelector((s:RootState) => s.game)\r\n  const {activeTournament} = useSelector((s:RootState) => s.tournament)\r\n  const {user} = useSelector((s:RootState) => s.user)\r\n  const {predictionsInfo, loading : loadingPrediction} = useSelector((s:RootState) => s.predictions)\r\n\r\n  const [activeTab, setActiveTab] = React.useState(0)\r\n  const [activeTeamTab, setActiveTeamTab] = React.useState(0)\r\n  const [userPrediction, setUserPrediction] = React.useState<0|1|null>(null)\r\n\r\n  const canPredict = nowLessThen(\r\n    activeGameInfo.date.split(' ')[0].split('.').map(s=>+s),\r\n    activeGameInfo.time.split(':').map(s=>+s)\r\n  )\r\n\r\n  const goToBack = () => {\r\n    const isToTeam = history[history.length-2] === 'team'\r\n    if(isToTeam) dispatch(goBackToTeam())\r\n    \r\n    dispatch(goBack())\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n  }\r\n\r\n  const goToTeam = (team : ClubInfo) => {\r\n    const tournamentId = activeTournament!.tournamentId\r\n    const clubId = team.href.replace('/club','')\r\n\r\n    dispatch(goForwardToGame())\r\n    \r\n    dispatch(setActiveTeam(team))\r\n    dispatch(goForward(TEAM_PANEL))\r\n\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n\r\n    dispatch(requestSquad({tournamentId, clubId}))\r\n  }\r\n\r\n  const doPredict = (prediction : 0 | 1) => {\r\n    const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\r\n    dispatch(addPrediction({matchId, prediction}))\r\n    dispatch(requestDoPrediction({ matchId, prediction, userId : user!.id, }))\r\n      .then(_ => dispatch(requestPredictions(matchId)))\r\n    setUserPrediction(prediction)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if(activeGameEvents) return\r\n\r\n    if(activeGameInfo.matchHref.includes('/empty_protocol'))\r\n    {\r\n      const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\r\n      const prediction = user!.predictions.find(p => p.matchId === matchId)\r\n      if(prediction)\r\n      {\r\n        setUserPrediction(prediction.prediction)\r\n      }\r\n\r\n      if(!canPredict || !!prediction)\r\n        dispatch(requestPredictions(matchId))\r\n      return\r\n    }\r\n\r\n    const req = dispatch(requestGame(+activeGameInfo.matchHref.replace('/match','')))\r\n    return () => {\r\n      req.abort()\r\n    }\r\n  },[])\r\n\r\n  const home = {\r\n    name : activeGameInfo.homeName,\r\n    href : activeGameInfo.homeHref,\r\n    logo : activeGameInfo.homeLogo,\r\n  }\r\n  \r\n  const away = {\r\n    name : activeGameInfo.awayName,\r\n    href : activeGameInfo.awayHref,\r\n    logo : activeGameInfo.awayLogo,\r\n  }\r\n\r\n  const noInformation = activeGameEvents && !activeGameEvents.squads.some(s => s.length > 0)\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Матч</PanelHeader>\r\n\r\n      <GameHeader\r\n        home={home}\r\n        away={away}\r\n        score={!activeGameInfo.score ? '-:-' : activeGameInfo.score}\r\n        onGoToTeam={goToTeam}\r\n      />\r\n\r\n      <GameInfoTabs\r\n        date={activeGameInfo.date !== '-' ? `${activeGameInfo.date}, ${activeGameInfo.time}` : null}\r\n        refery={activeGameEvents && activeGameEvents.refery !== '-' ? activeGameEvents.refery : null}\r\n        place={activeGameEvents && activeGameEvents.place !== '-' ? activeGameEvents.place : null}\r\n      />\r\n\r\n      {!loading && !noInformation && activeGameInfo.score &&\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => setActiveTab(i)}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      }\r\n      \r\n      {!activeGameInfo.score &&\r\n        <Prediction\r\n          canPredict={canPredict}\r\n          userPrediction={userPrediction}\r\n          predictionsInfo={predictionsInfo}\r\n          loading={loadingPrediction}\r\n          title=\"Количество голов\"\r\n          variants={['Больше 7', 'Не больше 7']}\r\n          onPrediction={doPredict}\r\n        />\r\n      }\r\n\r\n      {noInformation && <Placeholder>Нет информации</Placeholder>}\r\n      \r\n      {loading && <Div><Spinner/></Div>}\r\n\r\n\r\n      {!loading && activeTab === 0 && activeGameEvents &&\r\n        activeGameEvents.events.map((e,i) => {\r\n          let eventSymbol = ''\r\n          if(e.type === 'goal') eventSymbol = '⚽'\r\n          else if(e.type === 'assist') eventSymbol = '✅'\r\n          else if(e.type === 'yc') eventSymbol = '🟨'\r\n          else eventSymbol = '🟥'\r\n          \r\n          return <EventRow\r\n            key={i}\r\n            playerName={e.name}\r\n            eventType={eventSymbol}\r\n            isHome={e.team === 0}\r\n            minute={e.minute}\r\n          />\r\n        })\r\n      }\r\n\r\n      {!loading && activeTab === 1 && <>\r\n        <Tabs mode=\"buttons\">\r\n          {[activeGameInfo.homeName,activeGameInfo.awayName].map((team,i) => {\r\n            return <TabsItem\r\n              key={i}\r\n              selected={activeTeamTab === i}\r\n              onClick={() => setActiveTeamTab(i)}\r\n            >{team}</TabsItem>\r\n          })}\r\n        </Tabs>\r\n        <List>\r\n          {activeGameEvents &&\r\n            activeGameEvents.squads[activeTeamTab].map((player,i) => {\r\n              return <Cell\r\n                disabled\r\n                key={i}\r\n                description={activeGameInfo[activeTeamTab === 0 ? 'homeName' : 'awayName']}\r\n              >{player.name}</Cell>\r\n            })\r\n          }\r\n        </List>\r\n      </>}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default GamePanel","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournaments\\index.tsx",["175","176","177","178","179","180","181","182"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\store.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\rootReducer.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\navigation.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\constans\\index.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournaments.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\index.ts",["183"],"import {getGames} from './games'\r\nimport {getTournaments} from './tournaments'\r\nimport {getSquads} from './squads'\r\nimport {getPredictionsByMatch,doPrediction} from './predictions'\r\nimport {getUser, registerUser} from './user'\r\n\r\nexport default {\r\n  getGames,\r\n  getTournaments,\r\n  getSquads,\r\n  getPredictionsByMatch,\r\n  doPrediction,\r\n  getUser,\r\n  registerUser,\r\n}","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\games.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\tournaments.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\squads.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\BASE_URL.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\request.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournament.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\team.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\game.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\PlainHeader.tsx",["184"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\GameHeader.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GameInfoTabs\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GamesList\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Table\\TableRow.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\EventRow\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\ListHeader\\index.tsx",[],["185","186"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\user.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Prediction\\index.tsx",["187"],"import React from 'react';\r\nimport './Prediction.sass';\r\n\r\nimport { Card, Div, Header, Spinner } from '@vkontakte/vkui';\r\nimport { PredictionInfo } from '../../types/PredictionInfo';\r\nimport { Icon12Verified } from '@vkontakte/icons';\r\n\r\ninterface PredictionProps\r\n{\r\n  title : string\r\n  variants : string[]\r\n  onPrediction : (variant : 0 | 1) => void\r\n  loading : boolean\r\n  predictionsInfo : PredictionInfo | null\r\n  userPrediction : 0 | 1 | null\r\n  canPredict : boolean\r\n}\r\n\r\nconst Prediction : React.FC<PredictionProps> = ({\r\n  title,\r\n  variants,\r\n  onPrediction,\r\n  loading,\r\n  predictionsInfo,\r\n  userPrediction,\r\n  canPredict,\r\n}) => {\r\n  const [activeVariant, setActiveVariant] = React.useState<0 | 1 | null>(userPrediction)\r\n  const doPrediction = (predict : 0|1) => {\r\n    if(loading || userPrediction !== null || !canPredict) return\r\n\r\n    setActiveVariant(predict)\r\n    onPrediction(predict)\r\n  }\r\n\r\n  return(\r\n    <Div>\r\n      <Card style={{display:'flex',flexDirection:'column'}}>\r\n        <Header>{title}</Header>\r\n        {loading\r\n          ? <Div><Spinner/></Div>\r\n          : <Div>\r\n            {variants.map((variant,i) => {\r\n              return <div\r\n                key={i}\r\n                className=\"prediction__btn\"\r\n                onClick={() => doPrediction(i as 0|1)}\r\n                style={{background : (!canPredict || userPrediction !== null) ? 'rgba(0,0,0,0.3)' : ''}}\r\n              >\r\n                <div className=\"prediction__variant\">\r\n                  {variant}\r\n                  {predictionsInfo && ` - ${i === 0 ? predictionsInfo.over : predictionsInfo.under}`}                  \r\n                </div>\r\n                {predictionsInfo &&\r\n                  <div className=\"prediction__stat\">\r\n                    {(userPrediction==i || activeVariant === i) && <Icon12Verified/>}\r\n                    {predictionsInfo.over + predictionsInfo.under === 0\r\n                      ? 0\r\n                      : (([predictionsInfo.over,predictionsInfo.under][i]/(predictionsInfo.over + predictionsInfo.under))*100).toFixed(0)\r\n                    }%\r\n                  </div>\r\n                }\r\n              </div>\r\n            })}\r\n          </Div>\r\n        }\r\n\r\n      </Card>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default Prediction","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\predictions.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\predictions.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\user.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\nowLessThen.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\League\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\league.ts",[],{"ruleId":"188","severity":1,"message":"189","line":4,"column":9,"nodeType":"190","messageId":"191","endLine":4,"endColumn":27},{"ruleId":"188","severity":1,"message":"192","line":10,"column":10,"nodeType":"190","messageId":"191","endLine":10,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":57,"column":5,"nodeType":"195","endLine":57,"endColumn":7,"suggestions":"196"},{"ruleId":"188","severity":1,"message":"197","line":18,"column":10,"nodeType":"190","messageId":"191","endLine":18,"endColumn":22},{"ruleId":"188","severity":1,"message":"198","line":42,"column":94,"nodeType":"190","messageId":"191","endLine":42,"endColumn":106},{"ruleId":"199","severity":1,"message":"200","line":101,"column":37,"nodeType":"201","messageId":"202","endLine":101,"endColumn":43},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"188","severity":1,"message":"207","line":5,"column":3,"nodeType":"190","messageId":"191","endLine":5,"endColumn":6},{"ruleId":"188","severity":1,"message":"208","line":6,"column":3,"nodeType":"190","messageId":"191","endLine":6,"endColumn":8},{"ruleId":"188","severity":1,"message":"209","line":11,"column":3,"nodeType":"190","messageId":"191","endLine":11,"endColumn":10},{"ruleId":"188","severity":1,"message":"210","line":24,"column":8,"nodeType":"190","messageId":"191","endLine":24,"endColumn":16},{"ruleId":"188","severity":1,"message":"211","line":42,"column":11,"nodeType":"190","messageId":"191","endLine":42,"endColumn":26},{"ruleId":"188","severity":1,"message":"212","line":42,"column":28,"nodeType":"190","messageId":"191","endLine":42,"endColumn":35},{"ruleId":"188","severity":1,"message":"213","line":44,"column":48,"nodeType":"190","messageId":"191","endLine":44,"endColumn":68},{"ruleId":"203","replacedBy":"214"},{"ruleId":"205","replacedBy":"215"},{"ruleId":"193","severity":1,"message":"216","line":115,"column":5,"nodeType":"195","endLine":115,"endColumn":7,"suggestions":"217"},{"ruleId":"188","severity":1,"message":"218","line":11,"column":3,"nodeType":"190","messageId":"191","endLine":11,"endColumn":7},{"ruleId":"188","severity":1,"message":"219","line":15,"column":3,"nodeType":"190","messageId":"191","endLine":15,"endColumn":14},{"ruleId":"188","severity":1,"message":"220","line":19,"column":3,"nodeType":"190","messageId":"191","endLine":19,"endColumn":27},{"ruleId":"188","severity":1,"message":"221","line":30,"column":10,"nodeType":"190","messageId":"191","endLine":30,"endColumn":27},{"ruleId":"188","severity":1,"message":"222","line":30,"column":29,"nodeType":"190","messageId":"191","endLine":30,"endColumn":48},{"ruleId":"188","severity":1,"message":"223","line":32,"column":24,"nodeType":"190","messageId":"191","endLine":32,"endColumn":40},{"ruleId":"188","severity":1,"message":"224","line":35,"column":10,"nodeType":"190","messageId":"191","endLine":35,"endColumn":20},{"ruleId":"188","severity":1,"message":"225","line":36,"column":10,"nodeType":"190","messageId":"191","endLine":36,"endColumn":24},{"ruleId":"226","severity":1,"message":"227","line":7,"column":1,"nodeType":"228","endLine":15,"endColumn":2},{"ruleId":"188","severity":1,"message":"229","line":4,"column":10,"nodeType":"190","messageId":"191","endLine":4,"endColumn":21},{"ruleId":"203","replacedBy":"230"},{"ruleId":"205","replacedBy":"231"},{"ruleId":"232","severity":1,"message":"233","line":56,"column":37,"nodeType":"234","messageId":"235","endLine":56,"endColumn":39},"@typescript-eslint/no-unused-vars","'AdaptivityProvider' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["236"],"'requestSquad' is defined but never used.","'activeVkHref' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-native-reassign",["237"],"no-negated-in-lhs",["238"],"'Div' is defined but never used.","'Group' is defined but never used.","'Spinner' is defined but never used.","'TableRow' is defined but never used.","'activeTeamSquad' is assigned a value but never used.","'loading' is assigned a value but never used.","'activeTournamentName' is assigned a value but never used.",["237"],["238"],"React Hook React.useEffect has missing dependencies: 'activeGameEvents', 'activeGameInfo.matchHref', 'canPredict', 'dispatch', and 'user'. Either include them or remove the dependency array.",["239"],"'List' is defined but never used.","'usePlatform' is defined but never used.","'Icon28ChevronDownOutline' is defined but never used.","'requestTournament' is defined but never used.","'setActiveTournament' is defined but never used.","'TOURNAMENT_PANEL' is defined but never used.","'Tournament' is defined but never used.","'toggleCollapse' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Icon24Globe' is defined but never used.",["237"],["238"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"240","fix":"241"},"no-global-assign","no-unsafe-negation",{"desc":"242","fix":"243"},"Update the dependencies array to be: [dispatch]",{"range":"244","text":"245"},"Update the dependencies array to be: [activeGameEvents, activeGameInfo.matchHref, canPredict, dispatch, user]",{"range":"246","text":"247"},[2550,2552],"[dispatch]",[3747,3749],"[activeGameEvents, activeGameInfo.matchHref, canPredict, dispatch, user]"]