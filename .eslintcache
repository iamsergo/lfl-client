[{"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\index.tsx":"1","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\App.tsx":"2","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournament\\index.tsx":"3","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByTour.ts":"4","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Team\\index.tsx":"5","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByClub.ts":"6","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Game\\index.tsx":"7","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournaments\\index.tsx":"8","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\store.ts":"9","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\rootReducer.ts":"10","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\navigation.ts":"11","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\constans\\index.ts":"12","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournaments.ts":"13","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\index.ts":"14","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\games.ts":"15","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\tournaments.ts":"16","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\squads.ts":"17","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\BASE_URL.ts":"18","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\request.ts":"19","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournament.ts":"20","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\team.ts":"21","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\game.ts":"22","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\PlainHeader.tsx":"23","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\GameHeader.tsx":"24","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GameInfoTabs\\index.tsx":"25","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GamesList\\index.tsx":"26","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Table\\TableRow.tsx":"27","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\EventRow\\index.tsx":"28","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\ListHeader\\index.tsx":"29","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\user.ts":"30","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Prediction\\index.tsx":"31","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\predictions.ts":"32","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\predictions.ts":"33","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\user.ts":"34","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\nowLessThen.ts":"35","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\League\\index.tsx":"36","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\league.ts":"37","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\AddWidget\\index.tsx":"38","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\widget.ts":"39","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Actions\\index.tsx":"40","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Score\\index.tsx":"41"},{"size":544,"mtime":1612711068670,"results":"42","hashOfConfig":"43"},{"size":4020,"mtime":1612905729166,"results":"44","hashOfConfig":"43"},{"size":5993,"mtime":1612888168408,"results":"45","hashOfConfig":"43"},{"size":354,"mtime":1611816832719,"results":"46","hashOfConfig":"43"},{"size":3941,"mtime":1612888183835,"results":"47","hashOfConfig":"43"},{"size":206,"mtime":1611753256674,"results":"48","hashOfConfig":"43"},{"size":8405,"mtime":1612944789850,"results":"49","hashOfConfig":"43"},{"size":5994,"mtime":1612940222425,"results":"50","hashOfConfig":"43"},{"size":291,"mtime":1611856366447,"results":"51","hashOfConfig":"43"},{"size":611,"mtime":1612609913838,"results":"52","hashOfConfig":"43"},{"size":1281,"mtime":1612676185931,"results":"53","hashOfConfig":"43"},{"size":244,"mtime":1612636914666,"results":"54","hashOfConfig":"43"},{"size":1450,"mtime":1611998738393,"results":"55","hashOfConfig":"43"},{"size":450,"mtime":1612694515456,"results":"56","hashOfConfig":"43"},{"size":382,"mtime":1612876996466,"results":"57","hashOfConfig":"43"},{"size":411,"mtime":1612546969012,"results":"58","hashOfConfig":"43"},{"size":272,"mtime":1611778173653,"results":"59","hashOfConfig":"43"},{"size":108,"mtime":1612882505557,"results":"60","hashOfConfig":"43"},{"size":104,"mtime":1611778010684,"results":"61","hashOfConfig":"43"},{"size":2232,"mtime":1612894391702,"results":"62","hashOfConfig":"43"},{"size":2087,"mtime":1612113083100,"results":"63","hashOfConfig":"43"},{"size":2546,"mtime":1612907021060,"results":"64","hashOfConfig":"43"},{"size":883,"mtime":1612711030364,"results":"65","hashOfConfig":"43"},{"size":1162,"mtime":1612943672756,"results":"66","hashOfConfig":"43"},{"size":1133,"mtime":1612877533255,"results":"67","hashOfConfig":"43"},{"size":2023,"mtime":1612942904772,"results":"68","hashOfConfig":"43"},{"size":1287,"mtime":1612108879539,"results":"69","hashOfConfig":"43"},{"size":1034,"mtime":1612881877670,"results":"70","hashOfConfig":"43"},{"size":595,"mtime":1612002832923,"results":"71","hashOfConfig":"43"},{"size":1302,"mtime":1612086632767,"results":"72","hashOfConfig":"43"},{"size":2270,"mtime":1612109396518,"results":"73","hashOfConfig":"43"},{"size":638,"mtime":1612081063560,"results":"74","hashOfConfig":"43"},{"size":1951,"mtime":1612089898128,"results":"75","hashOfConfig":"43"},{"size":458,"mtime":1612086598622,"results":"76","hashOfConfig":"43"},{"size":237,"mtime":1612088675264,"results":"77","hashOfConfig":"43"},{"size":4007,"mtime":1612942196686,"results":"78","hashOfConfig":"43"},{"size":511,"mtime":1612609572046,"results":"79","hashOfConfig":"43"},{"size":9211,"mtime":1612770524426,"results":"80","hashOfConfig":"43"},{"size":665,"mtime":1612700251058,"results":"81","hashOfConfig":"43"},{"size":2276,"mtime":1612942011473,"results":"82","hashOfConfig":"43"},{"size":323,"mtime":1612942843346,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"mhq12z",{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"86"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\index.tsx",[],["176","177"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\App.tsx",["178","179","180"],"import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {AdaptivityProvider, AppRoot, ConfigProvider, ScreenSpinner, View} from '@vkontakte/vkui';\r\n\r\nimport TournamentPanel from './panels/Tournament';\r\nimport TeamPanel from './panels/Team';\r\nimport GamePanel from './panels/Game';\r\nimport TournamentsPanel from './panels/Tournaments';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from './store/rootReducer';\r\nimport { ADD_WIDGET_PANEL, GAME_PANEL, LEAGUE_PANEL, TEAM_PANEL, TOURNAMENTS_PANEL, TOURNAMENT_PANEL } from './constans';\r\nimport { requestTournaments } from './store/slices/tournaments';\r\nimport { requestUser } from './store/slices/user';\r\nimport { goBack } from './store/slices/navigation';\r\nimport { clearActiveGame, goBackToGame } from './store/slices/game';\r\nimport { clearActiveteam, goBackToTeam } from './store/slices/team';\r\nimport { clearPredictionsInfo } from './store/slices/predictions';\r\nimport { setNavigation } from './store/slices/navigation';\r\nimport { clearActiveTournament, setActiveTab as setActiveTournamentTab } from './store/slices/tournament';\r\nimport { setActiveTab as setActiveTeamTab } from './store/slices/team';\r\nimport LeaguePanel from './panels/League';\r\nimport { useAppDispatch } from './store/store';\r\nimport { setActiveLeague } from './store/slices/league';\r\nimport { CityInfo } from './types/CityInfo';\r\nimport AddWidgetPanel from './panels/AddWidget';\r\n\r\nconst App = () => {\r\n  const dispatch = useAppDispatch()\r\n  const {activePanel, history} = useSelector((s:RootState) => s.navigation)\r\n  const {loading : loadingTournaments, cities} = useSelector((s:RootState) => s.tournaments)\r\n  const {loading : loadingTournament} = useSelector((s:RootState) => s.tournament)\r\n  const {loading : loadingUser} = useSelector((s:RootState) => s.user)\r\n\r\n  React.useEffect(() => {\r\n    const initPanels = (cities : CityInfo[]) => {\r\n      const hash = window.location.hash\r\n      if(hash)\r\n      {\r\n        const id = +hash.slice(1).replace('league','')\r\n        dispatch(setActiveLeague(cities.find(c => c.id === id)))\r\n        dispatch(setNavigation({activePanel:LEAGUE_PANEL,history:[TOURNAMENTS_PANEL,LEAGUE_PANEL]}))\r\n      }\r\n    }\r\n\r\n    const initApp = async () => {\r\n      const userInfo = await bridge.send('VKWebAppGetUserInfo')\r\n      // const userInfo = {id : 17}\r\n      dispatch(requestUser(userInfo.id))\r\n      dispatch(requestTournaments())\r\n        .then((action) => initPanels(action.payload))\r\n      bridge.send('VKWebAppEnableSwipeBack').then(res=>res).catch(err=>err)\r\n    }\r\n    \r\n    initApp()\r\n  },[])\r\n\r\n  const goToBack = () => {\r\n    const currentPanel = history[history.length-1]\r\n    const newPanel = history[history.length-2]\r\n    \r\n    if(currentPanel === 'team')\r\n    {\r\n      if(newPanel === 'game') dispatch(goBackToGame())\r\n\r\n      dispatch(clearActiveteam())\r\n    }\r\n    else if(currentPanel === 'game')\r\n    {\r\n      if(newPanel === 'team') dispatch(goBackToTeam())\r\n\r\n      dispatch(clearActiveGame())\r\n      dispatch(clearPredictionsInfo())\r\n    }\r\n    \r\n    if(newPanel === 'league')\r\n    {\r\n      dispatch(setActiveTournamentTab(0))\r\n      dispatch(clearActiveTournament())\r\n    }\r\n    else if(newPanel === 'tournament')\r\n    {\r\n      dispatch(setActiveTeamTab(0))\r\n    }\r\n\r\n    dispatch(goBack())\r\n  }\r\n\r\n  return (\r\n    <ConfigProvider isWebView={true}>\r\n      <AppRoot>\r\n        <View\r\n          activePanel={activePanel}\r\n          onSwipeBack={goToBack}\r\n          history={history}\r\n          popout={(loadingTournaments || loadingUser || loadingTournament) && <ScreenSpinner />}\r\n        >\r\n          <TournamentsPanel id={TOURNAMENTS_PANEL} cities={cities}/>\r\n          <LeaguePanel id={LEAGUE_PANEL} />\r\n          <TournamentPanel id={TOURNAMENT_PANEL}/>\r\n          <GamePanel id={GAME_PANEL}/>\r\n          <TeamPanel id={TEAM_PANEL}/>\r\n          <AddWidgetPanel id={ADD_WIDGET_PANEL} />\r\n        </View>\r\n      </AppRoot>\r\n    </ConfigProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournament\\index.tsx",["181","182","183"],"import React from 'react';\r\n\r\nimport {\r\n  Cell,\r\n  HorizontalScroll, \r\n  List, \r\n  Panel, \r\n  PanelHeader, \r\n  PanelHeaderBack, \r\n  Tabs, \r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { clearActiveTournament, setActiveTab } from '../../store/slices/tournament';\r\nimport { requestSquad, setActiveTeam} from '../../store/slices/team';\r\nimport { setActiveGameInfo } from '../../store/slices/game';\r\n\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport GamesList from '../../components/GamesList';\r\nimport TableRow from '../../components/Table/TableRow';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\n\r\nimport { getGamesByTours } from '../../utils/getGamesByTour';\r\nimport { GAME_PANEL, TEAM_PANEL } from '../../constans';\r\n\r\ninterface TournamentPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst TABS = [ 'Таблица', 'Расписание', 'Результаты']\r\n\r\nconst TournamentPanel : React.FC<TournamentPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const {activeTournament,activeTournamentName,activeTournamentCity,activeTab,activeSiteType,activeVkHref} = useSelector((s:RootState) => s.tournament)\r\n\r\n  const goToTeam = (team : ClubInfo) => {\r\n    dispatch(setActiveTeam(team))\r\n    dispatch(goForward(TEAM_PANEL))\r\n  }\r\n\r\n  const goToGame = (game : GameInfo) => {\r\n    console.log(game)\r\n    if(game.date === '-' && !game.score) return\r\n    \r\n    dispatch(setActiveGameInfo(game))\r\n    dispatch(goForward(GAME_PANEL))\r\n  }\r\n\r\n  const goToTournaments = () => {\r\n    dispatch(goBack())\r\n    dispatch(clearActiveTournament())\r\n    dispatch(setActiveTab(0))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToTournaments} />}\r\n      >Турнир</PanelHeader>\r\n      \r\n      <PlainHeader\r\n        hrefText={'Сайт'}\r\n        href={activeSiteType === 0\r\n            ? `https://lfl.ru/tournament${activeTournament?.tournamentId}`\r\n            : `https://www.goalstream.org/season/${activeTournament?.tournamentId}`\r\n        }\r\n        title={activeTournamentName}\r\n        city={activeTournamentCity}\r\n      />\r\n      <HorizontalScroll>\r\n        <Tabs mode=\"buttons\">\r\n          {TABS.map((tab,i) => {\r\n            return <TabsItem\r\n              key={i}\r\n              selected={activeTab === i}\r\n              onClick={() => dispatch(setActiveTab(i))}\r\n            >{tab}</TabsItem>\r\n          })}\r\n        </Tabs>\r\n      </HorizontalScroll>\r\n\r\n      \r\n      {activeTab === 0 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n            isHeader={true}\r\n            title={'Команда'}\r\n            values={['И','В','Н','П','О']}\r\n            colors={['','green','orange','red']}\r\n          />\r\n          {\r\n            activeTournament.table.map((team,i) => {\r\n              if(team.title === '') return\r\n\r\n              return team.title\r\n                ? <Cell\r\n                    key={i}\r\n                    disabled\r\n                    style={{fontWeight:'bold'}}\r\n                  >{team.title}</Cell>\r\n                : <TableRow\r\n                    key={i}\r\n                    n={team.place}\r\n                    title={team.name}\r\n                    photo={team.logo}\r\n                    onClick={() => goToTeam(team)}\r\n                    values={[team.win+team.draw+team.lose,team.win,team.draw,team.lose,team.points].map(n=>''+n)}\r\n                    colors={['','green','orange','red']}\r\n                    isDark={i % 2 === 0}\r\n                  />\r\n            })\r\n          }\r\n        </List>\r\n      }\r\n\r\n      {activeTab === 1 && activeTournament &&\r\n        Object.entries(getGamesByTours(activeTournament.calendar))\r\n          .map(([tour, games],i) => {\r\n            return <GamesList\r\n              key={i}\r\n              header={`${tour} ТУР`}\r\n              games={games}\r\n              // onGoToGame={goToGame} // !!!!\r\n            />\r\n          })\r\n      }\r\n\r\n      {activeTab === 2 && activeTournament &&\r\n        Object.entries(getGamesByTours(activeTournament.results)).reverse()\r\n          .map(([tour, games],i) => {\r\n            return <GamesList\r\n              key={i}\r\n              header={`${tour} ТУР`}\r\n              games={games}\r\n              onGoToGame={goToGame}\r\n            />\r\n          })\r\n      }\r\n\r\n      {/* {activeTab === 3 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n              isHeader={true}\r\n              title={'Игрок'}\r\n              values={['Г']}\r\n              colors={[]}\r\n            />\r\n          {\r\n            activeTournament.strikers.map((player,i) => {\r\n              return <TableRow\r\n                key={i}\r\n                n={i+1}\r\n                title={player.playerName}\r\n                photo={player.playerPhoto}\r\n                description={player.teamName}\r\n                values={[''+player.points]}\r\n                colors={[]}\r\n                isDark={i % 2 === 0}\r\n              />\r\n            })\r\n          }\r\n        </List>\r\n      }\r\n\r\n      {activeTab === 4 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n              isHeader={true}\r\n              title={'Игрок'}\r\n              values={['А']}\r\n              colors={[]}\r\n            />\r\n          {\r\n            activeTournament.assistents.map((player,i) => {\r\n              return <TableRow\r\n                key={i}\r\n                n={i+1}\r\n                title={player.playerName}\r\n                photo={player.playerPhoto}\r\n                description={player.teamName}\r\n                values={[''+player.points]}\r\n                colors={[]}\r\n                isDark={i % 2 === 0}\r\n              />\r\n            })\r\n          }\r\n        </List>\r\n      } */}\r\n\r\n\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TournamentPanel","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByTour.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Team\\index.tsx",["184","185","186","187","188","189","190"],"import React from 'react';\r\n\r\n\r\nimport {\r\n  Div,\r\n  Group,\r\n  HorizontalScroll,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Spinner,\r\n  Tabs,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { clearActiveteam, goForwardToTeam,setActiveTab } from '../../store/slices/team';\r\nimport { goBackToGame, setActiveGameInfo } from '../../store/slices/game';\r\n\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport GamesList from '../../components/GamesList';\r\nimport TableRow from '../../components/Table/TableRow';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\n\r\nimport { GAME_PANEL } from '../../constans';\r\n\r\ninterface TeamPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\n// const TABS = [ 'Расписание', 'Результаты', 'Состав' ]\r\nconst TABS = [ 'Расписание', 'Результаты']\r\n\r\nconst TeamPanel : React.FC<TeamPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const { activeTeamSquad, loading, activeTeam, activeTab } = useSelector((s:RootState) => s.team)\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeTournament,activeTournamentCity,activeTournamentName} = useSelector((s:RootState) => s.tournament)\r\n\r\n  const goToBack = () => {\r\n    const isToGame = history[history.length-2] === 'game'\r\n    if(isToGame) dispatch(goBackToGame())\r\n\r\n    dispatch(goBack())\r\n    dispatch(clearActiveteam())\r\n  }\r\n\r\n  const goToGame = (game : GameInfo) => {\r\n    if(game.date === '-' && !game.score) return\r\n\r\n    dispatch(goForwardToTeam())\r\n    dispatch(setActiveGameInfo(game))\r\n    dispatch(goForward(GAME_PANEL))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Команда</PanelHeader>\r\n\r\n      {activeTeam && <>\r\n        <PlainHeader\r\n          logo={activeTeam.logo}\r\n          title={activeTeam.name}\r\n          city={activeTournamentCity}\r\n        />\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => dispatch(setActiveTab(i))}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      </>}\r\n\r\n      \r\n      {activeTab === 0 && activeTeam &&\r\n        <GamesList\r\n          games={activeTournament!.calendar.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          // onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {activeTab === 1 && activeTeam &&\r\n        <GamesList\r\n          teamHref={activeTeam.href}\r\n          games={activeTournament!.results.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {/* {activeTab === 2 && activeTeam &&\r\n        <Group>\r\n          <TableRow\r\n            isHeader={true}\r\n            title={'Игрок'}\r\n            values={['И', 'Г','А','Ж','К']}\r\n            colors={['','green','gray','orange','red']}\r\n          />\r\n          {\r\n            loading\r\n              ? <Div><Spinner/></Div>\r\n              : activeTeamSquad.map((player,i) => {\r\n                return <TableRow\r\n                  key={i}\r\n                  title={player.playerName}\r\n                  photo={player.playerPhoto}\r\n                  description={player.amplua}\r\n                  values={[player.games,player.goals,player.assists,player.yc,player.rc].map(n=>''+n)}\r\n                  colors={['','green','gray','orange','red']}\r\n                  isDark={i % 2 === 0}\r\n                />\r\n              })\r\n          }\r\n        </Group>\r\n      } */}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TeamPanel","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByClub.ts",[],["191","192"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Game\\index.tsx",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournaments\\index.tsx",["212","213","214","215","216","217","218","219"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\store.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\rootReducer.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\navigation.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\constans\\index.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournaments.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\index.ts",["220"],"import {getGames} from './games'\r\nimport {getTournaments, getTournament} from './tournaments'\r\nimport {getSquads} from './squads'\r\nimport {getPredictionsByMatch,doPrediction} from './predictions'\r\nimport {getUser, registerUser} from './user'\r\nimport {addWidget} from './widget'\r\n\r\nexport default {\r\n  getGames,\r\n  getTournaments,\r\n  getTournament,\r\n  getSquads,\r\n  getPredictionsByMatch,\r\n  doPrediction,\r\n  getUser,\r\n  registerUser,\r\n  addWidget,\r\n}","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\games.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\tournaments.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\squads.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\BASE_URL.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\request.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournament.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\team.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\game.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\PlainHeader.tsx",["221"],"import React from 'react';\r\n\r\nimport {Avatar, Div, Link} from '@vkontakte/vkui';\r\nimport { Icon24Globe } from '@vkontakte/icons';\r\n\r\ninterface PlainHeaderProps\r\n{\r\n  logo ?: string\r\n  title : string\r\n  league ?: string\r\n  city ?: string\r\n  href ?: string\r\n  hrefText ?: string\r\n}\r\n\r\nconst PlainHeader : React.FC<PlainHeaderProps> = ({\r\n  logo,\r\n  title,\r\n  city,\r\n  href,\r\n  hrefText,\r\n}) => {\r\n  return(\r\n    <Div style={{display:'flex',marginTop:12}}>\r\n      {logo && <Avatar mode=\"image\" size={74} src={logo}/>}\r\n      <div>\r\n        <h3 style={{padding:0, margin:0, marginLeft: logo ? 8 : 0}}>{title}</h3>\r\n        <h5 style={{padding:0, margin:0,marginTop:4,marginLeft: logo ? 8 : 0,color:'gray'}}>{city}</h5>\r\n        {href && <Link target=\"_blank\" style={{marginLeft:logo ? 8 : 0}} href={href}>{hrefText}</Link>}\r\n      </div>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default PlainHeader","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\GameHeader.tsx",["222"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GameInfoTabs\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GamesList\\index.tsx",["223"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Table\\TableRow.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\EventRow\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\ListHeader\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\user.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Prediction\\index.tsx",["224"],"import React from 'react';\r\nimport './Prediction.sass';\r\n\r\nimport { Card, Div, Header, Spinner } from '@vkontakte/vkui';\r\nimport { PredictionInfo } from '../../types/PredictionInfo';\r\nimport { Icon12Verified } from '@vkontakte/icons';\r\n\r\ninterface PredictionProps\r\n{\r\n  title : string\r\n  variants : string[]\r\n  onPrediction : (variant : 0 | 1) => void\r\n  loading : boolean\r\n  predictionsInfo : PredictionInfo | null\r\n  userPrediction : 0 | 1 | null\r\n  canPredict : boolean\r\n}\r\n\r\nconst Prediction : React.FC<PredictionProps> = ({\r\n  title,\r\n  variants,\r\n  onPrediction,\r\n  loading,\r\n  predictionsInfo,\r\n  userPrediction,\r\n  canPredict,\r\n}) => {\r\n  const [activeVariant, setActiveVariant] = React.useState<0 | 1 | null>(userPrediction)\r\n  const doPrediction = (predict : 0|1) => {\r\n    if(loading || userPrediction !== null || !canPredict) return\r\n\r\n    setActiveVariant(predict)\r\n    onPrediction(predict)\r\n  }\r\n\r\n  return(\r\n    <Div>\r\n      <Card style={{display:'flex',flexDirection:'column'}}>\r\n        <Header>{title}</Header>\r\n        {loading\r\n          ? <Div><Spinner/></Div>\r\n          : <Div>\r\n            {variants.map((variant,i) => {\r\n              return <div\r\n                key={i}\r\n                className=\"prediction__btn\"\r\n                onClick={() => doPrediction(i as 0|1)}\r\n                style={{background : (!canPredict || userPrediction !== null) ? 'rgba(0,0,0,0.3)' : ''}}\r\n              >\r\n                <div className=\"prediction__variant\">\r\n                  {variant}\r\n                  {predictionsInfo && ` - ${i === 0 ? predictionsInfo.over : predictionsInfo.under}`}                  \r\n                </div>\r\n                {predictionsInfo &&\r\n                  <div className=\"prediction__stat\">\r\n                    {(userPrediction==i || activeVariant === i) && <Icon12Verified/>}\r\n                    {predictionsInfo.over + predictionsInfo.under === 0\r\n                      ? 0\r\n                      : (([predictionsInfo.over,predictionsInfo.under][i]/(predictionsInfo.over + predictionsInfo.under))*100).toFixed(0)\r\n                    }%\r\n                  </div>\r\n                }\r\n              </div>\r\n            })}\r\n          </Div>\r\n        }\r\n\r\n      </Card>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default Prediction",["225","226"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\predictions.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\predictions.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\user.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\nowLessThen.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\League\\index.tsx",["227","228","229"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\league.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\AddWidget\\index.tsx",["230","231","232"],"import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {\r\n  Button,\r\n  Div,\r\n  FormItem,\r\n  Gallery,\r\n  Link,\r\n  NativeSelect,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Spinner,\r\n} from '@vkontakte/vkui';\r\nimport { Icon56CheckCircleOutline } from '@vkontakte/icons';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport api from '../../api';\r\nimport { TournamentInfo } from '../../types/TournamentInfo';\r\nimport { BASE_URL } from '../../api/BASE_URL';\r\n\r\ninterface AddWidgetPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst APP_ID = 7746401\r\nconst VERSION = '5.126'\r\n\r\nconst AddWidgetPanel : React.FC<AddWidgetPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const {user} = useSelector((s:RootState) => s.user)\r\n  // const user = {id:612381684}\r\n  const {activeLeague} = useSelector((s:RootState) => s.league)\r\n\r\n  const goToLeague = () => {\r\n    dispatch(goBack())\r\n  }\r\n\r\n  const [step, setStep] = React.useState(0)\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [error, setError] = React.useState('')\r\n\r\n  const [activeGroup, setActiveGroup] = React.useState<number|null>(null)\r\n  const [activeTournament, setActiveTournament] = React.useState<number>(+activeLeague!.tournaments[0].id)\r\n  const [groups,setGroups] = React.useState<{id:number,name:string,photo_50:string}[]>([])\r\n  const [accessToken,setAccessToken] = React.useState('')\r\n  const [appInGroup,setAppInGroup] = React.useState(false)\r\n  \r\n  const requestGroups = async () => {\r\n    try\r\n    {\r\n      setLoading(true)\r\n      const {access_token} = await bridge.send('VKWebAppGetAuthToken',{app_id:APP_ID,scope:'groups'})\r\n      const res = await bridge.send('VKWebAppCallAPIMethod', {\r\n        method : 'groups.get', params : {user_id : user!.id,filter:'admin',extended:1,fields:'name',access_token,v:VERSION}\r\n      })\r\n      setLoading(false)\r\n\r\n      const groups = res.response.items\r\n      if(groups.length === 0)\r\n      {\r\n        setError('У вас нет администрируемых групп')\r\n        setStep(-1)\r\n      }\r\n      else\r\n      {\r\n        setGroups(groups)\r\n        setActiveGroup(groups[0].id)\r\n        setStep(s=>s+1)\r\n      }\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n    finally\r\n    {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const changeGroup = (e : React.FormEvent<HTMLSelectElement>) => {\r\n    setAccessToken('')\r\n    setActiveGroup(+e.currentTarget.value)\r\n  }\r\n\r\n  const changeTournament = (e : React.FormEvent<HTMLSelectElement>) => {\r\n    setActiveTournament(+e.currentTarget.value)\r\n  }\r\n\r\n  const addWidget = async () => {\r\n    setLoading(true)\r\n    try\r\n    {\r\n      const tournament : TournamentInfo = await api.getTournament({\r\n        tournamentId:activeTournament!,\r\n        siteType:activeLeague!.tournaments[0].siteType,\r\n      })\r\n\r\n      const createMatch = ({\r\n        date, home, away, score, url\r\n      } : {\r\n        date : string,\r\n        home : string,\r\n        away : string,\r\n        score : number[]\r\n        url : string\r\n      }) => {\r\n        return {\r\n          state : date,\r\n          team_a : { name : home },\r\n          team_b : { name : away },\r\n          score : { team_a : score[0], team_b : score[1] }\r\n        }\r\n      }\r\n\r\n      const leagueLink = `https://vk.com/app7746401#league${activeLeague?.id}`\r\n\r\n      const games = tournament.calendar.length !== 0 ? tournament.calendar.slice(0,4) : tournament.results.slice(0,4)\r\n      const matches = games.map(game => {\r\n        const score = !game.score ? [0,0] : game.score.split(':').map(s=>+s)\r\n        const date = game.date && game.date !== '-'\r\n          ? `${game.date.replace('.2021','').replace('.2020','').replace(' ','')}${game.time ? `, ${game.time}` : ''}`\r\n          : (game.score ? 'Итог' : 'Информации нет')\r\n        return createMatch({\r\n          date,\r\n          home:game.homeName,\r\n          away:game.awayName,\r\n          score,\r\n          url : leagueLink,\r\n        })\r\n      })\r\n\r\n      const data = JSON.stringify({\r\n        title: \"Матчи\",\r\n        title_url: leagueLink,\r\n        more: \"Весь список\",\r\n        more_url: leagueLink,\r\n        matches,\r\n      })\r\n\r\n      const code = `return ${data};`\r\n\r\n      await bridge.send('VKWebAppShowCommunityWidgetPreviewBox',{group_id : activeGroup!, type : 'matches', code,})\r\n\r\n      await api.addWidget({\r\n        user_id : user!.id,\r\n        group_id : activeGroup!,\r\n        app_id : APP_ID,\r\n        access_token : accessToken,\r\n        v : VERSION,\r\n        league_id : activeLeague!.id,\r\n        tournament_id : activeTournament!,\r\n        site_type : activeLeague!.tournaments[0].siteType\r\n      })\r\n      setStep(s=>s+1)\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n    finally\r\n    {\r\n      setLoading(false)      \r\n    }\r\n    const URL = `${BASE_URL}/widgets/update/${activeGroup}`\r\n    await fetch(URL,{method:'PUT'})\r\n  }\r\n\r\n  const requestToken = async () => {\r\n    try\r\n    {\r\n      const {access_token} = await bridge.send(\"VKWebAppGetCommunityToken\", {\r\n        app_id : APP_ID,\r\n        group_id : activeGroup!,\r\n        scope:'app_widget'\r\n      })\r\n      setAccessToken(access_token)\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  const addInGroup = async () => {\r\n    try\r\n    {\r\n      await bridge.send('VKWebAppAddToCommunity')\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('Error : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToLeague} />}\r\n      >Виджет</PanelHeader>\r\n\r\n      {loading && <Div style={{marginTop:28}}><Spinner/></Div>}\r\n      {error && <h1>Error :(</h1>}\r\n\r\n      {step === 0 && !loading && <>\r\n        <Placeholder\r\n          action={<Button onClick={requestGroups} mode=\"tertiary\">Запросить группы</Button>}\r\n        >\r\n          Необходимо выбрать группу, в которую будет установлен виджет.\r\n          Для получения списка групп понадобится токен доступа.\r\n        </Placeholder>\r\n      </>}\r\n\r\n      {step === 1 && <>\r\n        <FormItem top=\"Выберите группу\">\r\n          <NativeSelect\r\n            onChange={changeGroup}\r\n          >\r\n            {groups.map(group => {\r\n              return <option key={group.id} value={group.id}>{group.name}</option>\r\n            })}\r\n          </NativeSelect>\r\n        </FormItem>\r\n        {!accessToken\r\n          ? <Button\r\n              before={'❌'}\r\n              mode=\"tertiary\"\r\n              style={{width:'100%',display:'flex',color:'var(--accent)'}}\r\n              size=\"l\"\r\n              onClick={requestToken}\r\n            >Предоставить токен</Button>\r\n          : <div style={{paddingLeft:12}}>✅ Токен предоставлен</div>\r\n        }\r\n        {accessToken &&\r\n          <Div>\r\n            <Button\r\n              style={{width:'100%'}}\r\n              size=\"l\"\r\n              onClick={() => setStep(s=>s+1)}\r\n            >Далее</Button>\r\n          </Div>\r\n        }\r\n      </>}\r\n\r\n      {step === 2 && !loading && <>\r\n          <FormItem top=\"Выберите лигу для отображения\">\r\n          <NativeSelect\r\n            onChange={changeTournament}\r\n          >\r\n            {activeLeague!.tournaments.map(t => {\r\n              return <option key={t.id} value={t.id}>{t.name}</option>\r\n            })}\r\n          </NativeSelect>\r\n        </FormItem>\r\n        \r\n        <Button\r\n          before={'⚠️'}\r\n          mode=\"tertiary\"\r\n          style={{width:'100%',display:'flex',color:'var(--accent)'}}\r\n          size=\"l\"\r\n          onClick={addInGroup}\r\n        >Убедитесь, что приложение установлено в сообществе</Button>\r\n        <Div>\r\n          <Button\r\n            style={{width:'100%'}}\r\n            size=\"l\"\r\n            onClick={addWidget}\r\n          >Предпросмотр</Button>\r\n        </Div>\r\n      </>}\r\n\r\n      {step === 3 && !loading && <>\r\n        <Placeholder\r\n          icon={<Icon56CheckCircleOutline fill=\"green\"/>}\r\n        >\r\n          Виджет установлен <br/><br/>\r\n          ⚠️ <br/>\r\n          В данный момент он доступен только администраторам сообщества.\r\n          Чтобы открыть его для всех, перейдите с компьютера в\r\n          <Link target=\"_blank\" href={`https://vk.com/club${activeGroup}?act=apps`}> управление сообществом {'>'} приложения </Link>\r\n          и установите поле <b>Видимость виджета приложения </b> в значение <b>все пользователи</b>\r\n        </Placeholder>\r\n      </>}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default AddWidgetPanel","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\widget.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Actions\\index.tsx",["233","234"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Score\\index.tsx",[],{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"239","severity":1,"message":"240","line":4,"column":9,"nodeType":"241","messageId":"242","endLine":4,"endColumn":27},{"ruleId":"239","severity":1,"message":"243","line":10,"column":10,"nodeType":"241","messageId":"242","endLine":10,"endColumn":21},{"ruleId":"244","severity":1,"message":"245","line":56,"column":5,"nodeType":"246","endLine":56,"endColumn":7,"suggestions":"247"},{"ruleId":"239","severity":1,"message":"248","line":18,"column":10,"nodeType":"241","messageId":"242","endLine":18,"endColumn":22},{"ruleId":"239","severity":1,"message":"249","line":42,"column":94,"nodeType":"241","messageId":"242","endLine":42,"endColumn":106},{"ruleId":"250","severity":1,"message":"251","line":101,"column":37,"nodeType":"252","messageId":"253","endLine":101,"endColumn":43},{"ruleId":"239","severity":1,"message":"254","line":5,"column":3,"nodeType":"241","messageId":"242","endLine":5,"endColumn":6},{"ruleId":"239","severity":1,"message":"255","line":6,"column":3,"nodeType":"241","messageId":"242","endLine":6,"endColumn":8},{"ruleId":"239","severity":1,"message":"256","line":11,"column":3,"nodeType":"241","messageId":"242","endLine":11,"endColumn":10},{"ruleId":"239","severity":1,"message":"257","line":24,"column":8,"nodeType":"241","messageId":"242","endLine":24,"endColumn":16},{"ruleId":"239","severity":1,"message":"258","line":42,"column":11,"nodeType":"241","messageId":"242","endLine":42,"endColumn":26},{"ruleId":"239","severity":1,"message":"259","line":42,"column":28,"nodeType":"241","messageId":"242","endLine":42,"endColumn":35},{"ruleId":"239","severity":1,"message":"260","line":44,"column":48,"nodeType":"241","messageId":"242","endLine":44,"endColumn":68},{"ruleId":"235","replacedBy":"261"},{"ruleId":"237","replacedBy":"262"},{"ruleId":"239","severity":1,"message":"263","line":4,"column":3,"nodeType":"241","messageId":"242","endLine":4,"endColumn":7},{"ruleId":"239","severity":1,"message":"264","line":6,"column":3,"nodeType":"241","messageId":"242","endLine":6,"endColumn":19},{"ruleId":"239","severity":1,"message":"265","line":7,"column":3,"nodeType":"241","messageId":"242","endLine":7,"endColumn":7},{"ruleId":"239","severity":1,"message":"266","line":14,"column":3,"nodeType":"241","messageId":"242","endLine":14,"endColumn":7},{"ruleId":"239","severity":1,"message":"267","line":15,"column":3,"nodeType":"241","messageId":"242","endLine":15,"endColumn":11},{"ruleId":"239","severity":1,"message":"248","line":21,"column":24,"nodeType":"241","messageId":"242","endLine":21,"endColumn":36},{"ruleId":"239","severity":1,"message":"268","line":32,"column":8,"nodeType":"241","messageId":"242","endLine":32,"endColumn":18},{"ruleId":"239","severity":1,"message":"269","line":42,"column":7,"nodeType":"241","messageId":"242","endLine":42,"endColumn":11},{"ruleId":"239","severity":1,"message":"270","line":52,"column":10,"nodeType":"241","messageId":"242","endLine":52,"endColumn":25},{"ruleId":"239","severity":1,"message":"271","line":52,"column":37,"nodeType":"241","messageId":"242","endLine":52,"endColumn":54},{"ruleId":"239","severity":1,"message":"272","line":54,"column":21,"nodeType":"241","messageId":"242","endLine":54,"endColumn":33},{"ruleId":"239","severity":1,"message":"273","line":55,"column":10,"nodeType":"241","messageId":"242","endLine":55,"endColumn":23},{"ruleId":"239","severity":1,"message":"274","line":55,"column":25,"nodeType":"241","messageId":"242","endLine":55,"endColumn":41},{"ruleId":"239","severity":1,"message":"275","line":56,"column":10,"nodeType":"241","messageId":"242","endLine":56,"endColumn":24},{"ruleId":"239","severity":1,"message":"276","line":73,"column":11,"nodeType":"241","messageId":"242","endLine":73,"endColumn":23},{"ruleId":"239","severity":1,"message":"277","line":74,"column":11,"nodeType":"241","messageId":"242","endLine":74,"endColumn":17},{"ruleId":"239","severity":1,"message":"278","line":87,"column":9,"nodeType":"241","messageId":"242","endLine":87,"endColumn":18},{"ruleId":"244","severity":1,"message":"279","line":129,"column":5,"nodeType":"246","endLine":129,"endColumn":7,"suggestions":"280"},{"ruleId":"239","severity":1,"message":"281","line":143,"column":9,"nodeType":"241","messageId":"242","endLine":143,"endColumn":22},{"ruleId":"239","severity":1,"message":"265","line":11,"column":3,"nodeType":"241","messageId":"242","endLine":11,"endColumn":7},{"ruleId":"239","severity":1,"message":"282","line":15,"column":3,"nodeType":"241","messageId":"242","endLine":15,"endColumn":14},{"ruleId":"239","severity":1,"message":"283","line":19,"column":3,"nodeType":"241","messageId":"242","endLine":19,"endColumn":27},{"ruleId":"239","severity":1,"message":"284","line":30,"column":10,"nodeType":"241","messageId":"242","endLine":30,"endColumn":27},{"ruleId":"239","severity":1,"message":"285","line":30,"column":29,"nodeType":"241","messageId":"242","endLine":30,"endColumn":48},{"ruleId":"239","severity":1,"message":"286","line":32,"column":24,"nodeType":"241","messageId":"242","endLine":32,"endColumn":40},{"ruleId":"239","severity":1,"message":"287","line":35,"column":10,"nodeType":"241","messageId":"242","endLine":35,"endColumn":20},{"ruleId":"239","severity":1,"message":"288","line":36,"column":10,"nodeType":"241","messageId":"242","endLine":36,"endColumn":24},{"ruleId":"289","severity":1,"message":"290","line":8,"column":1,"nodeType":"291","endLine":18,"endColumn":2},{"ruleId":"239","severity":1,"message":"292","line":4,"column":10,"nodeType":"241","messageId":"242","endLine":4,"endColumn":21},{"ruleId":"239","severity":1,"message":"293","line":28,"column":9,"nodeType":"241","messageId":"242","endLine":28,"endColumn":17},{"ruleId":"239","severity":1,"message":"294","line":8,"column":3,"nodeType":"241","messageId":"242","endLine":8,"endColumn":10},{"ruleId":"295","severity":1,"message":"296","line":56,"column":37,"nodeType":"297","messageId":"298","endLine":56,"endColumn":39},{"ruleId":"235","replacedBy":"299"},{"ruleId":"237","replacedBy":"300"},{"ruleId":"239","severity":1,"message":"301","line":10,"column":3,"nodeType":"241","messageId":"242","endLine":10,"endColumn":9},{"ruleId":"239","severity":1,"message":"302","line":11,"column":3,"nodeType":"241","messageId":"242","endLine":11,"endColumn":7},{"ruleId":"239","severity":1,"message":"303","line":26,"column":8,"nodeType":"241","messageId":"242","endLine":26,"endColumn":18},{"ruleId":"239","severity":1,"message":"304","line":8,"column":3,"nodeType":"241","messageId":"242","endLine":8,"endColumn":10},{"ruleId":"239","severity":1,"message":"305","line":55,"column":10,"nodeType":"241","messageId":"242","endLine":55,"endColumn":20},{"ruleId":"239","severity":1,"message":"306","line":55,"column":21,"nodeType":"241","messageId":"242","endLine":55,"endColumn":34},{"ruleId":"239","severity":1,"message":"307","line":6,"column":3,"nodeType":"241","messageId":"242","endLine":6,"endColumn":26},{"ruleId":"239","severity":1,"message":"308","line":34,"column":9,"nodeType":"241","messageId":"242","endLine":34,"endColumn":20},"no-native-reassign",["309"],"no-negated-in-lhs",["310"],"@typescript-eslint/no-unused-vars","'AdaptivityProvider' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["311"],"'requestSquad' is defined but never used.","'activeVkHref' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Div' is defined but never used.","'Group' is defined but never used.","'Spinner' is defined but never used.","'TableRow' is defined but never used.","'activeTeamSquad' is assigned a value but never used.","'loading' is assigned a value but never used.","'activeTournamentName' is assigned a value but never used.",["309"],["310"],"'Cell' is defined but never used.","'HorizontalScroll' is defined but never used.","'List' is defined but never used.","'Tabs' is defined but never used.","'TabsItem' is defined but never used.","'Prediction' is defined but never used.","'TABS' is assigned a value but never used.","'predictionsInfo' is assigned a value but never used.","'loadingPrediction' is assigned a value but never used.","'setActiveTab' is assigned a value but never used.","'activeTeamTab' is assigned a value but never used.","'setActiveTeamTab' is assigned a value but never used.","'userPrediction' is assigned a value but never used.","'tournamentId' is assigned a value but never used.","'clubId' is assigned a value but never used.","'doPredict' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'activeDivisionId', 'activeGameEvents', 'activeGameInfo.matchHref', 'activeGameInfo.tour', 'activeSiteType', 'activeTournament', 'canPredict', 'dispatch', and 'user'. Either include them or remove the dependency array.",["312"],"'noInformation' is assigned a value but never used.","'usePlatform' is defined but never used.","'Icon28ChevronDownOutline' is defined but never used.","'requestTournament' is defined but never used.","'setActiveTournament' is defined but never used.","'TOURNAMENT_PANEL' is defined but never used.","'Tournament' is defined but never used.","'toggleCollapse' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Icon24Globe' is defined but never used.","'goToTeam' is assigned a value but never used.","'Counter' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["309"],["310"],"'Header' is defined but never used.","'Link' is defined but never used.","'ListHeader' is defined but never used.","'Gallery' is defined but never used.","'appInGroup' is assigned a value but never used.","'setAppInGroup' is assigned a value but never used.","'Icon28AddCircleFillBlue' is defined but never used.","'joinToGroup' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},"Update the dependencies array to be: [dispatch]",{"range":"317","text":"318"},"Update the dependencies array to be: [activeDivisionId, activeGameEvents, activeGameInfo.matchHref, activeGameInfo.tour, activeSiteType, activeTournament, canPredict, dispatch, user]",{"range":"319","text":"320"},[2614,2616],"[dispatch]",[4192,4194],"[activeDivisionId, activeGameEvents, activeGameInfo.matchHref, activeGameInfo.tour, activeSiteType, activeTournament, canPredict, dispatch, user]"]