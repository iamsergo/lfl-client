[{"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\index.tsx":"1","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\App.tsx":"2","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournament\\index.tsx":"3","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByTour.ts":"4","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Team\\index.tsx":"5","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByClub.ts":"6","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Game\\index.tsx":"7","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournaments\\index.tsx":"8","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\store.ts":"9","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\rootReducer.ts":"10","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\navigation.ts":"11","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\constans\\index.ts":"12","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournaments.ts":"13","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\index.ts":"14","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\games.ts":"15","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\tournaments.ts":"16","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\squads.ts":"17","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\BASE_URL.ts":"18","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\request.ts":"19","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournament.ts":"20","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\team.ts":"21","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\game.ts":"22","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\PlainHeader.tsx":"23","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\GameHeader.tsx":"24","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GameInfoTabs\\index.tsx":"25","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GamesList\\index.tsx":"26","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Table\\TableRow.tsx":"27","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\EventRow\\index.tsx":"28","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\ListHeader\\index.tsx":"29","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\user.ts":"30","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Prediction\\index.tsx":"31","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\predictions.ts":"32","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\predictions.ts":"33","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\user.ts":"34","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\nowLessThen.ts":"35"},{"size":584,"mtime":1612101969720,"results":"36","hashOfConfig":"37"},{"size":2617,"mtime":1612110322800,"results":"38","hashOfConfig":"37"},{"size":5548,"mtime":1612121807523,"results":"39","hashOfConfig":"37"},{"size":354,"mtime":1611816832719,"results":"40","hashOfConfig":"37"},{"size":3744,"mtime":1612121789391,"results":"41","hashOfConfig":"37"},{"size":206,"mtime":1611753256674,"results":"42","hashOfConfig":"37"},{"size":7121,"mtime":1612110480070,"results":"43","hashOfConfig":"37"},{"size":1826,"mtime":1612105044413,"results":"44","hashOfConfig":"37"},{"size":291,"mtime":1611856366447,"results":"45","hashOfConfig":"37"},{"size":562,"mtime":1612077568557,"results":"46","hashOfConfig":"37"},{"size":1009,"mtime":1612109867198,"results":"47","hashOfConfig":"37"},{"size":160,"mtime":1611779158990,"results":"48","hashOfConfig":"37"},{"size":1450,"mtime":1611998738393,"results":"49","hashOfConfig":"37"},{"size":367,"mtime":1612086611622,"results":"50","hashOfConfig":"37"},{"size":209,"mtime":1612092061592,"results":"51","hashOfConfig":"37"},{"size":196,"mtime":1611921937310,"results":"52","hashOfConfig":"37"},{"size":272,"mtime":1611778173653,"results":"53","hashOfConfig":"37"},{"size":108,"mtime":1612098613198,"results":"54","hashOfConfig":"37"},{"size":104,"mtime":1611778010684,"results":"55","hashOfConfig":"37"},{"size":1054,"mtime":1612112962667,"results":"56","hashOfConfig":"37"},{"size":2087,"mtime":1612113083100,"results":"57","hashOfConfig":"37"},{"size":2497,"mtime":1612092093236,"results":"58","hashOfConfig":"37"},{"size":442,"mtime":1612099477319,"results":"59","hashOfConfig":"37"},{"size":1134,"mtime":1611967846577,"results":"60","hashOfConfig":"37"},{"size":1107,"mtime":1611966883106,"results":"61","hashOfConfig":"37"},{"size":1300,"mtime":1612108401035,"results":"62","hashOfConfig":"37"},{"size":1287,"mtime":1612108879539,"results":"63","hashOfConfig":"37"},{"size":640,"mtime":1611965479659,"results":"64","hashOfConfig":"37"},{"size":595,"mtime":1612002832923,"results":"65","hashOfConfig":"37"},{"size":1302,"mtime":1612086632767,"results":"66","hashOfConfig":"37"},{"size":2270,"mtime":1612109396518,"results":"67","hashOfConfig":"37"},{"size":638,"mtime":1612081063560,"results":"68","hashOfConfig":"37"},{"size":1951,"mtime":1612089898128,"results":"69","hashOfConfig":"37"},{"size":458,"mtime":1612086598622,"results":"70","hashOfConfig":"37"},{"size":237,"mtime":1612088675264,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"mhq12z",{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"74"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\index.tsx",[],["150","151"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\App.tsx",["152","153","154"],"import React from 'react';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport {AdaptivityProvider, AppRoot, ConfigProvider, ScreenSpinner, View} from '@vkontakte/vkui';\n\nimport TournamentPanel from './panels/Tournament';\nimport TeamPanel from './panels/Team';\nimport GamePanel from './panels/Game';\nimport TournamentsPanel from './panels/Tournaments';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from './store/rootReducer';\nimport { GAME_PANEL, TEAM_PANEL, TOURNAMENTS_PANEL, TOURNAMENT_PANEL } from './constans';\nimport { requestTournaments } from './store/slices/tournaments';\nimport { requestUser } from './store/slices/user';\nimport { goBack } from './store/slices/navigation';\nimport { clearActiveGame, goBackToGame } from './store/slices/game';\nimport { clearActiveteam, goBackToTeam } from './store/slices/team';\nimport { clearPredictionsInfo } from './store/slices/predictions';\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const {activePanel, history} = useSelector((s:RootState) => s.navigation)\n  const {loading : loadingTournaments, error : errorTournaments, cities} = useSelector((s:RootState) => s.tournaments)\n  const {loading : loadingUser} = useSelector((s:RootState) => s.user)\n\n  React.useEffect(() => {\n    const initApp = async () => {\n      // const userInfo = await bridge.send('VKWebAppGetUserInfo')\n      const userInfo = {id : 17}\n      dispatch(requestUser(userInfo.id))\n      dispatch(requestTournaments())\n      bridge.send('VKWebAppEnableSwipeBack').then(res=>res).catch(err=>err)\n    }\n    \n    initApp()\n  },[])\n\n  const goToBack = () => {\n    \n    \n    const currentPanel = history[history.length-1]\n    const newPanel = history[history.length-2]\n    \n    if(currentPanel === 'team')\n    {\n      if(newPanel === 'game') dispatch(goBackToGame())\n\n      dispatch(clearActiveteam())\n    }\n    else if(currentPanel === 'game')\n    {\n      if(newPanel === 'team') dispatch(goBackToTeam())\n\n      dispatch(clearActiveGame())\n      dispatch(clearPredictionsInfo())\n    }\n    \n    dispatch(goBack())\n  }\n\n  return (\n    <ConfigProvider isWebView={true}>\n      <AppRoot>\n        <View\n          activePanel={activePanel}\n          onSwipeBack={goToBack}\n          history={history}\n          popout={(loadingTournaments || loadingUser) && <ScreenSpinner />}\n        >\n          <TournamentsPanel id={TOURNAMENTS_PANEL} cities={cities}/>\n          <TournamentPanel id={TOURNAMENT_PANEL}/>\n          <GamePanel id={GAME_PANEL}/>\n          <TeamPanel id={TEAM_PANEL}/>\n        </View>\n      </AppRoot>\n    </ConfigProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournament\\index.tsx",["155"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByTour.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Team\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\getGamesByClub.ts",[],["156","157"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Game\\index.tsx",["158"],"import React from 'react';\r\n\r\nimport {\r\n  Cell,\r\n  Div,\r\n  HorizontalScroll,\r\n  List,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Spinner,\r\n  Tabs,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { goBackToTeam, requestSquad, setActiveTeam } from '../../store/slices/team';\r\nimport { clearActiveGame, goForwardToGame, requestGame } from '../../store/slices/game';\r\nimport {useAppDispatch} from '../../store/store';\r\n\r\nimport GameHeader from '../../components/Headers/GameHeader';\r\nimport GameInfoTabs from '../../components/GameInfoTabs';\r\nimport EventRow from '../../components/EventRow';\r\n\r\nimport { TEAM_PANEL } from '../../constans';\r\n\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\nimport Prediction from '../../components/Prediction';\r\nimport { requestDoPrediction, requestPredictions, clearPredictionsInfo } from '../../store/slices/predictions';\r\nimport { addPrediction } from '../../store/slices/user';\r\nimport { nowLessThen } from '../../utils/nowLessThen';\r\n\r\ninterface GamePanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst TABS = [ 'События', 'Составы',]\r\n\r\nconst GamePanel : React.FC<GamePanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeGameInfo,activeGameEvents,loading} = useSelector((s:RootState) => s.game)\r\n  const {activeTournament} = useSelector((s:RootState) => s.tournament)\r\n  const {user} = useSelector((s:RootState) => s.user)\r\n  const {predictionsInfo, loading : loadingPrediction} = useSelector((s:RootState) => s.predictions)\r\n\r\n  const [activeTab, setActiveTab] = React.useState(0)\r\n  const [activeTeamTab, setActiveTeamTab] = React.useState(0)\r\n  const [userPrediction, setUserPrediction] = React.useState<0|1|null>(null)\r\n\r\n  const canPredict = nowLessThen(\r\n    activeGameInfo.date.split(' ')[0].split('.').map(s=>+s),\r\n    activeGameInfo.time.split(':').map(s=>+s)\r\n  )\r\n\r\n  const goToBack = () => {\r\n    const isToTeam = history[history.length-2] === 'team'\r\n    if(isToTeam) dispatch(goBackToTeam())\r\n    \r\n    dispatch(goBack())\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n  }\r\n\r\n  const goToTeam = (team : ClubInfo) => {\r\n    const tournamentId = activeTournament!.tournamentId\r\n    const clubId = team.href.replace('/club','')\r\n\r\n    dispatch(goForwardToGame())\r\n    \r\n    dispatch(setActiveTeam(team))\r\n    dispatch(goForward(TEAM_PANEL))\r\n\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n\r\n    dispatch(requestSquad({tournamentId, clubId}))\r\n  }\r\n\r\n  const doPredict = (prediction : 0 | 1) => {\r\n    const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\r\n    dispatch(addPrediction({matchId, prediction}))\r\n    dispatch(requestDoPrediction({ matchId, prediction, userId : user!.id, }))\r\n      .then(_ => dispatch(requestPredictions(matchId)))\r\n    setUserPrediction(prediction)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if(activeGameEvents) return\r\n\r\n    if(activeGameInfo.matchHref.includes('/empty_protocol'))\r\n    {\r\n      const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\r\n      const prediction = user!.predictions.find(p => p.matchId === matchId)\r\n      if(prediction)\r\n      {\r\n        setUserPrediction(prediction.prediction)\r\n      }\r\n\r\n      if(!canPredict || !!prediction)\r\n        dispatch(requestPredictions(matchId))\r\n      return\r\n    }\r\n\r\n    const req = dispatch(requestGame(+activeGameInfo.matchHref.replace('/match','')))\r\n    return () => {\r\n      req.abort()\r\n    }\r\n  },[])\r\n\r\n  const home = {\r\n    name : activeGameInfo.homeName,\r\n    href : activeGameInfo.homeHref,\r\n    logo : activeGameInfo.homeLogo,\r\n  }\r\n  \r\n  const away = {\r\n    name : activeGameInfo.awayName,\r\n    href : activeGameInfo.awayHref,\r\n    logo : activeGameInfo.awayLogo,\r\n  }\r\n\r\n  const noInformation = activeGameEvents && !activeGameEvents.squads.some(s => s.length > 0)\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Матч</PanelHeader>\r\n\r\n      <GameHeader\r\n        home={home}\r\n        away={away}\r\n        score={!activeGameInfo.score ? '-:-' : activeGameInfo.score}\r\n        onGoToTeam={goToTeam}\r\n      />\r\n\r\n      <GameInfoTabs\r\n        date={activeGameInfo.date !== '-' ? `${activeGameInfo.date}, ${activeGameInfo.time}` : null}\r\n        refery={activeGameEvents && activeGameEvents.refery !== '-' ? activeGameEvents.refery : null}\r\n        place={activeGameEvents && activeGameEvents.place !== '-' ? activeGameEvents.place : null}\r\n      />\r\n\r\n      {!loading && !noInformation && activeGameInfo.score &&\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => setActiveTab(i)}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      }\r\n      \r\n      {!activeGameInfo.score &&\r\n        <Prediction\r\n          canPredict={canPredict}\r\n          userPrediction={userPrediction}\r\n          predictionsInfo={predictionsInfo}\r\n          loading={loadingPrediction}\r\n          title=\"Количество голов\"\r\n          variants={['Больше 7', 'Не больше 7']}\r\n          onPrediction={doPredict}\r\n        />\r\n      }\r\n\r\n      {noInformation && <Placeholder>Нет информации</Placeholder>}\r\n      \r\n      {loading && <Div><Spinner/></Div>}\r\n\r\n\r\n      {!loading && activeTab === 0 && activeGameEvents &&\r\n        activeGameEvents.events.map((e,i) => {\r\n          let eventSymbol = ''\r\n          if(e.type === 'goal') eventSymbol = '⚽'\r\n          else if(e.type === 'assist') eventSymbol = '✅'\r\n          else if(e.type === 'yc') eventSymbol = '🟨'\r\n          else eventSymbol = '🟥'\r\n          \r\n          return <EventRow\r\n            key={i}\r\n            playerName={e.name}\r\n            eventType={eventSymbol}\r\n            isHome={e.team === 0}\r\n            minute={e.minute}\r\n          />\r\n        })\r\n      }\r\n\r\n      {!loading && activeTab === 1 && <>\r\n        <Tabs mode=\"buttons\">\r\n          {[activeGameInfo.homeName,activeGameInfo.awayName].map((team,i) => {\r\n            return <TabsItem\r\n              key={i}\r\n              selected={activeTeamTab === i}\r\n              onClick={() => setActiveTeamTab(i)}\r\n            >{team}</TabsItem>\r\n          })}\r\n        </Tabs>\r\n        <List>\r\n          {activeGameEvents &&\r\n            activeGameEvents.squads[activeTeamTab].map((player,i) => {\r\n              return <Cell\r\n                disabled\r\n                key={i}\r\n                description={activeGameInfo[activeTeamTab === 0 ? 'homeName' : 'awayName']}\r\n              >{player.name}</Cell>\r\n            })\r\n          }\r\n        </List>\r\n      </>}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default GamePanel","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\panels\\Tournaments\\index.tsx",["159","160","161","162"],"import React from 'react';\r\n\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  Cell, \r\n  Div, \r\n  Group, \r\n  Header, \r\n  List, \r\n  Panel, \r\n  PanelHeader\r\n} from '@vkontakte/vkui';\r\nimport { Icon28ChevronRightOutline, Icon28ChevronDownOutline } from '@vkontakte/icons';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { goForward } from '../../store/slices/navigation';\r\nimport { setActiveTournament } from '../../store/slices/tournament';\r\n\r\nimport { TOURNAMENT_PANEL } from '../../constans';\r\n\r\nimport { CityInfo } from '../../types/CityInfo';\r\nimport { Tournament } from '../../types/Tournament';\r\nimport { toggleCollapse } from '../../store/slices/tournaments';\r\nimport ListHeader from '../../components/ListHeader';\r\n\r\ninterface TournamentsPanelProps\r\n{\r\n  id : string\r\n  cities : (CityInfo & {collapsed : boolean})[]\r\n}\r\n\r\nconst TournamentsPanel : React.FC<TournamentsPanelProps> = ({\r\n  id,\r\n  cities,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const goToTournament = (t : Tournament) => {\r\n    dispatch(goForward(TOURNAMENT_PANEL))\r\n    dispatch(setActiveTournament(t))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader separator={false}>Турниры</PanelHeader>\r\n      \r\n      {cities.map((city, i) => {\r\n        return <Div key={i}>\r\n          <Card>\r\n            <Header>{city.title}</Header>\r\n            <List>\r\n              {city.tournaments.map((t,i) => {\r\n                return <Cell\r\n                  key={i}\r\n                  before={<Avatar mode=\"image\" src={t.logo} />}\r\n                  after={<Icon28ChevronRightOutline/>}\r\n                  description={t.city}\r\n                  onClick={() => goToTournament(t)}\r\n                >{t.name}</Cell>\r\n              })}\r\n            </List>\r\n          </Card>\r\n        </Div>\r\n      })}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TournamentsPanel","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\store.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\rootReducer.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\navigation.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\constans\\index.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournaments.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\index.ts",["163"],"import {getGames} from './games'\r\nimport {getTournaments} from './tournaments'\r\nimport {getSquads} from './squads'\r\nimport {getPredictionsByMatch,doPrediction} from './predictions'\r\nimport {getUser, registerUser} from './user'\r\n\r\nexport default {\r\n  getGames,\r\n  getTournaments,\r\n  getSquads,\r\n  getPredictionsByMatch,\r\n  doPrediction,\r\n  getUser,\r\n  registerUser,\r\n}","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\games.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\tournaments.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\squads.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\BASE_URL.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\request.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\tournament.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\team.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\game.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\PlainHeader.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Headers\\GameHeader.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GameInfoTabs\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\GamesList\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Table\\TableRow.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\EventRow\\index.tsx",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\ListHeader\\index.tsx",[],["164","165"],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\user.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\components\\Prediction\\index.tsx",["166"],"import React from 'react';\r\nimport './Prediction.sass';\r\n\r\nimport { Card, Div, Header, Spinner } from '@vkontakte/vkui';\r\nimport { PredictionInfo } from '../../types/PredictionInfo';\r\nimport { Icon12Verified } from '@vkontakte/icons';\r\n\r\ninterface PredictionProps\r\n{\r\n  title : string\r\n  variants : string[]\r\n  onPrediction : (variant : 0 | 1) => void\r\n  loading : boolean\r\n  predictionsInfo : PredictionInfo | null\r\n  userPrediction : 0 | 1 | null\r\n  canPredict : boolean\r\n}\r\n\r\nconst Prediction : React.FC<PredictionProps> = ({\r\n  title,\r\n  variants,\r\n  onPrediction,\r\n  loading,\r\n  predictionsInfo,\r\n  userPrediction,\r\n  canPredict,\r\n}) => {\r\n  const [activeVariant, setActiveVariant] = React.useState<0 | 1 | null>(userPrediction)\r\n  const doPrediction = (predict : 0|1) => {\r\n    if(loading || userPrediction !== null || !canPredict) return\r\n\r\n    setActiveVariant(predict)\r\n    onPrediction(predict)\r\n  }\r\n\r\n  return(\r\n    <Div>\r\n      <Card style={{display:'flex',flexDirection:'column'}}>\r\n        <Header>{title}</Header>\r\n        {loading\r\n          ? <Div><Spinner/></Div>\r\n          : <Div>\r\n            {variants.map((variant,i) => {\r\n              return <div\r\n                key={i}\r\n                className=\"prediction__btn\"\r\n                onClick={() => doPrediction(i as 0|1)}\r\n                style={{background : (!canPredict || userPrediction !== null) ? 'rgba(0,0,0,0.3)' : ''}}\r\n              >\r\n                <div className=\"prediction__variant\">\r\n                  {variant}\r\n                  {predictionsInfo && ` - ${i === 0 ? predictionsInfo.over : predictionsInfo.under}`}                  \r\n                </div>\r\n                {predictionsInfo &&\r\n                  <div className=\"prediction__stat\">\r\n                    {(userPrediction==i || activeVariant === i) && <Icon12Verified/>}\r\n                    {predictionsInfo.over + predictionsInfo.under === 0\r\n                      ? 0\r\n                      : (([predictionsInfo.over,predictionsInfo.under][i]/(predictionsInfo.over + predictionsInfo.under))*100).toFixed(0)\r\n                    }%\r\n                  </div>\r\n                }\r\n              </div>\r\n            })}\r\n          </Div>\r\n        }\r\n\r\n      </Card>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default Prediction","C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\predictions.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\store\\slices\\predictions.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\api\\user.ts",[],"C:\\Users\\Lenovo\\Desktop\\lfl-client\\src\\utils\\nowLessThen.ts",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":4,"column":9,"nodeType":"173","messageId":"174","endLine":4,"endColumn":27},{"ruleId":"171","severity":1,"message":"175","line":23,"column":48,"nodeType":"173","messageId":"174","endLine":23,"endColumn":64},{"ruleId":"176","severity":1,"message":"177","line":36,"column":5,"nodeType":"178","endLine":36,"endColumn":7,"suggestions":"179"},{"ruleId":"171","severity":1,"message":"180","line":4,"column":3,"nodeType":"173","messageId":"174","endLine":4,"endColumn":8},{"ruleId":"167","replacedBy":"181"},{"ruleId":"169","replacedBy":"182"},{"ruleId":"176","severity":1,"message":"183","line":115,"column":5,"nodeType":"178","endLine":115,"endColumn":7,"suggestions":"184"},{"ruleId":"171","severity":1,"message":"180","line":8,"column":3,"nodeType":"173","messageId":"174","endLine":8,"endColumn":8},{"ruleId":"171","severity":1,"message":"185","line":14,"column":37,"nodeType":"173","messageId":"174","endLine":14,"endColumn":61},{"ruleId":"171","severity":1,"message":"186","line":24,"column":10,"nodeType":"173","messageId":"174","endLine":24,"endColumn":24},{"ruleId":"171","severity":1,"message":"187","line":25,"column":8,"nodeType":"173","messageId":"174","endLine":25,"endColumn":18},{"ruleId":"188","severity":1,"message":"189","line":7,"column":1,"nodeType":"190","endLine":15,"endColumn":2},{"ruleId":"167","replacedBy":"191"},{"ruleId":"169","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":56,"column":37,"nodeType":"195","messageId":"196","endLine":56,"endColumn":39},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"@typescript-eslint/no-unused-vars","'AdaptivityProvider' is defined but never used.","Identifier","unusedVar","'errorTournaments' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["199"],"'Group' is defined but never used.",["197"],["198"],"React Hook React.useEffect has missing dependencies: 'activeGameEvents', 'activeGameInfo.matchHref', 'canPredict', 'dispatch', and 'user'. Either include them or remove the dependency array.",["200"],"'Icon28ChevronDownOutline' is defined but never used.","'toggleCollapse' is defined but never used.","'ListHeader' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["197"],["198"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [dispatch]",{"range":"205","text":"206"},"Update the dependencies array to be: [activeGameEvents, activeGameInfo.matchHref, canPredict, dispatch, user]",{"range":"207","text":"208"},[1584,1586],"[dispatch]",[3747,3749],"[activeGameEvents, activeGameInfo.matchHref, canPredict, dispatch, user]"]