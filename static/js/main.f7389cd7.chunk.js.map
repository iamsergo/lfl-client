{"version":3,"sources":["constans/index.ts","store/slices/navigation.ts","api/BASE_URL.ts","api/request.ts","api/index.ts","api/games.ts","api/tournaments.ts","api/squads.ts","api/predictions.ts","api/user.ts","api/widget.ts","store/slices/tournaments.ts","store/slices/tournament.ts","store/slices/team.ts","store/slices/game.ts","store/slices/user.ts","store/slices/predictions.ts","store/slices/league.ts","store/rootReducer.ts","store/store.ts","components/Headers/PlainHeader.tsx","components/Score/index.tsx","components/GamesList/index.tsx","components/Table/TableRow.tsx","utils/getGamesByTour.ts","panels/Tournament/index.tsx","panels/Team/index.tsx","components/Headers/GameHeader.tsx","components/GameInfoTabs/index.tsx","components/EventRow/index.tsx","panels/Game/index.tsx","utils/nowLessThen.ts","panels/Tournaments/index.tsx","components/Actions/index.tsx","panels/League/index.tsx","panels/AddWidget/index.tsx","App.tsx","index.tsx"],"names":["TOURNAMENTS_PANEL","TOURNAMENT_PANEL","GAME_PANEL","TEAM_PANEL","LEAGUE_PANEL","ADD_WIDGET_PANEL","initialState","activePanel","history","navigationSlice","createSlice","name","reducers","setNavigation","state","action","data","payload","goForward","newPanel","push","goBack","pop","length","actions","BASE_URL","process","request","url","a","fetch","res","json","getGames","matchId","postfix","siteType","p","encodeURIComponent","getTournaments","getTournament","tournamentId","getSquads","clubId","getPredictionsByMatch","doPrediction","userId","prediction","method","body","JSON","stringify","headers","getUser","id","registerUser","addWidget","user_id","group_id","app_id","access_token","v","site_type","tournament_id","league_id","type","requestTournaments","createAsyncThunk","api","tournamentsSlice","loading","error","cities","toggleCollapse","map","c","i","collapsed","extraReducers","builder","addCase","pending","rejected","fulfilled","city","requestTournament","tournamentSlice","activeTournamentName","activeTournamentCity","activeSiteType","activeVkHref","activeTournament","activeTab","setActiveTournament","vkHref","activeDivisionId","divisionId","clearActiveTournament","setActiveTab","requestSquad","teamSlice","activeTeam","activeTeamSquad","teamHistory","setActiveTeam","clearActiveteam","goForwardToTeam","goBackToTeam","activeGameEvents","activeGameInfo","awayHref","awayLogo","awayName","date","homeHref","homeLogo","homeName","matchHref","place","score","time","tour","gameHistory","requestGame","gameParams","gameSlice","setActiveGameInfo","clearActiveGame","goForwardToGame","goBackToGame","activeGame","events","sort","b","minute","requestUser","user","userSlice","addPrediction","predictions","requestPredictions","requestDoPrediction","predictionsSlice","predictionsInfo","clearPredictionsInfo","leagueSlice","activeLeague","setActiveLeague","rootReducer","combineReducers","navigation","tournaments","tournament","team","game","league","store","configureStore","reducer","useAppDispatch","useDispatch","PlainHeader","logo","title","href","hrefText","style","display","marginTop","mode","size","src","padding","margin","marginLeft","color","target","Score","background","children","className","GamesList","games","header","teamHref","onGoToGame","colors","win","draw","lose","split","s","home","away","disabled","before","marginRight","after","description","onClick","TableRow","n","isHeader","isDark","photo","values","fontWeight","marginBottom","value","width","textAlign","fontSize","getGamesByTours","calendar","forEach","TABS","TournamentPanel","dispatch","useSelector","goToGame","console","log","left","tab","selected","table","goToTeam","points","Object","entries","results","reverse","TeamPanel","filter","g","GameHeader","onGoToTeam","GameInfoTabs","refery","EventRow","isHome","playerName","eventType","includes","GamePanel","React","useState","setUserPrediction","canPredict","now","Date","d","m","y","h","min","getTime","nowLessThen","useEffect","replace","find","req","abort","e","eventSymbol","GROUP_ID","GROUP_HREF","TournamentsPanel","IS_ANDROID","window","location","snackbar","setSnackbar","openSnackbar","text","backgroundColor","fill","height","onClose","separator","document","createElement","click","remove","justifyContent","alignItems","bridge","send","then","_","catch","err","Actions","stopPropagation","preventDefault","LeaguePanel","goToBack","openThisLeague","setOpenThisLeague","keys","favorite","entrie","key","init","toggleOpenThisLeague","paddingBottom","t","goToTournament","paddingTop","APP_ID","VERSION","WIDGET_TYPES","AddWidgetPanel","step","setStep","setLoading","setError","activeGroup","setActiveGroup","setActiveSiteType","groups","setGroups","accessToken","setAccessToken","activeWidgetType","setActiveWidgetType","requestGroups","scope","params","extended","fields","response","items","error_data","leagueLink","createMatch","team_a","team_b","slice","matches","title_url","more","more_url","code","head","align","row","URL","requestToken","addInGroup","top","onChange","currentTarget","group","paddingLeft","w","icon","App","loadingTournaments","loadingTournament","loadingUser","initPanels","hash","userInfo","initApp","isWebView","onSwipeBack","currentPanel","setActiveTournamentTab","setActiveTeamTab","popout","Tournaments","League","Tournament","Game","Team","AddWidget","subscribe","detail","setAttribute","scheme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f7389cd7.chunk.js","sourcesContent":["export const TOURNAMENTS_PANEL = 'tournaments'\r\nexport const TOURNAMENT_PANEL = 'tournament'\r\nexport const GAME_PANEL = 'game'\r\nexport const TEAM_PANEL = 'team'\r\nexport const LEAGUE_PANEL = 'league'\r\nexport const ADD_WIDGET_PANEL = 'add_widget'","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { \r\n  ADD_WIDGET_PANEL,\r\n  GAME_PANEL, \r\n  LEAGUE_PANEL, \r\n  TEAM_PANEL, \r\n  TOURNAMENTS_PANEL, \r\n  TOURNAMENT_PANEL \r\n} from \"../../constans\";\r\n\r\ntype Panel = \r\n  | typeof TOURNAMENTS_PANEL \r\n  | typeof TOURNAMENT_PANEL \r\n  | typeof GAME_PANEL \r\n  | typeof TEAM_PANEL\r\n  | typeof LEAGUE_PANEL\r\n  | typeof ADD_WIDGET_PANEL\r\n\r\ninterface NavigationState\r\n{\r\n  activePanel : Panel\r\n  history : Panel[]\r\n}\r\n\r\nconst initialState : NavigationState = {\r\n  activePanel : TOURNAMENTS_PANEL,\r\n  history : [TOURNAMENTS_PANEL]\r\n}\r\n\r\nconst navigationSlice = createSlice({\r\n  name : 'navigation',\r\n  initialState,\r\n  reducers : {\r\n    setNavigation(state, action)\r\n    {\r\n      const data = action.payload\r\n      state.activePanel = data.activePanel\r\n      state.history = data.history\r\n    },\r\n    goForward(state, action)\r\n    {\r\n      const newPanel = action.payload\r\n      state.activePanel = newPanel\r\n      state.history.push(newPanel)\r\n    },\r\n    goBack(state)\r\n    {\r\n      state.history.pop()\r\n      const newPanel = state.history[state.history.length - 1]\r\n      state.activePanel = newPanel!\r\n    },\r\n  }\r\n})\r\n\r\nexport const {goBack, goForward, setNavigation} = navigationSlice.actions\r\nexport default navigationSlice.reducer","export const BASE_URL = process.env.REACT_APP_SERVER_URL\r\n// export const BASE_URL = 'http://localhost:5000'","export const request = async (url : string) => {\r\n  const res = await fetch(url)\r\n  return res.json()\r\n}","import {getGames} from './games'\r\nimport {getTournaments, getTournament} from './tournaments'\r\nimport {getSquads} from './squads'\r\nimport {getPredictionsByMatch,doPrediction} from './predictions'\r\nimport {getUser, registerUser} from './user'\r\nimport {addWidget} from './widget'\r\n\r\nexport default {\r\n  getGames,\r\n  getTournaments,\r\n  getTournament,\r\n  getSquads,\r\n  getPredictionsByMatch,\r\n  doPrediction,\r\n  getUser,\r\n  registerUser,\r\n  addWidget,\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getGames = async ({\r\n  matchId,\r\n  postfix,\r\n  siteType\r\n}: {\r\n  matchId?:string,\r\n  postfix:string,\r\n  siteType:number\r\n}) => {\r\n  const p = encodeURIComponent(postfix)\r\n  const url = `${BASE_URL}/games?siteType=${siteType}&postfix=${p}&matchId=${matchId}`\r\n\r\n  return await request(url)\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getTournaments = async () => {\r\n  const url = `${BASE_URL}/tournaments`\r\n\r\n  return await request(url)\r\n}\r\n\r\nexport const getTournament = async ({tournamentId,siteType} : {tournamentId : number, siteType : number}) => {\r\n  const url = `${BASE_URL}/tournaments/${tournamentId}/${siteType}`\r\n  return await request(url)\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getSquads = async ({tournamentId, clubId} : {tournamentId:string,clubId:string}) => {\r\n  const url = `${BASE_URL}/squads/${tournamentId}/${clubId}`\r\n\r\n  return await request(url)\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getPredictionsByMatch = async (matchId : number) => {\r\n  const url = `${BASE_URL}/predictions/${matchId}`\r\n\r\n  return await request(url)\r\n}\r\n\r\nexport const doPrediction = async ({\r\n  matchId, \r\n  userId,\r\n  prediction\r\n} : {\r\n  matchId:number,\r\n  userId:number,\r\n  prediction : 0 | 1\r\n}) => {\r\n  const url = `${BASE_URL}/predictions`\r\n\r\n  const res = await fetch(url,{\r\n    method : 'POST',\r\n    body : JSON.stringify({matchId, userId, prediction}),\r\n    headers : {'Content-Type': 'application/json;charset=utf-8'}\r\n  })\r\n\r\n  return res.json()\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getUser = async (id : number) => {\r\n  const url = `${BASE_URL}/users/${id}`\r\n\r\n  return await request(url)\r\n}\r\n\r\nexport const registerUser = async (id : number) => {\r\n  const url = `${BASE_URL}/users/${id}`\r\n\r\n  const res = await fetch(url,{\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json;charset=utf-8' }\r\n  })\r\n\r\n  return await res.json()\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\n\r\nexport const addWidget = async ({\r\n  user_id,\r\n  group_id,\r\n  app_id,\r\n  access_token,\r\n  v,\r\n  site_type,\r\n  tournament_id,\r\n  league_id,\r\n  type,\r\n} : {\r\n  user_id : number,\r\n  group_id: number,\r\n  app_id: number,\r\n  access_token: string,\r\n  v: string,\r\n  site_type: number,\r\n  tournament_id : number,\r\n  league_id : number,\r\n  type : string,\r\n}) => {\r\n  const url = `${BASE_URL}/widgets`\r\n  const res = await fetch(url,{\r\n    method : 'PUT',\r\n    body: JSON.stringify({user_id,group_id,app_id,access_token,v,site_type,tournament_id,league_id,type}),\r\n    headers : {'Content-Type': 'application/json;charset=utf-8'}\r\n  })\r\n\r\n  return await res.json()\r\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { CityInfo } from \"../../types/CityInfo\"\r\n\r\ninterface TournamentsState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  cities : (CityInfo & {collapsed : boolean})[]\r\n}\r\n\r\nconst initialState : TournamentsState = {\r\n  loading : false,\r\n  error : false,\r\n  cities : []\r\n}\r\n\r\nexport const requestTournaments = createAsyncThunk('tournaments/request', api.getTournaments)\r\n\r\nconst tournamentsSlice = createSlice({\r\n  name : 'tournaments',\r\n  initialState,\r\n  reducers : {\r\n    toggleCollapse(state,action)\r\n    {\r\n      state.cities = state.cities.map((c,i) => {\r\n        if(i === action.payload)\r\n        {\r\n          return {...c, collapsed : !c.collapsed}\r\n        }\r\n\r\n        return c\r\n      })\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestTournaments.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestTournaments.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestTournaments.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n        state.cities = (action.payload as CityInfo[]).map(city => ({...city, collapsed : true}))\r\n      })\r\n  },\r\n})\r\n\r\nexport const {toggleCollapse} = tournamentsSlice.actions\r\nexport default tournamentsSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport api from \"../../api\";\r\n\r\nimport { TournamentInfo } from \"../../types/TournamentInfo\";\r\n\r\ninterface TournamentState\r\n{\r\n  activeTournamentName : string\r\n  activeTournamentCity : string\r\n  activeSiteType : number\r\n  activeVkHref : string\r\n  activeTournament : TournamentInfo | null\r\n  activeTab : number\r\n  activeDivisionId ?: number\r\n\r\n  loading : boolean\r\n  error : boolean\r\n}\r\n\r\nconst initialState : TournamentState = {\r\n  loading : false,\r\n  error : false,\r\n\r\n  activeTournamentName : '',\r\n  activeTournamentCity : '',\r\n  activeSiteType : 0,\r\n  activeVkHref : '',\r\n  activeTournament : null,\r\n  activeTab : 0\r\n}\r\n\r\nexport const requestTournament = createAsyncThunk('tournament/request', api.getTournament)\r\n\r\nconst tournamentSlice = createSlice({\r\n  name : 'tournament',\r\n  initialState,\r\n  reducers : {\r\n    setActiveTournament(state,action)\r\n    {\r\n      const activeTournament = action.payload\r\n      state.activeTournamentName = activeTournament.name\r\n      // state.activeTournament = activeTournament.data\r\n      state.activeSiteType = activeTournament.siteType\r\n      state.activeVkHref = activeTournament.vkHref\r\n      state.activeTournamentCity = activeTournament.city\r\n      state.activeDivisionId = activeTournament.divisionId\r\n    },\r\n    clearActiveTournament(state)\r\n    {\r\n      state.activeTournament = null\r\n      state.activeTournamentName = ''\r\n    },\r\n    setActiveTab(state,action)\r\n    {\r\n      state.activeTab = action.payload\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestTournament.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestTournament.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestTournament.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n\r\n        const activeTournament = action.payload\r\n        state.activeTournament = activeTournament\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  clearActiveTournament,\r\n  setActiveTournament,\r\n  setActiveTab,\r\n} = tournamentSlice.actions\r\nexport default tournamentSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { ClubInfo } from \"../../types/ClubInfo\"\r\nimport { SquadInfo } from \"../../types/SquadInfo\"\r\n\r\ninterface TeamState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  activeTeamSquad : SquadInfo[]\r\n  activeTab : number\r\n  \r\n  activeTeam : ClubInfo | null\r\n  teamHistory : ClubInfo[]\r\n}\r\n\r\nconst initialState : TeamState = {\r\n  loading : false,\r\n  error : false,\r\n  activeTeam : null,\r\n  activeTeamSquad: [],\r\n  teamHistory : [],\r\n  activeTab : 0,\r\n}\r\n\r\nexport const requestSquad = createAsyncThunk(\r\n  'squad/request',\r\n  ({ tournamentId,clubId }: { tournamentId: string, clubId: string}) => {\r\n    return api.getSquads({tournamentId,clubId})\r\n  }\r\n)\r\n\r\nconst teamSlice = createSlice({\r\n  name : 'team',\r\n  initialState,\r\n  reducers : {\r\n    setActiveTeam(state,action)\r\n    {\r\n      state.activeTeam = action.payload\r\n    },\r\n    clearActiveteam(state)\r\n    {\r\n      state.activeTeam = null\r\n      state.activeTeamSquad = []\r\n    },\r\n    goForwardToTeam(state)\r\n    {\r\n      state.teamHistory.push(state.activeTeam!)\r\n    },\r\n    goBackToTeam(state)\r\n    {\r\n      if(state.teamHistory.length === 0) return\r\n\r\n      const activeTeam = state.teamHistory.pop()!\r\n      state.activeTeam = activeTeam\r\n    },\r\n    setActiveTab(state,action)\r\n    {\r\n      state.activeTab = action.payload\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestSquad.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestSquad.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestSquad.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n\r\n        const activeTeamSquad = action.payload\r\n        state.activeTeamSquad = activeTeamSquad\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  clearActiveteam,\r\n  setActiveTeam,\r\n  setActiveTab,\r\n\r\n  goForwardToTeam,\r\n  goBackToTeam,\r\n} = teamSlice.actions\r\nexport default teamSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport api from \"../../api\"\r\nimport { GameEvents } from \"../../types/GameEvents\"\r\nimport { GameInfo } from \"../../types/GameInfo\"\r\n\r\n\r\n\r\ninterface GameHistoryRecord\r\n{\r\n  activeGameInfo : GameInfo\r\n  activeGameEvents : GameEvents | null  \r\n}\r\n\r\ninterface GameState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  activeGameInfo : GameInfo\r\n  activeGameEvents : GameEvents | null\r\n  gameHistory : GameHistoryRecord[]\r\n}\r\n\r\nconst initialState : GameState = {\r\n  loading : false,\r\n  error : false,\r\n  activeGameEvents : null,\r\n  activeGameInfo : {\r\n    awayHref: \"\",\r\n    awayLogo: \"\",\r\n    awayName: \"\",\r\n    date: \"-\",\r\n    homeHref: \"\",\r\n    homeLogo: \"\",\r\n    homeName: \"\",\r\n    matchHref: \"\",\r\n    place: \"-\",\r\n    score: \"-:-\",\r\n    time: \"-\",\r\n    tour: 1,\r\n  },\r\n  gameHistory : [],\r\n}\r\n\r\nexport const requestGame = createAsyncThunk(\r\n  'game/request',\r\n  (gameParams: {matchId?:string,postfix:string,siteType:number}) => api.getGames(gameParams)\r\n)\r\n\r\nconst gameSlice = createSlice({\r\n  name : 'game',\r\n  initialState,\r\n  reducers : {\r\n    setActiveGameInfo(state,action)\r\n    {\r\n      state.activeGameInfo = action.payload\r\n    },\r\n    clearActiveGame(state)\r\n    {\r\n      state.activeGameInfo = initialState.activeGameInfo\r\n      state.activeGameEvents = null\r\n    },\r\n    goForwardToGame(state)\r\n    {\r\n      state.gameHistory.push({\r\n        activeGameEvents : state.activeGameEvents,\r\n        activeGameInfo : state.activeGameInfo,\r\n      })\r\n    },\r\n    goBackToGame(state)\r\n    {\r\n      if(state.gameHistory.length === 0) return\r\n      \r\n      const activeGame = state.gameHistory.pop()!\r\n\r\n      state.activeGameEvents = activeGame.activeGameEvents\r\n      state.activeGameInfo = activeGame.activeGameInfo\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestGame.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestGame.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestGame.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n\r\n        const activeGameEvents = action.payload\r\n        state.activeGameEvents = activeGameEvents\r\n        state.activeGameEvents!.events.sort((a,b) => a.minute - b.minute)\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  setActiveGameInfo,\r\n  goBackToGame,\r\n  goForwardToGame,\r\n  clearActiveGame,\r\n} = gameSlice.actions\r\nexport default gameSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { User } from \"../../types/User\"\r\n\r\ninterface UserState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  user : User | null\r\n}\r\n\r\nconst initialState : UserState = {\r\n  loading : false,\r\n  error : false,\r\n  user : null\r\n}\r\n\r\nexport const requestUser = createAsyncThunk(\r\n  'user/request',\r\n  async (userId : number) => {\r\n    const user = await api.getUser(userId)\r\n    if(user) return user\r\n\r\n    const res = await api.registerUser(userId)\r\n    return res\r\n  }\r\n)\r\n\r\nconst userSlice = createSlice({\r\n  name : 'user',\r\n  initialState,\r\n  reducers : {\r\n    addPrediction(state,action)\r\n    {\r\n      state.user!.predictions.push(action.payload)\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestUser.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestUser.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestUser.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n        state.user = action.payload\r\n      })\r\n  },\r\n})\r\n\r\nexport const { addPrediction } = userSlice.actions\r\nexport default userSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { PredictionInfo } from \"../../types/PredictionInfo\"\r\n\r\ninterface PredictionsState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  predictionsInfo : PredictionInfo | null\r\n}\r\n\r\nconst initialState : PredictionsState = {\r\n  loading : false,\r\n  error : false,\r\n  predictionsInfo : null\r\n}\r\n\r\nexport const requestPredictions = createAsyncThunk(\r\n  'predictions/get',\r\n  (matchId : number) => api.getPredictionsByMatch(matchId)\r\n)\r\n\r\nexport const requestDoPrediction = createAsyncThunk(\r\n  'predictions/do',\r\n  ({ matchId, userId, prediction }: { matchId: number, userId: number, prediction : 0 | 1 }) => {\r\n    return api.doPrediction({ matchId, userId, prediction })\r\n  }\r\n)\r\n\r\nconst predictionsSlice = createSlice({\r\n  name : 'predictions',\r\n  initialState,\r\n  reducers : {\r\n    clearPredictionsInfo(state)\r\n    {\r\n      state.predictionsInfo = null\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestPredictions.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestPredictions.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestPredictions.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n        state.predictionsInfo = action.payload\r\n      })\r\n\r\n      .addCase(requestDoPrediction.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestDoPrediction.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestDoPrediction.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n      })\r\n  },\r\n})\r\n\r\nexport const {clearPredictionsInfo} = predictionsSlice.actions\r\nexport default predictionsSlice.reducer","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport {CityInfo} from '../../types/CityInfo'\r\n\r\ninterface leagueState\r\n{\r\n  activeLeague : CityInfo | null\r\n}\r\n\r\nconst initialState : leagueState = {\r\n  activeLeague : null\r\n}\r\n\r\nconst leagueSlice = createSlice({\r\n  name : 'league',\r\n  initialState,\r\n  reducers : {\r\n    setActiveLeague(state,action)\r\n    {\r\n      state.activeLeague = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {setActiveLeague} = leagueSlice.actions\r\nexport default leagueSlice.reducer","import { combineReducers } from \"@reduxjs/toolkit\"\r\n\r\nimport navigation from './slices/navigation'\r\nimport tournaments from './slices/tournaments'\r\nimport tournament from './slices/tournament'\r\nimport team from './slices/team'\r\nimport game from './slices/game'\r\nimport user from './slices/user'\r\nimport predictions from './slices/predictions'\r\nimport league from './slices/league'\r\n\r\nconst rootReducer = combineReducers({\r\n  navigation,\r\n  tournaments,\r\n  tournament,\r\n  team,\r\n  game,\r\n  user,\r\n  predictions,\r\n  league,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport default rootReducer","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = configureStore({ reducer: rootReducer })\r\n\r\nexport const useAppDispatch = () => useDispatch<typeof store.dispatch>()\r\nexport default store","import React from 'react';\r\n\r\nimport {Avatar, Div, Link} from '@vkontakte/vkui';\r\n\r\ninterface PlainHeaderProps\r\n{\r\n  logo ?: string\r\n  title : string\r\n  league ?: string\r\n  city ?: string\r\n  href ?: string\r\n  hrefText ?: string\r\n}\r\n\r\nconst PlainHeader : React.FC<PlainHeaderProps> = ({\r\n  logo,\r\n  title,\r\n  city,\r\n  href,\r\n  hrefText,\r\n}) => {\r\n  return(\r\n    <Div style={{display:'flex',marginTop:12}}>\r\n      {logo && <Avatar mode=\"image\" size={74} src={logo}/>}\r\n      <div>\r\n        <h3 style={{padding:0, margin:0, marginLeft: logo ? 8 : 0}}>{title}</h3>\r\n        <h5 style={{padding:0, margin:0,marginTop:4,marginLeft: logo ? 8 : 0,color:'gray'}}>{city}</h5>\r\n        {href && <Link target=\"_blank\" style={{marginLeft:logo ? 8 : 0}} href={href}>{hrefText}</Link>}\r\n      </div>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default PlainHeader","import React from 'react';\r\nimport './Score.sass'\r\n\r\ninterface ScoreProps\r\n{\r\n  background : string\r\n}\r\n\r\nconst Score : React.FC<ScoreProps> = ({\r\n  background = '#76787a',\r\n  children,\r\n}) => {\r\n  return(\r\n    <div\r\n      className=\"score\"\r\n      style={{background}}\r\n    >{children}</div>\r\n  )\r\n}\r\n\r\nexport default Score","import React from 'react';\r\n\r\nimport {\r\n  Group, \r\n  Avatar,\r\n  Cell, \r\n  Header,\r\n} from '@vkontakte/vkui';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\nimport Score from '../Score';\r\n\r\ninterface GamesListProps\r\n{\r\n  games : GameInfo[]\r\n  header ?: string\r\n  teamHref ?: string\r\n  onGoToGame ?: (game : GameInfo) => void\r\n}\r\n\r\nconst GamesList : React.FC<GamesListProps> = ({\r\n  games,\r\n  header,\r\n  teamHref,\r\n  onGoToGame,\r\n}) => {\r\n  return(\r\n    <Group\r\n      header={header && <Header>{header}</Header>}\r\n    >\r\n      {games.map((game,i) => {\r\n        let background = ''\r\n        if(teamHref)\r\n        {\r\n          const colors = {\r\n            win:'var(--button_commerce_background)',\r\n            draw:'orange',\r\n            lose:'var(--button_secondary_destructive_foreground)'\r\n          }\r\n          const [home, away] = game.score.split(':').map(s=>+s)\r\n\r\n          if(home > away)\r\n            background = teamHref === game.homeHref ? colors.win : colors.lose\r\n          else if(home < away)\r\n            background = teamHref === game.homeHref ? colors.lose : colors.win\r\n          else\r\n            background = colors.draw\r\n        }\r\n\r\n        return <Cell\r\n          disabled={!onGoToGame || (game.date === '-' && !game.score)}\r\n          // disabled={true}\r\n          key={i}\r\n          before={<div style={{display:'flex',marginRight:8,}}>\r\n            <Avatar mode=\"image\" src={game.homeLogo}/>\r\n            <Avatar mode=\"image\" src={game.awayLogo}/>\r\n          </div>}\r\n          after={game.score && <Score background={background}>{game.score}</Score>}\r\n          description={game.date && game.date !== '-' && \r\n            <div>\r\n              <div>{game.date}, {game.time}</div>\r\n              {game.place !== '-' && <div>{game.place}</div>}\r\n            </div>\r\n          }\r\n          onClick={() => onGoToGame && onGoToGame(game)}\r\n        ><div><div>{game.homeName}</div><div>{game.awayName}</div></div></Cell>\r\n      })}\r\n    </Group>\r\n  )\r\n}\r\n\r\nexport default GamesList","import React from 'react';\r\nimport './Table.sass';\r\n\r\nimport {Avatar, Cell} from '@vkontakte/vkui';\r\n\r\ninterface TableRowProps\r\n{\r\n  title : string\r\n  n ?: number\r\n  description ?: string\r\n  isHeader ?: boolean\r\n  isDark ?: boolean\r\n  colors : string[]\r\n  values : string[]\r\n  photo ?: string\r\n  onClick ?: () => void\r\n}\r\n\r\nconst TableRow : React.FC<TableRowProps> = ({\r\n  n,\r\n  isHeader,\r\n  isDark,\r\n  photo,\r\n  colors,\r\n  values,\r\n  title,\r\n  description,\r\n  onClick,\r\n}) => {\r\n  return(\r\n    <Cell\r\n      style={{\r\n        fontWeight: isHeader ? 'bold' : 'normal',\r\n        background : isDark ? 'var(--background_keyboard)' : '',\r\n        marginBottom : 4,\r\n      }}\r\n      before={photo &&\r\n        <div className=\"photo\">\r\n          {n && <div className=\"photo__place\">{n}</div>}\r\n          <Avatar mode=\"image\" src={photo}/>\r\n        </div>\r\n      }\r\n      after={<div style={{padding:4,display:'flex',}}>\r\n        {values.map((value, i) => {\r\n          return <div\r\n            key={i}\r\n            style={{color:colors[i], marginRight:4, width:14, textAlign:'center', fontSize:14}}\r\n          >{value}</div>\r\n        })}\r\n        </div>}\r\n      disabled={!onClick}\r\n      onClick={onClick}\r\n      description={description}\r\n    >{title}</Cell>\r\n  )\r\n}\r\n\r\nexport default TableRow","import { GameInfo } from \"../types/GameInfo\";\r\n\r\nexport const getGamesByTours =  (calendar : GameInfo[]) : {[tour : string] : GameInfo[]} => {\r\n  const data : {[tour : string] : GameInfo[]} = {}\r\n\r\n  calendar.forEach(game => {\r\n    if(!data[game.tour])\r\n    {\r\n      data[game.tour] = []\r\n    }\r\n\r\n    data[game.tour].push(game)\r\n  })\r\n\r\n  return data\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Cell,\r\n  HorizontalScroll, \r\n  List, \r\n  Panel, \r\n  PanelHeader, \r\n  PanelHeaderBack, \r\n  Tabs, \r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { clearActiveTournament, setActiveTab } from '../../store/slices/tournament';\r\nimport { setActiveTeam} from '../../store/slices/team';\r\nimport { setActiveGameInfo } from '../../store/slices/game';\r\n\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport GamesList from '../../components/GamesList';\r\nimport TableRow from '../../components/Table/TableRow';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\n\r\nimport { getGamesByTours } from '../../utils/getGamesByTour';\r\nimport { GAME_PANEL, TEAM_PANEL } from '../../constans';\r\n\r\ninterface TournamentPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst TABS = [ 'Таблица', 'Расписание', 'Результаты']\r\n\r\nconst TournamentPanel : React.FC<TournamentPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const {activeTournament,activeTournamentName,activeTournamentCity,activeTab,activeSiteType} = useSelector((s:RootState) => s.tournament)\r\n\r\n  const goToTeam = (team : ClubInfo) => {\r\n    dispatch(setActiveTeam(team))\r\n    dispatch(goForward(TEAM_PANEL))\r\n  }\r\n\r\n  const goToGame = (game : GameInfo) => {\r\n    console.log(game)\r\n    if(game.date === '-' && !game.score) return\r\n    \r\n    dispatch(setActiveGameInfo(game))\r\n    dispatch(goForward(GAME_PANEL))\r\n  }\r\n\r\n  const goToTournaments = () => {\r\n    dispatch(goBack())\r\n    dispatch(clearActiveTournament())\r\n    dispatch(setActiveTab(0))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToTournaments} />}\r\n      >Турнир</PanelHeader>\r\n      \r\n      <PlainHeader\r\n        hrefText={'Сайт'}\r\n        href={activeSiteType === 0\r\n            ? `https://lfl.ru/tournament${activeTournament?.tournamentId}`\r\n            : `https://www.goalstream.org/season/${activeTournament?.tournamentId}`\r\n        }\r\n        title={activeTournamentName}\r\n        city={activeTournamentCity}\r\n      />\r\n      <HorizontalScroll>\r\n        <Tabs mode=\"buttons\">\r\n          {TABS.map((tab,i) => {\r\n            return <TabsItem\r\n              key={i}\r\n              selected={activeTab === i}\r\n              onClick={() => dispatch(setActiveTab(i))}\r\n            >{tab}</TabsItem>\r\n          })}\r\n        </Tabs>\r\n      </HorizontalScroll>\r\n\r\n      \r\n      {activeTab === 0 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n            isHeader={true}\r\n            title={'Команда'}\r\n            values={['И','В','Н','П','О']}\r\n            colors={['','green','orange','red']}\r\n          />\r\n          {\r\n            activeTournament.table.map((team,i) => {\r\n              if(team.title === '') return null\r\n\r\n              return team.title\r\n                ? <Cell\r\n                    key={i}\r\n                    disabled\r\n                    style={{fontWeight:'bold'}}\r\n                  >{team.title}</Cell>\r\n                : <TableRow\r\n                    key={i}\r\n                    n={team.place}\r\n                    title={team.name}\r\n                    photo={team.logo}\r\n                    onClick={() => goToTeam(team)}\r\n                    values={[team.win+team.draw+team.lose,team.win,team.draw,team.lose,team.points].map(n=>''+n)}\r\n                    colors={['','green','orange','red']}\r\n                    isDark={i % 2 === 0}\r\n                  />\r\n            })\r\n          }\r\n        </List>\r\n      }\r\n\r\n      {activeTab === 1 && activeTournament &&\r\n        Object.entries(getGamesByTours(activeTournament.calendar))\r\n          .map(([tour, games],i) => {\r\n            return <GamesList\r\n              key={i}\r\n              header={`${tour}${activeSiteType === 0 ? ' ТУР' : ''}`}\r\n              games={games}\r\n              // onGoToGame={goToGame} // !!!!\r\n            />\r\n          })\r\n      }\r\n\r\n      {activeTab === 2 && activeTournament &&\r\n        Object.entries(getGamesByTours(activeTournament.results)).reverse()\r\n          .map(([tour, games],i) => {\r\n            return <GamesList\r\n              key={i}\r\n              header={`${tour}${activeSiteType === 0 ? ' ТУР' : ''}`}\r\n              games={games}\r\n              onGoToGame={goToGame}\r\n            />\r\n          })\r\n      }\r\n\r\n      {/* {activeTab === 3 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n              isHeader={true}\r\n              title={'Игрок'}\r\n              values={['Г']}\r\n              colors={[]}\r\n            />\r\n          {\r\n            activeTournament.strikers.map((player,i) => {\r\n              return <TableRow\r\n                key={i}\r\n                n={i+1}\r\n                title={player.playerName}\r\n                photo={player.playerPhoto}\r\n                description={player.teamName}\r\n                values={[''+player.points]}\r\n                colors={[]}\r\n                isDark={i % 2 === 0}\r\n              />\r\n            })\r\n          }\r\n        </List>\r\n      }\r\n\r\n      {activeTab === 4 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n              isHeader={true}\r\n              title={'Игрок'}\r\n              values={['А']}\r\n              colors={[]}\r\n            />\r\n          {\r\n            activeTournament.assistents.map((player,i) => {\r\n              return <TableRow\r\n                key={i}\r\n                n={i+1}\r\n                title={player.playerName}\r\n                photo={player.playerPhoto}\r\n                description={player.teamName}\r\n                values={[''+player.points]}\r\n                colors={[]}\r\n                isDark={i % 2 === 0}\r\n              />\r\n            })\r\n          }\r\n        </List>\r\n      } */}\r\n\r\n\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TournamentPanel","import React from 'react';\r\n\r\n\r\nimport {\r\n  HorizontalScroll,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Tabs,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { clearActiveteam, goForwardToTeam,setActiveTab } from '../../store/slices/team';\r\nimport { goBackToGame, setActiveGameInfo } from '../../store/slices/game';\r\n\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport GamesList from '../../components/GamesList';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\n\r\nimport { GAME_PANEL } from '../../constans';\r\n\r\ninterface TeamPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\n// const TABS = [ 'Расписание', 'Результаты', 'Состав' ]\r\nconst TABS = [ 'Расписание', 'Результаты']\r\n\r\nconst TeamPanel : React.FC<TeamPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const { activeTeam, activeTab } = useSelector((s:RootState) => s.team)\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeTournament,activeTournamentCity} = useSelector((s:RootState) => s.tournament)\r\n\r\n  const goToBack = () => {\r\n    const isToGame = history[history.length-2] === 'game'\r\n    if(isToGame) dispatch(goBackToGame())\r\n\r\n    dispatch(goBack())\r\n    dispatch(clearActiveteam())\r\n  }\r\n\r\n  const goToGame = (game : GameInfo) => {\r\n    if(game.date === '-' && !game.score) return\r\n\r\n    dispatch(goForwardToTeam())\r\n    dispatch(setActiveGameInfo(game))\r\n    dispatch(goForward(GAME_PANEL))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Команда</PanelHeader>\r\n\r\n      {activeTeam && <>\r\n        <PlainHeader\r\n          logo={activeTeam.logo}\r\n          title={activeTeam.name}\r\n          city={activeTournamentCity}\r\n        />\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => dispatch(setActiveTab(i))}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      </>}\r\n\r\n      \r\n      {activeTab === 0 && activeTeam &&\r\n        <GamesList\r\n          games={activeTournament!.calendar.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          // onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {activeTab === 1 && activeTeam &&\r\n        <GamesList\r\n          teamHref={activeTeam.href}\r\n          games={activeTournament!.results.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {/* {activeTab === 2 && activeTeam &&\r\n        <Group>\r\n          <TableRow\r\n            isHeader={true}\r\n            title={'Игрок'}\r\n            values={['И', 'Г','А','Ж','К']}\r\n            colors={['','green','gray','orange','red']}\r\n          />\r\n          {\r\n            loading\r\n              ? <Div><Spinner/></Div>\r\n              : activeTeamSquad.map((player,i) => {\r\n                return <TableRow\r\n                  key={i}\r\n                  title={player.playerName}\r\n                  photo={player.playerPhoto}\r\n                  description={player.amplua}\r\n                  values={[player.games,player.goals,player.assists,player.yc,player.rc].map(n=>''+n)}\r\n                  colors={['','green','gray','orange','red']}\r\n                  isDark={i % 2 === 0}\r\n                />\r\n              })\r\n          }\r\n        </Group>\r\n      } */}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TeamPanel","import React from 'react';\r\nimport './Headers.sass'\r\n\r\nimport {Avatar, Div} from '@vkontakte/vkui';\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\n\r\ninterface Team\r\n{\r\n  logo : string\r\n  href : string\r\n  name : string\r\n}\r\n\r\ninterface GameHeaderProps\r\n{\r\n  home : Team\r\n  away : Team\r\n  score : string\r\n  onGoToTeam : (team : ClubInfo) => void\r\n}\r\n\r\nconst GameHeader : React.FC<GameHeaderProps> = ({\r\n  home,\r\n  away,\r\n  score,\r\n  onGoToTeam,\r\n}) => {\r\n  // const goToTeam = (team : Team) => onGoToTeam(team as ClubInfo)\r\n\r\n  return(\r\n    <Div className=\"game-header__container\">\r\n      <div className=\"game-header__item\"\r\n        // onClick={() => goToTeam(home)}\r\n      >\r\n        <Avatar size={82} mode=\"image\" src={home.logo} />\r\n        <div style={{textAlign:'center'}}>{home.name}</div>\r\n      </div>\r\n      <div className=\"game-header__item\" style={{fontSize:24}}>{score}</div>\r\n      <div className=\"game-header__item\"\r\n        // onClick={() => goToTeam(away)}\r\n      >\r\n        <Avatar size={82} mode=\"image\" src={away.logo} />\r\n        <div style={{textAlign:'center'}}>{away.name}</div>\r\n      </div>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default GameHeader","import React from 'react';\r\nimport './GameInfoTabs.sass'\r\n\r\nimport {HorizontalScroll, Tabs, TabsItem} from '@vkontakte/vkui';\r\nimport { Icon28GlobeOutline, Icon28AdvertisingOutline, Icon28CalendarOutline } from '@vkontakte/icons';\r\ninterface GameInfoTabsProps\r\n{\r\n  date : string | null\r\n  refery : string | null\r\n  place : string | null\r\n}\r\n\r\nconst GameInfoTabs : React.FC<GameInfoTabsProps> = ({\r\n  date,\r\n  refery,\r\n  place,\r\n}) => {\r\n  return(\r\n    <HorizontalScroll style={{marginBottom:20}}>\r\n      <Tabs mode=\"buttons\">\r\n        {date && \r\n          <TabsItem selected={true} className=\"game-info__item\">\r\n            <Icon28CalendarOutline/><div>{date}</div>\r\n          </TabsItem>\r\n        }\r\n        {place && \r\n          <TabsItem selected={true} className=\"game-info__item\">\r\n            <Icon28GlobeOutline/><div>{place}</div>\r\n          </TabsItem>\r\n        }\r\n        {refery && \r\n          <TabsItem selected={true} className=\"game-info__item\">\r\n            <Icon28AdvertisingOutline/><div>{refery}</div>\r\n          </TabsItem>\r\n        }\r\n      </Tabs>\r\n    </HorizontalScroll>\r\n  )\r\n}\r\n\r\nexport default GameInfoTabs","import React from 'react';\r\nimport './EventRow.sass'\r\n\r\ninterface EventRowProps\r\n{\r\n  isHome : boolean\r\n  playerName : string\r\n  eventType : string\r\n  minute : number\r\n}\r\n\r\nconst EventRow : React.FC<EventRowProps> = ({\r\n  isHome,\r\n  playerName,\r\n  eventType,\r\n  minute,\r\n}) => {\r\n  return(\r\n    <div className=\"events__row\">\r\n      {playerName.includes('(аг)')\r\n        ? <>\r\n          <div className=\"events__player\">{minute !== 0 && isHome ? minute : ''}{!isHome && playerName}</div>\r\n          <div className=\"events__type\">{eventType}</div>\r\n          <div className=\"events__player\">{isHome && playerName}{minute !== 0 && !isHome ? minute : ''}</div>\r\n        </>\r\n        : <>\r\n          <div className=\"events__player\">{minute !== 0 && !isHome ? minute : ''}{isHome && playerName}</div>\r\n          <div className=\"events__type\">{eventType}</div>\r\n          <div className=\"events__player\">{!isHome && playerName}{minute !== 0 && isHome ? minute : ''}</div>\r\n        </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EventRow","import React from 'react';\r\n\r\nimport {\r\n  Div,\r\n  Link,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Spinner} from '@vkontakte/vkui';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { goBackToTeam, setActiveTeam } from '../../store/slices/team';\r\nimport { clearActiveGame, goForwardToGame, requestGame } from '../../store/slices/game';\r\nimport {useAppDispatch} from '../../store/store';\r\n\r\nimport GameHeader from '../../components/Headers/GameHeader';\r\nimport GameInfoTabs from '../../components/GameInfoTabs';\r\nimport EventRow from '../../components/EventRow';\r\n\r\nimport { TEAM_PANEL } from '../../constans';\r\n\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\nimport { requestPredictions, clearPredictionsInfo } from '../../store/slices/predictions';\r\nimport { nowLessThen } from '../../utils/nowLessThen';\r\n\r\ninterface GamePanelProps\r\n{\r\n  id : string\r\n}\r\n\r\n// const TABS = [ 'События', 'Составы',]\r\n\r\nconst GamePanel : React.FC<GamePanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeGameInfo,activeGameEvents,loading, error} = useSelector((s:RootState) => s.game)\r\n  const {activeTournament,activeSiteType,activeDivisionId} = useSelector((s:RootState) => s.tournament)\r\n  const {user} = useSelector((s:RootState) => s.user)\r\n\r\n  const [activeTab] = React.useState(0)\r\n  const [, setUserPrediction] = React.useState<0|1|null>(null)\r\n\r\n  const canPredict = nowLessThen(\r\n    activeGameInfo.date.split(' ')[0].split('.').map(s=>+s),\r\n    activeGameInfo.time.split(':').map(s=>+s)\r\n  )\r\n\r\n  const goToBack = () => {\r\n    const isToTeam = history[history.length-2] === 'team'\r\n    if(isToTeam) dispatch(goBackToTeam())\r\n    \r\n    dispatch(goBack())\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n  }\r\n\r\n  const goToTeam = (team : ClubInfo) => {\r\n\r\n    dispatch(goForwardToGame())\r\n    \r\n    dispatch(setActiveTeam(team))\r\n    dispatch(goForward(TEAM_PANEL))\r\n\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n\r\n    // dispatch(requestSquad({tournamentId, clubId}))\r\n  }\r\n\r\n\r\n  React.useEffect(() => {\r\n    if(activeGameEvents) return\r\n\r\n    if(activeGameInfo.matchHref.includes('/empty_protocol'))\r\n    {\r\n      const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\r\n      const prediction = user!.predictions.find(p => p.matchId === matchId)\r\n      if(prediction)\r\n      {\r\n        setUserPrediction(prediction.prediction)\r\n      }\r\n\r\n      if(!canPredict || !!prediction)\r\n        dispatch(requestPredictions(matchId))\r\n      return\r\n    }\r\n\r\n    const postfix = activeSiteType === 0\r\n      ? (activeDivisionId\r\n        ? `/division${activeDivisionId}/tour${activeGameInfo.tour}`\r\n        : `/tournament${activeTournament!.tournamentId}/tour${activeGameInfo.tour}`\r\n      )\r\n      : activeGameInfo.matchHref\r\n\r\n    const matchId = activeSiteType === 0 ? activeGameInfo.matchHref.replace('/match','') : ''\r\n\r\n    const req = dispatch(requestGame({\r\n      postfix,\r\n      siteType : activeSiteType,\r\n      matchId,\r\n    }) )\r\n    return () => {\r\n      req.abort()\r\n    }\r\n  },[])\r\n\r\n  const home = {\r\n    name : activeGameInfo.homeName,\r\n    href : activeGameInfo.homeHref,\r\n    logo : activeGameInfo.homeLogo,\r\n  }\r\n  \r\n  const away = {\r\n    name : activeGameInfo.awayName,\r\n    href : activeGameInfo.awayHref,\r\n    logo : activeGameInfo.awayLogo,\r\n  }\r\n\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Матч</PanelHeader>\r\n\r\n      <GameHeader\r\n        home={home}\r\n        away={away}\r\n        score={!activeGameInfo.score ? '-:-' : activeGameInfo.score}\r\n        onGoToTeam={goToTeam}\r\n      />\r\n\r\n      <GameInfoTabs\r\n        date={activeGameInfo.date !== '-' ? `${activeGameInfo.date}, ${activeGameInfo.time}` : null}\r\n        refery={activeGameEvents && activeGameEvents.refery !== '-' ? activeGameEvents.refery : null}\r\n        place={activeGameEvents && activeGameEvents.place !== '-' ? activeGameEvents.place : null}\r\n      />\r\n\r\n      {/* {!loading && !noInformation && activeGameInfo.score &&\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => setActiveTab(i)}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      } */}\r\n      \r\n      {/* {!activeGameInfo.score &&\r\n        <Prediction\r\n          canPredict={canPredict}\r\n          userPrediction={userPrediction}\r\n          predictionsInfo={predictionsInfo}\r\n          loading={loadingPrediction}\r\n          title=\"Количество голов\"\r\n          variants={['Больше 7', 'Не больше 7']}\r\n          onPrediction={doPredict}\r\n        />\r\n      } */}\r\n\r\n      {error &&\r\n        <Placeholder>\r\n          Произошла ошибка, попробуйте посмотреть информацию на\r\n          <Link\r\n            href={activeSiteType === 0\r\n              ? (activeDivisionId\r\n                ? `https://www.lfl.ru/division${activeDivisionId}/tour${activeGameInfo.tour}`\r\n                : `https://www.lfl.ru/tournament${activeTournament!.tournamentId}/tour${activeGameInfo.tour}`\r\n              )\r\n              : `http://www.goalstream.org${activeGameInfo.matchHref}`}\r\n          >&nbsp;сайте</Link>\r\n        </Placeholder>\r\n      }\r\n\r\n      {activeGameEvents && activeGameEvents.events.length === 0 && <Placeholder>Нет информации</Placeholder>}\r\n      \r\n      {loading && <>\r\n        <Div><Spinner/></Div>\r\n        <Placeholder>Загрузка займет некоторое время. Пожалуйста, подождите</Placeholder>\r\n      </>}\r\n\r\n\r\n      {!loading && activeTab === 0 && activeGameEvents &&\r\n        activeGameEvents.events.map((e,i) => {\r\n          let eventSymbol = ''\r\n          if(e.type === 'goal') eventSymbol = '⚽'\r\n          else if(e.type === 'assist') eventSymbol = '✅'\r\n          else if(e.type === 'yc') eventSymbol = '🟨'\r\n          else eventSymbol = '🟥'\r\n          \r\n          return <EventRow\r\n            key={i}\r\n            playerName={e.name}\r\n            eventType={eventSymbol}\r\n            isHome={e.team === 0}\r\n            minute={e.minute}\r\n          />\r\n        })\r\n      }\r\n\r\n      {/* {!loading && activeTab === 1 && <>\r\n        <Tabs mode=\"buttons\">\r\n          {[activeGameInfo.homeName,activeGameInfo.awayName].map((team,i) => {\r\n            return <TabsItem\r\n              key={i}\r\n              selected={activeTeamTab === i}\r\n              onClick={() => setActiveTeamTab(i)}\r\n            >{team}</TabsItem>\r\n          })}\r\n        </Tabs>\r\n        <List>\r\n          {activeGameEvents &&\r\n            activeGameEvents.squads[activeTeamTab].map((player,i) => {\r\n              return <Cell\r\n                disabled\r\n                key={i}\r\n                description={activeGameInfo[activeTeamTab === 0 ? 'homeName' : 'awayName']}\r\n              >{player.name}</Cell>\r\n            })\r\n          }\r\n        </List>\r\n      </>} */}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default GamePanel","export const nowLessThen = (date : number[], time : number[]) : boolean => {\r\n  const now = Date.now()\r\n\r\n  const [d,m,y] = date\r\n  const [h,min] = time\r\n  const gameTime = new Date(y,m-1,d,h,min).getTime()\r\n\r\n  return now <= gameTime\r\n}","import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Cell,\r\n  Div,\r\n  Header,\r\n  Panel,\r\n  PanelHeader,\r\n  Snackbar,\r\n} from '@vkontakte/vkui';\r\nimport { \r\n  Icon28ChevronRightOutline, \r\n  Icon28FavoriteCircleFillYellow,\r\n  Icon28AddCircleFillBlue,\r\n  Icon28ReplyCircleFillGreen,\r\n  Icon28Users3Outline,\r\n  Icon16DoneCircle,\r\n  Icon28HomeOutline\r\n} from '@vkontakte/icons';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { goForward } from '../../store/slices/navigation';\r\n\r\nimport { LEAGUE_PANEL } from '../../constans';\r\n\r\nimport { CityInfo } from '../../types/CityInfo';\r\nimport { setActiveLeague } from '../../store/slices/league';\r\n\r\ninterface TournamentsPanelProps\r\n{\r\n  id : string\r\n  cities : (CityInfo & {collapsed : boolean})[]\r\n}\r\n\r\nconst GROUP_ID = 202380422\r\nconst GROUP_HREF = `https://vk.com/club${GROUP_ID}`\r\n\r\nconst TournamentsPanel : React.FC<TournamentsPanelProps> = ({\r\n  id,\r\n  cities,\r\n}) => {\r\n  const IS_ANDROID = window.location.href.includes('mobile_android')\r\n  const dispatch = useDispatch()\r\n\r\n  const goToLeague = (league : CityInfo) => {\r\n    dispatch(goForward(LEAGUE_PANEL))\r\n    dispatch(setActiveLeague(league))\r\n  }\r\n\r\n  const [snackbar, setSnackbar] = React.useState<React.ReactElement | null>(null)\r\n  const openSnackbar = (text : string) => {\r\n    setSnackbar(\r\n      <Snackbar\r\n        before={\r\n          <Avatar size={24} style={{backgroundColor:'var(--accent)'}}>\r\n            <Icon16DoneCircle fill=\"#fff\" width={14} height={14} />\r\n          </Avatar>\r\n        }\r\n        onClose={() => setSnackbar(null)}\r\n      >{text}</Snackbar>\r\n    )\r\n  }\r\n\r\n  const addToFavourite = () => {\r\n    bridge.send('VKWebAppAddToFavorites')\r\n      .then(_=>openSnackbar('Успешно добавлено !'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const joinToGroup = () => {\r\n    bridge.send('VKWebAppJoinGroup',{group_id:GROUP_ID})\r\n      .then(_=>openSnackbar('Вы вступили. Спасибо!'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const goToGroup = () => {\r\n    let a = document.createElement('a')\r\n    a.href = GROUP_HREF\r\n    a.target = '_blank'\r\n    a.click()\r\n    a.remove()\r\n  }\r\n\r\n  const share = () => {\r\n    bridge.send('VKWebAppShare')\r\n      .then(res=>res)\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const addToHomeScreen = () => {\r\n    bridge.send('VKWebAppAddToHomeScreen')\r\n      .then(_=>openSnackbar('Успешно добавлено !'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader separator={false}>Главная</PanelHeader>\r\n      \r\n      <Header style={{marginTop:8}}>Информация</Header>\r\n      <Div>\r\n        <Card>\r\n          <Div>\r\n            <div style={{display:'flex'}}>\r\n              <Button\r\n                style={{marginBottom:8,width:'100%',display:'flex',marginRight:8}}\r\n                size=\"l\"\r\n                before={<Icon28Users3Outline/>}\r\n                onClick={goToGroup}\r\n              >Группа</Button>\r\n              <Button\r\n                style={{marginBottom:8,display:'flex',justifyContent:'center',alignItems:'center'}}\r\n                size=\"l\"\r\n                before={<Icon28AddCircleFillBlue/>}\r\n                onClick={joinToGroup}\r\n              />\r\n            </div>\r\n            <Button\r\n              style={{marginBottom:8,width:'100%',display:'flex',}}\r\n              size=\"l\"\r\n              before={<Icon28FavoriteCircleFillYellow/>}\r\n              onClick={addToFavourite}\r\n            >Добавить в избранное</Button>\r\n            <Button\r\n              style={{marginBottom:IS_ANDROID?8:0,width:'100%',display:'flex',}}\r\n              size=\"l\"\r\n              before={<Icon28ReplyCircleFillGreen/>}\r\n              onClick={share}\r\n            >Поделиться</Button>\r\n            {IS_ANDROID &&\r\n              <Button\r\n                style={{marginBottom:0,width:'100%',display:'flex',}}\r\n                size=\"l\"\r\n                onClick={addToHomeScreen}\r\n                before={<Icon28HomeOutline/>}\r\n              >На дом. экран</Button>\r\n            }\r\n          </Div>\r\n        </Card>\r\n      </Div>\r\n\r\n      <Header>Турниры</Header>\r\n      {/* {cities.map((city, i) => {\r\n        return <Div key={i} style={{paddingBottom: i===cities.length-1 ? 12 : 0}}>\r\n          <Card>\r\n            <div\r\n              onClick={() => dispatch(toggleCollapse(i))}\r\n              style={{display:'flex',padding:8}}\r\n            >\r\n              <div style={{display:'flex',flex:1,alignItems:'center',}}>\r\n                <Avatar mode=\"image\" size={32} src={city.tournaments[0].logo}/>\r\n                &nbsp;&nbsp;<div style={{flex:1}}>{city.title}</div>\r\n              </div>\r\n              <Icon28ChevronDownOutline\r\n                style={{color:'var(--accent)',transform : `rotate(${city.collapsed ? '0deg' : '180deg'})`}}\r\n              />\r\n            </div>\r\n            {!city.collapsed &&\r\n              <List>\r\n                {city.tournaments.map((t,i) => {\r\n                  return <Cell\r\n                    key={i}\r\n                    after={<Icon28ChevronRightOutline/>}\r\n                    onClick={() => goToTournament(t)}\r\n                  >{t.name}</Cell>\r\n                })}\r\n              </List>\r\n            }\r\n          </Card>\r\n        </Div>\r\n      })} */}\r\n      {cities.map((city,i) => {\r\n        return <Cell\r\n          key={i}\r\n          before={<Avatar size={32} mode=\"image\" src={city.tournaments[0].logo} />}\r\n          after={<Icon28ChevronRightOutline/>}\r\n          onClick={() => goToLeague(city)}\r\n        >{city.title}</Cell>\r\n      })}\r\n\r\n      {snackbar}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TournamentsPanel","import React, { ReactEventHandler } from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {CellButton, Card, Div} from '@vkontakte/vkui';\r\nimport {\r\n  Icon20AddCircleFillBlue,\r\n  Icon28FavoriteCircleFillYellow,\r\n  Icon28HomeOutline,\r\n  Icon28ReplyCircleFillGreen,\r\n  Icon28UsersCircleFillGray\r\n} from '@vkontakte/icons';\r\n\r\n\r\ninterface ActionsProps\r\n{\r\n  openSnackbar : (msg : string) => void\r\n}\r\n\r\nconst GROUP_ID = 202380422\r\nconst GROUP_HREF = `https://vk.com/club${GROUP_ID}`\r\n\r\nconst Actions: React.FC<ActionsProps> = ({\r\n  openSnackbar,\r\n}) => {\r\n\r\n  const IS_ANDROID = window.location.href.includes('mobile_android')\r\n\r\n  const addToFavourite = () => {\r\n    bridge.send('VKWebAppAddToFavorites')\r\n      .then(_=>openSnackbar('Успешно добавлено !'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const joinToGroup : ReactEventHandler<HTMLDivElement> = (e) => {\r\n    e.stopPropagation()\r\n    e.preventDefault()\r\n    bridge.send('VKWebAppJoinGroup',{group_id:GROUP_ID})\r\n      .then(_=>openSnackbar('Вы вступили. Спасибо!'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const goToGroup = () => {\r\n    let a = document.createElement('a')\r\n    a.href = GROUP_HREF\r\n    a.target = '_blank'\r\n    a.click()\r\n    a.remove()\r\n  }\r\n\r\n  const share = () => {\r\n    bridge.send('VKWebAppShare')\r\n      .then(res=>res)\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const addToHomeScreen = () => {\r\n    bridge.send('VKWebAppAddToHomeScreen')\r\n      .then(_=>openSnackbar('Успешно добавлено !'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  return(\r\n    <Div>\r\n      <Card>\r\n        <CellButton\r\n          before={<Icon28UsersCircleFillGray style={{marginRight:8}}/>}\r\n          onClick={goToGroup}\r\n          after={<Icon20AddCircleFillBlue onClick={joinToGroup}/>}\r\n        >Группа приложения</CellButton>\r\n        <CellButton\r\n          before={<Icon28FavoriteCircleFillYellow style={{marginRight:8}}/>}\r\n          onClick={addToFavourite}\r\n        >Добавить в избранное</CellButton>\r\n        <CellButton\r\n          before={<Icon28ReplyCircleFillGreen style={{marginRight:8}}/>}\r\n          onClick={share}\r\n        >Поделиться</CellButton>\r\n        {IS_ANDROID &&\r\n          <CellButton\r\n            onClick={addToHomeScreen}\r\n            before={<Icon28HomeOutline style={{marginRight:8}}/>}\r\n          >На дом. экран</CellButton>\r\n        }\r\n      </Card>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default Actions","import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  Cell,\r\n  CellButton,\r\n  Div,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Snackbar,\r\n} from '@vkontakte/vkui';\r\nimport { Icon16DoneCircle, Icon28ChevronRightOutline,Icon24Copy, Icon24Add, Icon28FavoriteOutline, Icon28UnfavoriteOutline } from '@vkontakte/icons';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\n\r\nimport { ADD_WIDGET_PANEL, TOURNAMENT_PANEL } from '../../constans';\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport { requestTournament, setActiveTournament } from '../../store/slices/tournament';\r\nimport { Tournament } from '../../types/Tournament';\r\nimport Actions from '../../components/Actions';\r\n\r\ninterface LeaguePanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst LeaguePanel : React.FC<LeaguePanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const {activeLeague} = useSelector((s:RootState) => s.league)\r\n  const {user} = useSelector((s:RootState) => s.user)\r\n\r\n  const goToBack = () => {\r\n    dispatch(goBack())\r\n  }\r\n\r\n  const goToTournament = (t : Tournament) => {\r\n    dispatch(goForward(TOURNAMENT_PANEL))\r\n    dispatch(setActiveTournament(t))\r\n    dispatch(requestTournament({tournamentId : +t.id, siteType : t.siteType }))\r\n  }\r\n\r\n  const [snackbar, setSnackbar] = React.useState<React.ReactElement | null>(null)\r\n  const openSnackbar = (text : string) => {\r\n    setSnackbar(\r\n      <Snackbar\r\n        before={\r\n          <Avatar size={24} style={{backgroundColor:'var(--accent)'}}>\r\n            <Icon16DoneCircle fill=\"#fff\" width={14} height={14} />\r\n          </Avatar>\r\n        }\r\n        onClose={() => setSnackbar(null)}\r\n      >{text}</Snackbar>\r\n    )\r\n  }\r\n\r\n  const copyLink = () => {\r\n    bridge.send('VKWebAppCopyText',{text:`https://vk.com/app7746401#league${activeLeague!.id}`})\r\n      .then(_ => openSnackbar('Скопировано'))\r\n      .catch(e=>e)\r\n  }\r\n\r\n  const goToAddWidget = () => {\r\n    dispatch(goForward(ADD_WIDGET_PANEL))\r\n  }\r\n\r\n  const [openThisLeague,setOpenThisLeague] = React.useState(false)\r\n  React.useEffect(() => {\r\n    const init = async () => {\r\n      try\r\n      {\r\n        const {keys} = await bridge.send('VKWebAppStorageGet',{keys:['favorite']})\r\n        const favorite = keys.find(entrie => entrie.key === 'favorite')\r\n        if(!favorite)\r\n          setOpenThisLeague(false)\r\n        else\r\n          setOpenThisLeague(favorite.value === `league${activeLeague!.id}`)\r\n      }\r\n      catch(err){}\r\n    }\r\n\r\n    init()\r\n  },[])\r\n\r\n  const toggleOpenThisLeague = async () => {\r\n    try\r\n    {\r\n      await bridge.send('VKWebAppStorageSet',{\r\n        key:'favorite',\r\n        value: openThisLeague ? '' : `league${activeLeague!.id}`\r\n      })\r\n\r\n      setOpenThisLeague(!openThisLeague)\r\n    }\r\n    catch(err){}\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Лига</PanelHeader>\r\n\r\n      {activeLeague\r\n        ? <>\r\n\r\n            <PlainHeader\r\n              href={activeLeague.vkHref}\r\n              hrefText={'Группа'}\r\n              logo={activeLeague.tournaments[0].logo}\r\n              title={activeLeague.title}\r\n            />\r\n\r\n            <Div style={{paddingBottom:0}}>\r\n              <Card>\r\n                {activeLeague.tournaments.map((t,i) => {\r\n                  return <Cell\r\n                    key={i}\r\n                    after={<Icon28ChevronRightOutline/>}\r\n                    onClick={() => goToTournament(t)}\r\n                  >{t.name}</Cell>\r\n                })}\r\n              </Card>\r\n            </Div>\r\n\r\n            <Actions openSnackbar={openSnackbar} />\r\n\r\n            <Div style={{paddingTop:0}}>\r\n              <Card>\r\n                <CellButton\r\n                  style={{color: !openThisLeague ? 'orange' : 'red'}}\r\n                  before={\r\n                    !openThisLeague\r\n                      ? <Icon28FavoriteOutline style={{marginRight:8,color:'orange'}}/>\r\n                      : <Icon28UnfavoriteOutline style={{marginRight:8,color:'red'}}/>\r\n                  }\r\n                  onClick={toggleOpenThisLeague}\r\n                >{\r\n                  !openThisLeague\r\n                    ? 'Открывать сразу эту лигу'\r\n                    : 'Не открывать сразу эту лигу'\r\n                }</CellButton>\r\n                <CellButton\r\n                  before={<Icon24Copy style={{marginRight:8}}/>}\r\n                  onClick={copyLink}\r\n                  description=\"Прямая ссылка на эту страницу\"\r\n                >Скопировать ссылку на лигу</CellButton>\r\n\r\n                <CellButton\r\n                  before={<Icon24Add style={{marginRight:8}}/>}\r\n                  onClick={goToAddWidget}\r\n                  description=\"Для администраторов групп\"\r\n                >Добавить виджет в группу</CellButton>\r\n              </Card>\r\n            </Div>\r\n          </>\r\n        : <Placeholder>Ничего не найдено. Попробуйте найти турнир в\r\n          <span\r\n            style={{color:'var(--accent)'}}\r\n            onClick={goToBack}\r\n          > списке</span>\r\n        </Placeholder>\r\n      }\r\n\r\n      {snackbar}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default LeaguePanel","import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {\r\n  Button,\r\n  Div,\r\n  FormItem,\r\n  Link,\r\n  NativeSelect,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Spinner,\r\n} from '@vkontakte/vkui';\r\nimport { Icon56CheckCircleOutline } from '@vkontakte/icons';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport api from '../../api';\r\nimport { TournamentInfo } from '../../types/TournamentInfo';\r\nimport { BASE_URL } from '../../api/BASE_URL';\r\nimport { ClubInfo } from '../../types/ClubInfo'\r\n\r\ninterface AddWidgetPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst APP_ID = 7746401\r\nconst VERSION = '5.126'\r\n\r\nconst WIDGET_TYPES = [\r\n  {id : 'table', name : 'Таблица'},\r\n  {id : 'matches', name : 'Матчи'}\r\n]\r\n\r\nconst AddWidgetPanel : React.FC<AddWidgetPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const {user} = useSelector((s:RootState) => s.user)\r\n  // const user = {id:612381684}\r\n  const {activeLeague} = useSelector((s:RootState) => s.league)\r\n\r\n  const goToLeague = () => {\r\n    dispatch(goBack())\r\n  }\r\n\r\n  const [step, setStep] = React.useState(0)\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [error, setError] = React.useState('')\r\n\r\n  const [activeGroup, setActiveGroup] = React.useState<number|null>(null)\r\n  const [activeTournament, setActiveTournament] = React.useState<number>(+activeLeague!.tournaments[0].id)\r\n  const [activeSiteType, setActiveSiteType] = React.useState(activeLeague!.tournaments[0].siteType)\r\n  const [groups,setGroups] = React.useState<{id:number,name:string,photo_50:string}[]>([])\r\n  const [accessToken,setAccessToken] = React.useState('')\r\n  const [activeWidgetType,setActiveWidgetType] = React.useState(WIDGET_TYPES[0].id)\r\n\r\n  const requestGroups = async () => {\r\n    try\r\n    {\r\n      setLoading(true)\r\n      const {access_token} = await bridge.send('VKWebAppGetAuthToken',{app_id:APP_ID,scope:'groups'})\r\n      const res = await bridge.send('VKWebAppCallAPIMethod', {\r\n        method : 'groups.get', params : {user_id : user!.id,filter:'admin',extended:1,fields:'name',access_token,v:VERSION}\r\n      })\r\n      setLoading(false)\r\n\r\n      const groups = res.response.items\r\n      if(groups.length === 0)\r\n      {\r\n        setError('У вас нет администрируемых групп')\r\n        setStep(-1)\r\n      }\r\n      else\r\n      {\r\n        setGroups(groups)\r\n        setActiveGroup(groups[0].id)\r\n        setStep(s=>s+1)\r\n      }\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n    finally\r\n    {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const changeGroup = (e : React.FormEvent<HTMLSelectElement>) => {\r\n    setAccessToken('')\r\n    setActiveGroup(+e.currentTarget.value)\r\n  }\r\n\r\n  const changeWidgetType = (e : React.FormEvent<HTMLSelectElement>) => {\r\n    setActiveWidgetType(e.currentTarget.value)\r\n  }\r\n\r\n  const addWidget = async () => {\r\n    setLoading(true)\r\n    try\r\n    {\r\n      const tournament : TournamentInfo = await api.getTournament({\r\n        tournamentId:activeTournament!,\r\n        siteType:activeSiteType,\r\n      })\r\n      const leagueLink = `https://vk.com/app7746401#league${activeLeague?.id}`\r\n      \r\n      if(activeWidgetType === 'matches')\r\n      {\r\n        const createMatch = ({\r\n          date, home, away, score\r\n        } : {\r\n          date : string,\r\n          home : string,\r\n          away : string,\r\n          score : number[]\r\n          url : string\r\n        }) => {\r\n          return {\r\n            state : date,\r\n            team_a : { name : home },\r\n            team_b : { name : away },\r\n            score : { team_a : score[0], team_b : score[1] }\r\n          }\r\n        }\r\n\r\n        const games = tournament.calendar.length !== 0 ? tournament.calendar.slice(0,4) : tournament.results.slice(0,4)\r\n        const matches = games.map(game => {\r\n          const score = !game.score ? [0,0] : game.score.split(':').map(s=>+s)\r\n          const date = game.date && game.date !== '-'\r\n            ? `${game.date.replace('.2021','').replace('.2020','').replace(' ','')}${game.time ? `, ${game.time}` : ''}`\r\n            : (game.score ? 'Итог' : 'Информации нет')\r\n          return createMatch({\r\n            date,\r\n            home:game.homeName,\r\n            away:game.awayName,\r\n            score,\r\n            url : leagueLink,\r\n          })\r\n        })\r\n\r\n        const data = JSON.stringify({\r\n          title: \"Матчи\",\r\n          title_url: leagueLink,\r\n          more: \"Весь список\",\r\n          more_url: leagueLink,\r\n          matches,\r\n        })\r\n\r\n        const code = `return ${data};`\r\n        \r\n        await bridge.send('VKWebAppShowCommunityWidgetPreviewBox',{group_id : activeGroup!, type : 'matches', code,})\r\n      }\r\n      else if(activeWidgetType === 'table')\r\n      {\r\n        const head = [\r\n          {text : 'Команда', align : 'left'},\r\n          {text : 'В', align : 'right'},\r\n          {text : 'Н', align : 'right'},\r\n          {text : 'П', align : 'right'},\r\n          {text : 'О', align : 'right'},\r\n        ]\r\n\r\n        const body = tournament.table\r\n          .slice(activeSiteType === 0 ? 0 : 1, 11 - (activeSiteType === 0 ? 1 : 0))\r\n          .map(row => {\r\n            const keys : (keyof ClubInfo)[] = ['name','win','draw','lose','points']\r\n            \r\n            return keys.map(key => ({ text : ''+row[key] }) )\r\n          })\r\n\r\n        const data = {\r\n          title: \"Таблица\",\r\n          title_url: leagueLink,\r\n          more : 'Весь список',\r\n          more_url : leagueLink,\r\n          head,\r\n          body,\r\n        }\r\n        const code = `return ${JSON.stringify(data)};`\r\n\r\n        await bridge.send('VKWebAppShowCommunityWidgetPreviewBox',{group_id : activeGroup!, type : 'table', code,})\r\n      }\r\n\r\n      await api.addWidget({\r\n        user_id : user!.id,\r\n        group_id : activeGroup!,\r\n        app_id : APP_ID,\r\n        access_token : accessToken,\r\n        v : VERSION,\r\n        league_id : activeLeague!.id,\r\n        tournament_id : activeTournament!,\r\n        site_type : activeLeague!.tournaments[0].siteType,\r\n        type : activeWidgetType,\r\n      })\r\n      setStep(s=>s+1)\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n    finally\r\n    {\r\n      setLoading(false)      \r\n    }\r\n    const URL = `${BASE_URL}/widgets/update/${activeGroup}`\r\n    await fetch(URL,{method:'PUT'})\r\n  }\r\n\r\n  const requestToken = async () => {\r\n    try\r\n    {\r\n      const {access_token} = await bridge.send(\"VKWebAppGetCommunityToken\", {\r\n        app_id : APP_ID,\r\n        group_id : activeGroup!,\r\n        scope:'app_widget'\r\n      })\r\n      setAccessToken(access_token)\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  const addInGroup = async () => {\r\n    try\r\n    {\r\n      await bridge.send('VKWebAppAddToCommunity')\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('Error : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToLeague} />}\r\n      >Виджет</PanelHeader>\r\n\r\n      {loading && <Div style={{marginTop:28}}><Spinner/></Div>}\r\n      {error && <h1>Error :(</h1>}\r\n\r\n      {step === 0 && !loading && <>\r\n        <Placeholder\r\n          action={<Button onClick={requestGroups} mode=\"tertiary\">Запросить группы</Button>}\r\n        >\r\n          Необходимо выбрать группу, в которую будет установлен виджет.\r\n          Для получения списка групп понадобится токен доступа.\r\n        </Placeholder>\r\n      </>}\r\n\r\n      {step === 1 && <>\r\n        <FormItem top=\"Выберите группу\">\r\n          <NativeSelect\r\n            onChange={changeGroup}\r\n          >\r\n            {groups.map(group => {\r\n              return <option key={group.id} value={group.id}>{group.name}</option>\r\n            })}\r\n          </NativeSelect>\r\n        </FormItem>\r\n        {!accessToken\r\n          ? <Button\r\n              before={'❌'}\r\n              mode=\"tertiary\"\r\n              style={{width:'100%',display:'flex',color:'var(--accent)'}}\r\n              size=\"l\"\r\n              onClick={requestToken}\r\n            >Предоставить токен</Button>\r\n          : <div style={{paddingLeft:12}}>✅ Токен предоставлен</div>\r\n        }\r\n        {accessToken &&\r\n          <Div>\r\n            <Button\r\n              style={{width:'100%'}}\r\n              size=\"l\"\r\n              onClick={() => setStep(s=>s+1)}\r\n            >Далее</Button>\r\n          </Div>\r\n        }\r\n      </>}\r\n\r\n      {step === 2 && !loading && <>\r\n        <FormItem top=\"Выберите лигу для отображения\">\r\n          <NativeSelect\r\n            onChange={e => {\r\n              const tournamentId = +e.currentTarget.value\r\n              setActiveTournament(tournamentId)\r\n              setActiveSiteType(activeLeague!.tournaments.find(t => +t.id === tournamentId)!.siteType)\r\n            }}\r\n          >\r\n            {activeLeague!.tournaments.map(t => {\r\n              return <option key={t.id} value={t.id}>{t.name}</option>\r\n            })}\r\n          </NativeSelect>\r\n        </FormItem>\r\n        <FormItem top=\"Выберите тип виджета\">\r\n          <NativeSelect\r\n            onChange={changeWidgetType}\r\n          >\r\n            {WIDGET_TYPES.map(w => {\r\n              return <option key={w.id} value={w.id}>{w.name}</option>\r\n            })}\r\n          </NativeSelect>\r\n        </FormItem>\r\n        \r\n        <Button\r\n          before={'⚠️'}\r\n          mode=\"tertiary\"\r\n          style={{width:'100%',display:'flex',color:'var(--accent)'}}\r\n          size=\"l\"\r\n          onClick={addInGroup}\r\n        >Убедитесь, что приложение установлено в сообществе</Button>\r\n        <Div>\r\n          <Button\r\n            style={{width:'100%'}}\r\n            size=\"l\"\r\n            onClick={addWidget}\r\n          >Предпросмотр</Button>\r\n        </Div>\r\n      </>}\r\n\r\n      {step === 3 && !loading && <>\r\n        <Placeholder\r\n          icon={<Icon56CheckCircleOutline fill=\"green\"/>}\r\n        >\r\n          Виджет установлен <br/><br/>\r\n          ⚠️ <br/>\r\n          В данный момент он доступен только администраторам сообщества.\r\n          Чтобы открыть его для всех, перейдите с компьютера в\r\n          <Link target=\"_blank\" href={`https://vk.com/club${activeGroup}?act=apps`}> управление сообществом {'>'} приложения </Link>\r\n          и установите поле <b>Видимость виджета приложения </b> в значение <b>все пользователи</b>\r\n        </Placeholder>\r\n      </>}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default AddWidgetPanel","import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {AppRoot, ConfigProvider, ScreenSpinner, View} from '@vkontakte/vkui';\r\n\r\nimport TournamentPanel from './panels/Tournament';\r\nimport TeamPanel from './panels/Team';\r\nimport GamePanel from './panels/Game';\r\nimport TournamentsPanel from './panels/Tournaments';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from './store/rootReducer';\r\nimport { ADD_WIDGET_PANEL, GAME_PANEL, LEAGUE_PANEL, TEAM_PANEL, TOURNAMENTS_PANEL, TOURNAMENT_PANEL } from './constans';\r\nimport { requestTournaments } from './store/slices/tournaments';\r\nimport { requestUser } from './store/slices/user';\r\nimport { goBack } from './store/slices/navigation';\r\nimport { clearActiveGame, goBackToGame } from './store/slices/game';\r\nimport { clearActiveteam, goBackToTeam } from './store/slices/team';\r\nimport { clearPredictionsInfo } from './store/slices/predictions';\r\nimport { setNavigation } from './store/slices/navigation';\r\nimport { clearActiveTournament, setActiveTab as setActiveTournamentTab } from './store/slices/tournament';\r\nimport { setActiveTab as setActiveTeamTab } from './store/slices/team';\r\nimport LeaguePanel from './panels/League';\r\nimport { useAppDispatch } from './store/store';\r\nimport { setActiveLeague } from './store/slices/league';\r\nimport { CityInfo } from './types/CityInfo';\r\nimport AddWidgetPanel from './panels/AddWidget';\r\n\r\nconst App = () => {\r\n  const dispatch = useAppDispatch()\r\n  const {activePanel, history} = useSelector((s:RootState) => s.navigation)\r\n  const {loading : loadingTournaments, cities} = useSelector((s:RootState) => s.tournaments)\r\n  const {loading : loadingTournament} = useSelector((s:RootState) => s.tournament)\r\n  const {loading : loadingUser} = useSelector((s:RootState) => s.user)\r\n\r\n  React.useEffect(() => {\r\n    const initPanels = async (cities : CityInfo[]) => {\r\n      try\r\n      {\r\n        const hash = window.location.hash\r\n        const {keys} = await bridge.send('VKWebAppStorageGet',{keys:['favorite']})\r\n        const favorite = keys.find(entrie => entrie.key === 'favorite')\r\n\r\n        if(hash)\r\n        {\r\n          const id = +hash.slice(1).replace('league','')\r\n          dispatch(setActiveLeague(cities.find(c => c.id === id)))\r\n          dispatch(setNavigation({activePanel:LEAGUE_PANEL,history:[TOURNAMENTS_PANEL,LEAGUE_PANEL]}))\r\n        }\r\n        else if(favorite && favorite.value !== '')\r\n        {\r\n          const id = +favorite.value.replace('league','')\r\n          dispatch(setActiveLeague(cities.find(c => c.id === id)))\r\n          dispatch(setNavigation({activePanel:LEAGUE_PANEL,history:[TOURNAMENTS_PANEL,LEAGUE_PANEL]}))\r\n        }\r\n      }\r\n      catch(err){}\r\n    }\r\n\r\n    const initApp = async () => {\r\n      const userInfo = await bridge.send('VKWebAppGetUserInfo')\r\n      // const userInfo = {id : 17}\r\n      dispatch(requestUser(userInfo.id))\r\n      dispatch(requestTournaments())\r\n        .then((action) => initPanels(action.payload))\r\n      bridge.send('VKWebAppEnableSwipeBack').then(res=>res).catch(err=>err)\r\n    }\r\n    \r\n    initApp()\r\n  },[])\r\n\r\n  const goToBack = () => {\r\n    const currentPanel = history[history.length-1]\r\n    const newPanel = history[history.length-2]\r\n    \r\n    if(currentPanel === 'team')\r\n    {\r\n      if(newPanel === 'game') dispatch(goBackToGame())\r\n\r\n      dispatch(clearActiveteam())\r\n    }\r\n    else if(currentPanel === 'game')\r\n    {\r\n      if(newPanel === 'team') dispatch(goBackToTeam())\r\n\r\n      dispatch(clearActiveGame())\r\n      dispatch(clearPredictionsInfo())\r\n    }\r\n    \r\n    if(newPanel === 'league')\r\n    {\r\n      dispatch(setActiveTournamentTab(0))\r\n      dispatch(clearActiveTournament())\r\n    }\r\n    else if(newPanel === 'tournament')\r\n    {\r\n      dispatch(setActiveTeamTab(0))\r\n    }\r\n\r\n    dispatch(goBack())\r\n  }\r\n\r\n  return (\r\n    <ConfigProvider isWebView={true}>\r\n      <AppRoot>\r\n        <View\r\n          activePanel={activePanel}\r\n          onSwipeBack={goToBack}\r\n          history={history}\r\n          popout={(loadingTournaments || loadingUser || loadingTournament) && <ScreenSpinner />}\r\n        >\r\n          <TournamentsPanel id={TOURNAMENTS_PANEL} cities={cities}/>\r\n          <LeaguePanel id={LEAGUE_PANEL} />\r\n          <TournamentPanel id={TOURNAMENT_PANEL}/>\r\n          <GamePanel id={GAME_PANEL}/>\r\n          <TeamPanel id={TEAM_PANEL}/>\r\n          <AddWidgetPanel id={ADD_WIDGET_PANEL} />\r\n        </View>\r\n      </AppRoot>\r\n    </ConfigProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './index.sass';\n\nimport bridge from '@vkontakte/vk-bridge'\n\n\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport App from './App';\n\nbridge.send('VKWebAppInit')\nbridge.subscribe(e => {\n  if(e.detail.type === 'VKWebAppUpdateConfig')\n    document.body.setAttribute('scheme', e.detail.data.scheme)\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}