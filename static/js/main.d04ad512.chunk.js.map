{"version":3,"sources":["constans/index.ts","store/slices/navigation.ts","api/BASE_URL.ts","api/request.ts","api/index.ts","api/games.ts","api/tournaments.ts","api/squads.ts","api/predictions.ts","api/user.ts","store/slices/tournaments.ts","store/slices/tournament.ts","store/slices/team.ts","store/slices/game.ts","store/slices/user.ts","store/slices/predictions.ts","store/slices/league.ts","store/rootReducer.ts","store/store.ts","components/Headers/PlainHeader.tsx","components/GamesList/index.tsx","components/Table/TableRow.tsx","utils/getGamesByTour.ts","panels/Tournament/index.tsx","panels/Team/index.tsx","components/Headers/GameHeader.tsx","components/GameInfoTabs/index.tsx","components/EventRow/index.tsx","components/Prediction/index.tsx","panels/Game/index.tsx","utils/nowLessThen.ts","panels/Tournaments/index.tsx","panels/League/index.tsx","App.tsx","index.tsx"],"names":["TOURNAMENTS_PANEL","TOURNAMENT_PANEL","GAME_PANEL","TEAM_PANEL","LEAGUE_PANEL","initialState","activePanel","history","navigationSlice","createSlice","name","reducers","setNavigation","state","action","data","payload","goForward","newPanel","push","goBack","pop","length","actions","BASE_URL","process","request","url","a","fetch","res","json","getGames","gameId","getTournaments","getTournament","tournamentId","siteType","getSquads","clubId","getPredictionsByMatch","matchId","doPrediction","userId","prediction","method","body","JSON","stringify","headers","getUser","id","registerUser","requestTournaments","createAsyncThunk","api","tournamentsSlice","loading","error","cities","toggleCollapse","map","c","i","collapsed","extraReducers","builder","addCase","pending","rejected","fulfilled","city","requestTournament","tournamentSlice","activeTournamentName","activeTournamentCity","activeSiteType","activeVkHref","activeTournament","activeTab","setActiveTournament","vkHref","clearActiveTournament","setActiveTab","requestSquad","teamSlice","activeTeam","activeTeamSquad","teamHistory","setActiveTeam","clearActiveteam","goForwardToTeam","goBackToTeam","activeGameEvents","activeGameInfo","awayHref","awayLogo","awayName","date","homeHref","homeLogo","homeName","matchHref","place","score","time","tour","gameHistory","requestGame","gameSlice","setActiveGameInfo","clearActiveGame","goForwardToGame","goBackToGame","activeGame","events","sort","b","minute","requestUser","user","userSlice","addPrediction","predictions","requestPredictions","requestDoPrediction","predictionsSlice","predictionsInfo","clearPredictionsInfo","leagueSlice","activeLeague","setActiveLeague","rootReducer","combineReducers","navigation","tournaments","tournament","team","game","league","store","configureStore","reducer","useAppDispatch","useDispatch","PlainHeader","logo","title","href","hrefText","style","display","marginTop","mode","size","src","padding","margin","marginLeft","color","GamesList","games","header","teamHref","onGoToGame","background","colors","win","draw","lose","split","s","home","away","disabled","before","marginRight","after","description","TableRow","n","isHeader","isDark","photo","values","onClick","fontWeight","marginBottom","className","value","width","textAlign","fontSize","getGamesByTours","calendar","forEach","TABS","TournamentPanel","dispatch","useSelector","goToGame","console","log","left","tab","selected","table","goToTeam","points","Object","entries","results","reverse","TeamPanel","filter","g","GameHeader","onGoToTeam","GameInfoTabs","refery","EventRow","isHome","playerName","eventType","Prediction","variants","onPrediction","userPrediction","canPredict","React","useState","activeVariant","setActiveVariant","flexDirection","variant","predict","over","under","toFixed","GamePanel","loadingPrediction","activeTeamTab","setActiveTeamTab","setUserPrediction","now","Date","d","m","y","h","min","getTime","nowLessThen","useEffect","includes","replace","find","p","req","abort","noInformation","squads","some","then","_","e","eventSymbol","type","player","GROUP_ID","GROUP_HREF","TournamentsPanel","IS_ANDROID","window","location","snackbar","setSnackbar","openSnackbar","text","backgroundColor","fill","height","onClose","separator","document","createElement","click","remove","justifyContent","alignItems","bridge","send","group_id","catch","err","LeaguePanel","goToBack","t","goToTournament","centered","App","loadingTournaments","loadingTournament","loadingUser","initPanels","hash","slice","userInfo","initApp","isWebView","onSwipeBack","currentPanel","setActiveTournamentTab","popout","Tournaments","League","Tournament","Game","Team","subscribe","detail","setAttribute","scheme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d04ad512.chunk.js","sourcesContent":["export const TOURNAMENTS_PANEL = 'tournaments'\r\nexport const TOURNAMENT_PANEL = 'tournament'\r\nexport const GAME_PANEL = 'game'\r\nexport const TEAM_PANEL = 'team'\r\nexport const LEAGUE_PANEL = 'league'","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { \r\n  GAME_PANEL, \r\n  LEAGUE_PANEL, \r\n  TEAM_PANEL, \r\n  TOURNAMENTS_PANEL, \r\n  TOURNAMENT_PANEL \r\n} from \"../../constans\";\r\n\r\ntype Panel = \r\n  | typeof TOURNAMENTS_PANEL \r\n  | typeof TOURNAMENT_PANEL \r\n  | typeof GAME_PANEL \r\n  | typeof TEAM_PANEL\r\n  | typeof LEAGUE_PANEL\r\n\r\ninterface NavigationState\r\n{\r\n  activePanel : Panel\r\n  history : Panel[]\r\n}\r\n\r\nconst initialState : NavigationState = {\r\n  activePanel : TOURNAMENTS_PANEL,\r\n  history : [TOURNAMENTS_PANEL]\r\n}\r\n\r\nconst navigationSlice = createSlice({\r\n  name : 'navigation',\r\n  initialState,\r\n  reducers : {\r\n    setNavigation(state, action)\r\n    {\r\n      const data = action.payload\r\n      state.activePanel = data.activePanel\r\n      state.history = data.history\r\n    },\r\n    goForward(state, action)\r\n    {\r\n      const newPanel = action.payload\r\n      state.activePanel = newPanel\r\n      state.history.push(newPanel)\r\n    },\r\n    goBack(state)\r\n    {\r\n      state.history.pop()\r\n      const newPanel = state.history[state.history.length - 1]\r\n      state.activePanel = newPanel!\r\n    },\r\n  }\r\n})\r\n\r\nexport const {goBack, goForward, setNavigation} = navigationSlice.actions\r\nexport default navigationSlice.reducer","export const BASE_URL = process.env.REACT_APP_SERVER_URL\r\n// export const BASE_URL = 'http://localhost:5000'","export const request = async (url : string) => {\r\n  const res = await fetch(url)\r\n  return res.json()\r\n}","import {getGames} from './games'\r\nimport {getTournaments, getTournament} from './tournaments'\r\nimport {getSquads} from './squads'\r\nimport {getPredictionsByMatch,doPrediction} from './predictions'\r\nimport {getUser, registerUser} from './user'\r\n\r\nexport default {\r\n  getGames,\r\n  getTournaments,\r\n  getTournament,\r\n  getSquads,\r\n  getPredictionsByMatch,\r\n  doPrediction,\r\n  getUser,\r\n  registerUser,\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getGames = async (gameId : number) => {\r\n  const url = `${BASE_URL}/games/${gameId}`\r\n\r\n  return await request(url)\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getTournaments = async () => {\r\n  const url = `${BASE_URL}/tournaments`\r\n\r\n  return await request(url)\r\n}\r\n\r\nexport const getTournament = async ({tournamentId,siteType} : {tournamentId : number, siteType : number}) => {\r\n  const url = `${BASE_URL}/tournaments/${tournamentId}/${siteType}`\r\n  return await request(url)\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getSquads = async ({tournamentId, clubId} : {tournamentId:string,clubId:string}) => {\r\n  const url = `${BASE_URL}/squads/${tournamentId}/${clubId}`\r\n\r\n  return await request(url)\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getPredictionsByMatch = async (matchId : number) => {\r\n  const url = `${BASE_URL}/predictions/${matchId}`\r\n\r\n  return await request(url)\r\n}\r\n\r\nexport const doPrediction = async ({\r\n  matchId, \r\n  userId,\r\n  prediction\r\n} : {\r\n  matchId:number,\r\n  userId:number,\r\n  prediction : 0 | 1\r\n}) => {\r\n  const url = `${BASE_URL}/predictions`\r\n\r\n  const res = await fetch(url,{\r\n    method : 'POST',\r\n    body : JSON.stringify({matchId, userId, prediction}),\r\n    headers : {'Content-Type': 'application/json;charset=utf-8'}\r\n  })\r\n\r\n  return res.json()\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getUser = async (id : number) => {\r\n  const url = `${BASE_URL}/users/${id}`\r\n\r\n  return await request(url)\r\n}\r\n\r\nexport const registerUser = async (id : number) => {\r\n  const url = `${BASE_URL}/users/${id}`\r\n\r\n  const res = await fetch(url,{\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json;charset=utf-8' }\r\n  })\r\n\r\n  return await res.json()\r\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { CityInfo } from \"../../types/CityInfo\"\r\n\r\ninterface TournamentsState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  cities : (CityInfo & {collapsed : boolean})[]\r\n}\r\n\r\nconst initialState : TournamentsState = {\r\n  loading : false,\r\n  error : false,\r\n  cities : []\r\n}\r\n\r\nexport const requestTournaments = createAsyncThunk('tournaments/request', api.getTournaments)\r\n\r\nconst tournamentsSlice = createSlice({\r\n  name : 'tournaments',\r\n  initialState,\r\n  reducers : {\r\n    toggleCollapse(state,action)\r\n    {\r\n      state.cities = state.cities.map((c,i) => {\r\n        if(i === action.payload)\r\n        {\r\n          return {...c, collapsed : !c.collapsed}\r\n        }\r\n\r\n        return c\r\n      })\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestTournaments.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestTournaments.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestTournaments.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n        state.cities = (action.payload as CityInfo[]).map(city => ({...city, collapsed : true}))\r\n      })\r\n  },\r\n})\r\n\r\nexport const {toggleCollapse} = tournamentsSlice.actions\r\nexport default tournamentsSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport api from \"../../api\";\r\n\r\nimport { TournamentInfo } from \"../../types/TournamentInfo\";\r\n\r\ninterface TournamentState\r\n{\r\n  activeTournamentName : string\r\n  activeTournamentCity : string\r\n  activeSiteType : number\r\n  activeVkHref : string\r\n  activeTournament : TournamentInfo | null\r\n  activeTab : number\r\n\r\n  loading : boolean\r\n  error : boolean\r\n}\r\n\r\nconst initialState : TournamentState = {\r\n  loading : false,\r\n  error : false,\r\n\r\n  activeTournamentName : '',\r\n  activeTournamentCity : '',\r\n  activeSiteType : 0,\r\n  activeVkHref : '',\r\n  activeTournament : null,\r\n  activeTab : 0\r\n}\r\n\r\nexport const requestTournament = createAsyncThunk('tournament/request', api.getTournament)\r\n\r\nconst tournamentSlice = createSlice({\r\n  name : 'tournament',\r\n  initialState,\r\n  reducers : {\r\n    setActiveTournament(state,action)\r\n    {\r\n      const activeTournament = action.payload\r\n      state.activeTournamentName = activeTournament.name\r\n      // state.activeTournament = activeTournament.data\r\n      state.activeSiteType = activeTournament.siteType\r\n      state.activeVkHref = activeTournament.vkHref\r\n      state.activeTournamentCity = activeTournament.city\r\n    },\r\n    clearActiveTournament(state)\r\n    {\r\n      state.activeTournament = null\r\n      state.activeTournamentName = ''\r\n    },\r\n    setActiveTab(state,action)\r\n    {\r\n      state.activeTab = action.payload\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestTournament.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestTournament.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestTournament.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n\r\n        const activeTournament = action.payload\r\n        state.activeTournament = activeTournament\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  clearActiveTournament,\r\n  setActiveTournament,\r\n  setActiveTab,\r\n} = tournamentSlice.actions\r\nexport default tournamentSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { ClubInfo } from \"../../types/ClubInfo\"\r\nimport { SquadInfo } from \"../../types/SquadInfo\"\r\n\r\ninterface TeamState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  activeTeamSquad : SquadInfo[]\r\n  activeTab : number\r\n  \r\n  activeTeam : ClubInfo | null\r\n  teamHistory : ClubInfo[]\r\n}\r\n\r\nconst initialState : TeamState = {\r\n  loading : false,\r\n  error : false,\r\n  activeTeam : null,\r\n  activeTeamSquad: [],\r\n  teamHistory : [],\r\n  activeTab : 0,\r\n}\r\n\r\nexport const requestSquad = createAsyncThunk(\r\n  'squad/request',\r\n  ({ tournamentId,clubId }: { tournamentId: string, clubId: string}) => {\r\n    return api.getSquads({tournamentId,clubId})\r\n  }\r\n)\r\n\r\nconst teamSlice = createSlice({\r\n  name : 'team',\r\n  initialState,\r\n  reducers : {\r\n    setActiveTeam(state,action)\r\n    {\r\n      state.activeTeam = action.payload\r\n    },\r\n    clearActiveteam(state)\r\n    {\r\n      state.activeTeam = null\r\n      state.activeTeamSquad = []\r\n    },\r\n    goForwardToTeam(state)\r\n    {\r\n      state.teamHistory.push(state.activeTeam!)\r\n    },\r\n    goBackToTeam(state)\r\n    {\r\n      if(state.teamHistory.length === 0) return\r\n\r\n      const activeTeam = state.teamHistory.pop()!\r\n      state.activeTeam = activeTeam\r\n    },\r\n    setActiveTab(state,action)\r\n    {\r\n      state.activeTab = action.payload\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestSquad.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestSquad.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestSquad.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n\r\n        const activeTeamSquad = action.payload\r\n        state.activeTeamSquad = activeTeamSquad\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  clearActiveteam,\r\n  setActiveTeam,\r\n  setActiveTab,\r\n\r\n  goForwardToTeam,\r\n  goBackToTeam,\r\n} = teamSlice.actions\r\nexport default teamSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport api from \"../../api\"\r\nimport { GameEvents } from \"../../types/GameEvents\"\r\nimport { GameInfo } from \"../../types/GameInfo\"\r\n\r\n\r\n\r\ninterface GameHistoryRecord\r\n{\r\n  activeGameInfo : GameInfo\r\n  activeGameEvents : GameEvents | null  \r\n}\r\n\r\ninterface GameState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  activeGameInfo : GameInfo\r\n  activeGameEvents : GameEvents | null\r\n  gameHistory : GameHistoryRecord[]\r\n}\r\n\r\nconst initialState : GameState = {\r\n  loading : false,\r\n  error : false,\r\n  activeGameEvents : null,\r\n  activeGameInfo : {\r\n    awayHref: \"\",\r\n    awayLogo: \"\",\r\n    awayName: \"\",\r\n    date: \"-\",\r\n    homeHref: \"\",\r\n    homeLogo: \"\",\r\n    homeName: \"\",\r\n    matchHref: \"\",\r\n    place: \"-\",\r\n    score: \"-:-\",\r\n    time: \"-\",\r\n    tour: 1,\r\n  },\r\n  gameHistory : [],\r\n}\r\n\r\nexport const requestGame = createAsyncThunk(\r\n  'game/request',\r\n  (gameId : number) => api.getGames(gameId)\r\n)\r\n\r\nconst gameSlice = createSlice({\r\n  name : 'game',\r\n  initialState,\r\n  reducers : {\r\n    setActiveGameInfo(state,action)\r\n    {\r\n      state.activeGameInfo = action.payload\r\n    },\r\n    clearActiveGame(state)\r\n    {\r\n      state.activeGameInfo = initialState.activeGameInfo\r\n      state.activeGameEvents = null\r\n    },\r\n    goForwardToGame(state)\r\n    {\r\n      state.gameHistory.push({\r\n        activeGameEvents : state.activeGameEvents,\r\n        activeGameInfo : state.activeGameInfo,\r\n      })\r\n    },\r\n    goBackToGame(state)\r\n    {\r\n      if(state.gameHistory.length === 0) return\r\n      \r\n      const activeGame = state.gameHistory.pop()!\r\n\r\n      state.activeGameEvents = activeGame.activeGameEvents\r\n      state.activeGameInfo = activeGame.activeGameInfo\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestGame.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestGame.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestGame.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n\r\n        const activeGameEvents = action.payload\r\n        state.activeGameEvents = activeGameEvents\r\n        state.activeGameEvents!.events.sort((a,b) => a.minute - b.minute)\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  setActiveGameInfo,\r\n  goBackToGame,\r\n  goForwardToGame,\r\n  clearActiveGame,\r\n} = gameSlice.actions\r\nexport default gameSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { User } from \"../../types/User\"\r\n\r\ninterface UserState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  user : User | null\r\n}\r\n\r\nconst initialState : UserState = {\r\n  loading : false,\r\n  error : false,\r\n  user : null\r\n}\r\n\r\nexport const requestUser = createAsyncThunk(\r\n  'user/request',\r\n  async (userId : number) => {\r\n    const user = await api.getUser(userId)\r\n    if(user) return user\r\n\r\n    const res = await api.registerUser(userId)\r\n    return res\r\n  }\r\n)\r\n\r\nconst userSlice = createSlice({\r\n  name : 'user',\r\n  initialState,\r\n  reducers : {\r\n    addPrediction(state,action)\r\n    {\r\n      state.user!.predictions.push(action.payload)\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestUser.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestUser.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestUser.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n        state.user = action.payload\r\n      })\r\n  },\r\n})\r\n\r\nexport const { addPrediction } = userSlice.actions\r\nexport default userSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { PredictionInfo } from \"../../types/PredictionInfo\"\r\n\r\ninterface PredictionsState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  predictionsInfo : PredictionInfo | null\r\n}\r\n\r\nconst initialState : PredictionsState = {\r\n  loading : false,\r\n  error : false,\r\n  predictionsInfo : null\r\n}\r\n\r\nexport const requestPredictions = createAsyncThunk(\r\n  'predictions/get',\r\n  (matchId : number) => api.getPredictionsByMatch(matchId)\r\n)\r\n\r\nexport const requestDoPrediction = createAsyncThunk(\r\n  'predictions/do',\r\n  ({ matchId, userId, prediction }: { matchId: number, userId: number, prediction : 0 | 1 }) => {\r\n    return api.doPrediction({ matchId, userId, prediction })\r\n  }\r\n)\r\n\r\nconst predictionsSlice = createSlice({\r\n  name : 'predictions',\r\n  initialState,\r\n  reducers : {\r\n    clearPredictionsInfo(state)\r\n    {\r\n      state.predictionsInfo = null\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestPredictions.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestPredictions.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestPredictions.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n        state.predictionsInfo = action.payload\r\n      })\r\n\r\n      .addCase(requestDoPrediction.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestDoPrediction.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestDoPrediction.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n      })\r\n  },\r\n})\r\n\r\nexport const {clearPredictionsInfo} = predictionsSlice.actions\r\nexport default predictionsSlice.reducer","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport {CityInfo} from '../../types/CityInfo'\r\n\r\ninterface leagueState\r\n{\r\n  activeLeague : CityInfo | null\r\n}\r\n\r\nconst initialState : leagueState = {\r\n  activeLeague : null\r\n}\r\n\r\nconst leagueSlice = createSlice({\r\n  name : 'league',\r\n  initialState,\r\n  reducers : {\r\n    setActiveLeague(state,action)\r\n    {\r\n      state.activeLeague = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {setActiveLeague} = leagueSlice.actions\r\nexport default leagueSlice.reducer","import { combineReducers } from \"@reduxjs/toolkit\"\r\n\r\nimport navigation from './slices/navigation'\r\nimport tournaments from './slices/tournaments'\r\nimport tournament from './slices/tournament'\r\nimport team from './slices/team'\r\nimport game from './slices/game'\r\nimport user from './slices/user'\r\nimport predictions from './slices/predictions'\r\nimport league from './slices/league'\r\n\r\nconst rootReducer = combineReducers({\r\n  navigation,\r\n  tournaments,\r\n  tournament,\r\n  team,\r\n  game,\r\n  user,\r\n  predictions,\r\n  league,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport default rootReducer","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = configureStore({ reducer: rootReducer })\r\n\r\nexport const useAppDispatch = () => useDispatch<typeof store.dispatch>()\r\nexport default store","import React from 'react';\r\n\r\nimport {Avatar, Div, Link} from '@vkontakte/vkui';\r\nimport { Icon24Globe } from '@vkontakte/icons';\r\n\r\ninterface PlainHeaderProps\r\n{\r\n  logo ?: string\r\n  title : string\r\n  league ?: string\r\n  city ?: string\r\n  href ?: string\r\n  hrefText ?: string\r\n}\r\n\r\nconst PlainHeader : React.FC<PlainHeaderProps> = ({\r\n  logo,\r\n  title,\r\n  city,\r\n  href,\r\n  hrefText,\r\n}) => {\r\n  return(\r\n    <Div style={{display:'flex',marginTop:12}}>\r\n      {logo && <Avatar mode=\"image\" size={74} src={logo}/>}\r\n      <div>\r\n        <h3 style={{padding:0, margin:0, marginLeft: logo ? 8 : 0}}>{title}</h3>\r\n        <h5 style={{padding:0, margin:0,marginTop:4,marginLeft: logo ? 8 : 0,color:'gray'}}>{city}</h5>\r\n        {href && <Link style={{marginLeft:logo ? 8 : 0}} href={href}>{hrefText}</Link>}\r\n      </div>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default PlainHeader","import React from 'react';\r\n\r\nimport {\r\n  Group, \r\n  Avatar, \r\n  Cell, \r\n  Header, \r\n  Counter,\r\n} from '@vkontakte/vkui';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\n\r\ninterface GamesListProps\r\n{\r\n  games : GameInfo[]\r\n  header ?: string\r\n  teamHref ?: string\r\n  onGoToGame ?: (game : GameInfo) => void\r\n}\r\n\r\nconst GamesList : React.FC<GamesListProps> = ({\r\n  games,\r\n  header,\r\n  teamHref,\r\n  onGoToGame,\r\n}) => {\r\n  return(\r\n    <Group\r\n      header={header && <Header>{header}</Header>}\r\n    >\r\n      {games.map((game,i) => {\r\n        let background = ''\r\n        if(teamHref)\r\n        {\r\n          const colors = {\r\n            win:'var(--button_commerce_background)',\r\n            draw:'orange',\r\n            lose:'var(--button_secondary_destructive_foreground)'\r\n          }\r\n          const [home, away] = game.score.split(':').map(s=>+s)\r\n\r\n          if(home > away)\r\n            background = teamHref === game.homeHref ? colors.win : colors.lose\r\n          else if(home < away)\r\n            background = teamHref === game.homeHref ? colors.lose : colors.win\r\n          else\r\n            background = colors.draw\r\n        }\r\n\r\n        return <Cell\r\n          // disabled={!onGoToGame || (game.date === '-' && !game.score)}\r\n          disabled={true}\r\n          key={i}\r\n          before={<div style={{display:'flex',marginRight:8,}}>\r\n            <Avatar mode=\"image\" src={game.homeLogo}/>\r\n            <Avatar mode=\"image\" src={game.awayLogo}/>\r\n          </div>}\r\n          after={game.score && <Counter mode=\"primary\" style={{padding:4,background}}>{game.score}</Counter>}\r\n          description={game.date !== '-' && \r\n            <div>\r\n              <div>{game.date}, {game.time}</div>\r\n              {game.place !== '-' && <div>{game.place}</div>}\r\n            </div>\r\n          }\r\n          // onClick={() => onGoToGame && onGoToGame(game)}\r\n        ><div><div>{game.homeName}</div><div>{game.awayName}</div></div></Cell>\r\n      })}\r\n    </Group>\r\n  )\r\n}\r\n\r\nexport default GamesList","import React from 'react';\r\nimport './Table.sass';\r\n\r\nimport {Avatar, Cell} from '@vkontakte/vkui';\r\n\r\ninterface TableRowProps\r\n{\r\n  title : string\r\n  n ?: number\r\n  description ?: string\r\n  isHeader ?: boolean\r\n  isDark ?: boolean\r\n  colors : string[]\r\n  values : string[]\r\n  photo ?: string\r\n  onClick ?: () => void\r\n}\r\n\r\nconst TableRow : React.FC<TableRowProps> = ({\r\n  n,\r\n  isHeader,\r\n  isDark,\r\n  photo,\r\n  colors,\r\n  values,\r\n  title,\r\n  description,\r\n  onClick,\r\n}) => {\r\n  return(\r\n    <Cell\r\n      style={{\r\n        fontWeight: isHeader ? 'bold' : 'normal',\r\n        background : isDark ? 'var(--background_keyboard)' : '',\r\n        marginBottom : 4,\r\n      }}\r\n      before={photo &&\r\n        <div className=\"photo\">\r\n          {n && <div className=\"photo__place\">{n}</div>}\r\n          <Avatar mode=\"image\" src={photo}/>\r\n        </div>\r\n      }\r\n      after={<div style={{padding:4,display:'flex',}}>\r\n        {values.map((value, i) => {\r\n          return <div\r\n            key={i}\r\n            style={{color:colors[i], marginRight:4, width:14, textAlign:'center', fontSize:14}}\r\n          >{value}</div>\r\n        })}\r\n        </div>}\r\n      disabled={!onClick}\r\n      onClick={onClick}\r\n      description={description}\r\n    >{title}</Cell>\r\n  )\r\n}\r\n\r\nexport default TableRow","import { GameInfo } from \"../types/GameInfo\";\r\n\r\nexport const getGamesByTours =  (calendar : GameInfo[]) : {[tour : string] : GameInfo[]} => {\r\n  const data : {[tour : string] : GameInfo[]} = {}\r\n\r\n  calendar.forEach(game => {\r\n    if(!data[game.tour])\r\n    {\r\n      data[game.tour] = []\r\n    }\r\n\r\n    data[game.tour].push(game)\r\n  })\r\n\r\n  return data\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Cell,\r\n  HorizontalScroll, \r\n  List, \r\n  Panel, \r\n  PanelHeader, \r\n  PanelHeaderBack, \r\n  Tabs, \r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { clearActiveTournament, setActiveTab } from '../../store/slices/tournament';\r\nimport { requestSquad, setActiveTeam} from '../../store/slices/team';\r\nimport { setActiveGameInfo } from '../../store/slices/game';\r\n\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport GamesList from '../../components/GamesList';\r\nimport TableRow from '../../components/Table/TableRow';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\n\r\nimport { getGamesByTours } from '../../utils/getGamesByTour';\r\nimport { GAME_PANEL, TEAM_PANEL } from '../../constans';\r\n\r\ninterface TournamentPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst TABS = [ 'Таблица', 'Расписание', 'Результаты']\r\n\r\nconst TournamentPanel : React.FC<TournamentPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const {activeTournament,activeTournamentName,activeTournamentCity,activeTab,activeSiteType,activeVkHref} = useSelector((s:RootState) => s.tournament)\r\n\r\n  const goToTeam = (team : ClubInfo) => {\r\n    dispatch(setActiveTeam(team))\r\n    dispatch(goForward(TEAM_PANEL))\r\n  }\r\n\r\n  const goToGame = (game : GameInfo) => {\r\n    console.log(game)\r\n    if(game.date === '-' && !game.score) return\r\n    \r\n    dispatch(setActiveGameInfo(game))\r\n    dispatch(goForward(GAME_PANEL))\r\n  }\r\n\r\n  const goToTournaments = () => {\r\n    dispatch(goBack())\r\n    dispatch(clearActiveTournament())\r\n    dispatch(setActiveTab(0))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToTournaments} />}\r\n      >Турнир</PanelHeader>\r\n      \r\n      <PlainHeader\r\n        hrefText={'Сайт'}\r\n        href={activeSiteType === 0\r\n            ? `https://lfl.ru/tournament${activeTournament?.tournamentId}`\r\n            : `https://www.goalstream.org/season/${activeTournament?.tournamentId}`\r\n        }\r\n        title={activeTournamentName}\r\n        city={activeTournamentCity}\r\n      />\r\n      <HorizontalScroll>\r\n        <Tabs mode=\"buttons\">\r\n          {TABS.map((tab,i) => {\r\n            return <TabsItem\r\n              key={i}\r\n              selected={activeTab === i}\r\n              onClick={() => dispatch(setActiveTab(i))}\r\n            >{tab}</TabsItem>\r\n          })}\r\n        </Tabs>\r\n      </HorizontalScroll>\r\n\r\n      \r\n      {activeTab === 0 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n            isHeader={true}\r\n            title={'Команда'}\r\n            values={['И','В','Н','П','О']}\r\n            colors={['','green','orange','red']}\r\n          />\r\n          {\r\n            activeTournament.table.map((team,i) => {\r\n              if(team.title === '') return\r\n\r\n              return team.title\r\n                ? <Cell\r\n                    key={i}\r\n                    disabled\r\n                    style={{fontWeight:'bold'}}\r\n                  >{team.title}</Cell>\r\n                : <TableRow\r\n                    key={i}\r\n                    n={team.place}\r\n                    title={team.name}\r\n                    photo={team.logo}\r\n                    onClick={() => goToTeam(team)}\r\n                    values={[team.win+team.draw+team.lose,team.win,team.draw,team.lose,team.points].map(n=>''+n)}\r\n                    colors={['','green','orange','red']}\r\n                    isDark={i % 2 === 0}\r\n                  />\r\n            })\r\n          }\r\n        </List>\r\n      }\r\n\r\n      {activeTab === 1 && activeTournament &&\r\n        Object.entries(getGamesByTours(activeTournament.calendar))\r\n          .map(([tour, games],i) => {\r\n            return <GamesList\r\n              key={i}\r\n              header={`${tour} ТУР`}\r\n              games={games}\r\n              onGoToGame={goToGame} // !!!!\r\n            />\r\n          })\r\n      }\r\n\r\n      {activeTab === 2 && activeTournament &&\r\n        Object.entries(getGamesByTours(activeTournament.results)).reverse()\r\n          .map(([tour, games],i) => {\r\n            return <GamesList\r\n              key={i}\r\n              header={`${tour} ТУР`}\r\n              games={games}\r\n              onGoToGame={goToGame}\r\n            />\r\n          })\r\n      }\r\n\r\n      {/* {activeTab === 3 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n              isHeader={true}\r\n              title={'Игрок'}\r\n              values={['Г']}\r\n              colors={[]}\r\n            />\r\n          {\r\n            activeTournament.strikers.map((player,i) => {\r\n              return <TableRow\r\n                key={i}\r\n                n={i+1}\r\n                title={player.playerName}\r\n                photo={player.playerPhoto}\r\n                description={player.teamName}\r\n                values={[''+player.points]}\r\n                colors={[]}\r\n                isDark={i % 2 === 0}\r\n              />\r\n            })\r\n          }\r\n        </List>\r\n      }\r\n\r\n      {activeTab === 4 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n              isHeader={true}\r\n              title={'Игрок'}\r\n              values={['А']}\r\n              colors={[]}\r\n            />\r\n          {\r\n            activeTournament.assistents.map((player,i) => {\r\n              return <TableRow\r\n                key={i}\r\n                n={i+1}\r\n                title={player.playerName}\r\n                photo={player.playerPhoto}\r\n                description={player.teamName}\r\n                values={[''+player.points]}\r\n                colors={[]}\r\n                isDark={i % 2 === 0}\r\n              />\r\n            })\r\n          }\r\n        </List>\r\n      } */}\r\n\r\n\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TournamentPanel","import React from 'react';\r\n\r\n\r\nimport {\r\n  Div,\r\n  Group,\r\n  HorizontalScroll,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Spinner,\r\n  Tabs,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { clearActiveteam, goForwardToTeam,setActiveTab } from '../../store/slices/team';\r\nimport { goBackToGame, setActiveGameInfo } from '../../store/slices/game';\r\n\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport GamesList from '../../components/GamesList';\r\nimport TableRow from '../../components/Table/TableRow';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\n\r\nimport { GAME_PANEL } from '../../constans';\r\n\r\ninterface TeamPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\n// const TABS = [ 'Расписание', 'Результаты', 'Состав' ]\r\nconst TABS = [ 'Расписание', 'Результаты']\r\n\r\nconst TeamPanel : React.FC<TeamPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const { activeTeamSquad, loading, activeTeam, activeTab } = useSelector((s:RootState) => s.team)\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeTournament,activeTournamentCity,activeTournamentName} = useSelector((s:RootState) => s.tournament)\r\n\r\n  const goToBack = () => {\r\n    const isToGame = history[history.length-2] === 'game'\r\n    if(isToGame) dispatch(goBackToGame())\r\n\r\n    dispatch(goBack())\r\n    dispatch(clearActiveteam())\r\n  }\r\n\r\n  const goToGame = (game : GameInfo) => {\r\n    if(game.date === '-' && !game.score) return\r\n\r\n    dispatch(goForwardToTeam())\r\n    dispatch(setActiveGameInfo(game))\r\n    dispatch(goForward(GAME_PANEL))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Команда</PanelHeader>\r\n\r\n      {activeTeam && <>\r\n        <PlainHeader\r\n          logo={activeTeam.logo}\r\n          title={activeTeam.name}\r\n          city={activeTournamentCity}\r\n        />\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => dispatch(setActiveTab(i))}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      </>}\r\n\r\n      \r\n      {activeTab === 0 && activeTeam &&\r\n        <GamesList\r\n          games={activeTournament!.calendar.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {activeTab === 1 && activeTeam &&\r\n        <GamesList\r\n          teamHref={activeTeam.href}\r\n          games={activeTournament!.results.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {/* {activeTab === 2 && activeTeam &&\r\n        <Group>\r\n          <TableRow\r\n            isHeader={true}\r\n            title={'Игрок'}\r\n            values={['И', 'Г','А','Ж','К']}\r\n            colors={['','green','gray','orange','red']}\r\n          />\r\n          {\r\n            loading\r\n              ? <Div><Spinner/></Div>\r\n              : activeTeamSquad.map((player,i) => {\r\n                return <TableRow\r\n                  key={i}\r\n                  title={player.playerName}\r\n                  photo={player.playerPhoto}\r\n                  description={player.amplua}\r\n                  values={[player.games,player.goals,player.assists,player.yc,player.rc].map(n=>''+n)}\r\n                  colors={['','green','gray','orange','red']}\r\n                  isDark={i % 2 === 0}\r\n                />\r\n              })\r\n          }\r\n        </Group>\r\n      } */}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TeamPanel","import React from 'react';\r\nimport './Headers.sass'\r\n\r\nimport {Avatar, Div} from '@vkontakte/vkui';\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\n\r\ninterface Team\r\n{\r\n  logo : string\r\n  href : string\r\n  name : string\r\n}\r\n\r\ninterface GameHeaderProps\r\n{\r\n  home : Team\r\n  away : Team\r\n  score : string\r\n  onGoToTeam : (team : ClubInfo) => void\r\n}\r\n\r\nconst GameHeader : React.FC<GameHeaderProps> = ({\r\n  home,\r\n  away,\r\n  score,\r\n  onGoToTeam,\r\n}) => {\r\n  const goToTeam = (team : Team) => onGoToTeam(team as ClubInfo)\r\n\r\n  return(\r\n    <Div className=\"game-header__container\">\r\n      <div className=\"game-header__item\"\r\n        onClick={() => goToTeam(home)}\r\n      >\r\n        <Avatar size={82} mode=\"image\" src={home.logo} />\r\n        <div style={{textAlign:'center'}}>{home.name}</div>\r\n      </div>\r\n      <div className=\"game-header__item\">{score}</div>\r\n      <div className=\"game-header__item\"\r\n        onClick={() => goToTeam(away)}\r\n      >\r\n        <Avatar size={82} mode=\"image\" src={away.logo} />\r\n        <div style={{textAlign:'center'}}>{away.name}</div>\r\n      </div>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default GameHeader","import React from 'react';\r\nimport './GameInfoTabs.sass'\r\n\r\nimport {HorizontalScroll, Tabs, TabsItem} from '@vkontakte/vkui';\r\nimport { Icon28GlobeOutline, Icon28AdvertisingOutline, Icon28CalendarOutline } from '@vkontakte/icons';\r\ninterface GameInfoTabsProps\r\n{\r\n  date : string | null\r\n  refery : string | null\r\n  place : string | null\r\n}\r\n\r\nconst GameInfoTabs : React.FC<GameInfoTabsProps> = ({\r\n  date,\r\n  refery,\r\n  place,\r\n}) => {\r\n  return(\r\n    <HorizontalScroll>\r\n      <Tabs mode=\"buttons\">\r\n        {date && \r\n          <TabsItem selected={true} className=\"game-info__item\">\r\n            <Icon28CalendarOutline/><div>{date}</div>\r\n          </TabsItem>\r\n        }\r\n        {place && \r\n          <TabsItem selected={true} className=\"game-info__item\">\r\n            <Icon28GlobeOutline/><div>{place}</div>\r\n          </TabsItem>\r\n        }\r\n        {refery && \r\n          <TabsItem selected={true} className=\"game-info__item\">\r\n            <Icon28AdvertisingOutline/><div>{refery}</div>\r\n          </TabsItem>\r\n        }\r\n      </Tabs>\r\n    </HorizontalScroll>\r\n  )\r\n}\r\n\r\nexport default GameInfoTabs","import React from 'react';\r\nimport './EventRow.sass'\r\n\r\ninterface EventRowProps\r\n{\r\n  isHome : boolean\r\n  playerName : string\r\n  eventType : string\r\n  minute : number\r\n}\r\n\r\nconst EventRow : React.FC<EventRowProps> = ({\r\n  isHome,\r\n  playerName,\r\n  eventType,\r\n  minute,\r\n}) => {\r\n  return(\r\n    <div className=\"events__row\">\r\n      <div className=\"events__player\">{minute !== 0 && !isHome ? minute : ''}{isHome && playerName}</div>\r\n      <div className=\"events__type\">{eventType}</div>\r\n      <div className=\"events__player\">{!isHome && playerName}{minute !== 0 && isHome ? minute : ''}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EventRow","import React from 'react';\r\nimport './Prediction.sass';\r\n\r\nimport { Card, Div, Header, Spinner } from '@vkontakte/vkui';\r\nimport { PredictionInfo } from '../../types/PredictionInfo';\r\nimport { Icon12Verified } from '@vkontakte/icons';\r\n\r\ninterface PredictionProps\r\n{\r\n  title : string\r\n  variants : string[]\r\n  onPrediction : (variant : 0 | 1) => void\r\n  loading : boolean\r\n  predictionsInfo : PredictionInfo | null\r\n  userPrediction : 0 | 1 | null\r\n  canPredict : boolean\r\n}\r\n\r\nconst Prediction : React.FC<PredictionProps> = ({\r\n  title,\r\n  variants,\r\n  onPrediction,\r\n  loading,\r\n  predictionsInfo,\r\n  userPrediction,\r\n  canPredict,\r\n}) => {\r\n  const [activeVariant, setActiveVariant] = React.useState<0 | 1 | null>(userPrediction)\r\n  const doPrediction = (predict : 0|1) => {\r\n    if(loading || userPrediction !== null || !canPredict) return\r\n\r\n    setActiveVariant(predict)\r\n    onPrediction(predict)\r\n  }\r\n\r\n  return(\r\n    <Div>\r\n      <Card style={{display:'flex',flexDirection:'column'}}>\r\n        <Header>{title}</Header>\r\n        {loading\r\n          ? <Div><Spinner/></Div>\r\n          : <Div>\r\n            {variants.map((variant,i) => {\r\n              return <div\r\n                key={i}\r\n                className=\"prediction__btn\"\r\n                onClick={() => doPrediction(i as 0|1)}\r\n                style={{background : (!canPredict || userPrediction !== null) ? 'rgba(0,0,0,0.3)' : ''}}\r\n              >\r\n                <div className=\"prediction__variant\">\r\n                  {variant}\r\n                  {predictionsInfo && ` - ${i === 0 ? predictionsInfo.over : predictionsInfo.under}`}                  \r\n                </div>\r\n                {predictionsInfo &&\r\n                  <div className=\"prediction__stat\">\r\n                    {(userPrediction==i || activeVariant === i) && <Icon12Verified/>}\r\n                    {predictionsInfo.over + predictionsInfo.under === 0\r\n                      ? 0\r\n                      : (([predictionsInfo.over,predictionsInfo.under][i]/(predictionsInfo.over + predictionsInfo.under))*100).toFixed(0)\r\n                    }%\r\n                  </div>\r\n                }\r\n              </div>\r\n            })}\r\n          </Div>\r\n        }\r\n\r\n      </Card>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default Prediction","import React from 'react';\r\n\r\nimport {\r\n  Cell,\r\n  Div,\r\n  HorizontalScroll,\r\n  List,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Spinner,\r\n  Tabs,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { goBackToTeam, requestSquad, setActiveTeam } from '../../store/slices/team';\r\nimport { clearActiveGame, goForwardToGame, requestGame } from '../../store/slices/game';\r\nimport {useAppDispatch} from '../../store/store';\r\n\r\nimport GameHeader from '../../components/Headers/GameHeader';\r\nimport GameInfoTabs from '../../components/GameInfoTabs';\r\nimport EventRow from '../../components/EventRow';\r\n\r\nimport { TEAM_PANEL } from '../../constans';\r\n\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\nimport Prediction from '../../components/Prediction';\r\nimport { requestDoPrediction, requestPredictions, clearPredictionsInfo } from '../../store/slices/predictions';\r\nimport { addPrediction } from '../../store/slices/user';\r\nimport { nowLessThen } from '../../utils/nowLessThen';\r\n\r\ninterface GamePanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst TABS = [ 'События', 'Составы',]\r\n\r\nconst GamePanel : React.FC<GamePanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeGameInfo,activeGameEvents,loading} = useSelector((s:RootState) => s.game)\r\n  const {activeTournament} = useSelector((s:RootState) => s.tournament)\r\n  const {user} = useSelector((s:RootState) => s.user)\r\n  const {predictionsInfo, loading : loadingPrediction} = useSelector((s:RootState) => s.predictions)\r\n\r\n  const [activeTab, setActiveTab] = React.useState(0)\r\n  const [activeTeamTab, setActiveTeamTab] = React.useState(0)\r\n  const [userPrediction, setUserPrediction] = React.useState<0|1|null>(null)\r\n\r\n  const canPredict = nowLessThen(\r\n    activeGameInfo.date.split(' ')[0].split('.').map(s=>+s),\r\n    activeGameInfo.time.split(':').map(s=>+s)\r\n  )\r\n\r\n  const goToBack = () => {\r\n    const isToTeam = history[history.length-2] === 'team'\r\n    if(isToTeam) dispatch(goBackToTeam())\r\n    \r\n    dispatch(goBack())\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n  }\r\n\r\n  const goToTeam = (team : ClubInfo) => {\r\n    const tournamentId = activeTournament!.tournamentId\r\n    const clubId = team.href.replace('/club','')\r\n\r\n    dispatch(goForwardToGame())\r\n    \r\n    dispatch(setActiveTeam(team))\r\n    dispatch(goForward(TEAM_PANEL))\r\n\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n\r\n    dispatch(requestSquad({tournamentId, clubId}))\r\n  }\r\n\r\n  const doPredict = (prediction : 0 | 1) => {\r\n    const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\r\n    dispatch(addPrediction({matchId, prediction}))\r\n    dispatch(requestDoPrediction({ matchId, prediction, userId : user!.id, }))\r\n      .then(_ => dispatch(requestPredictions(matchId)))\r\n    setUserPrediction(prediction)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if(activeGameEvents) return\r\n\r\n    if(activeGameInfo.matchHref.includes('/empty_protocol'))\r\n    {\r\n      const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\r\n      const prediction = user!.predictions.find(p => p.matchId === matchId)\r\n      if(prediction)\r\n      {\r\n        setUserPrediction(prediction.prediction)\r\n      }\r\n\r\n      if(!canPredict || !!prediction)\r\n        dispatch(requestPredictions(matchId))\r\n      return\r\n    }\r\n\r\n    const req = dispatch(requestGame(+activeGameInfo.matchHref.replace('/match','')))\r\n    return () => {\r\n      req.abort()\r\n    }\r\n  },[])\r\n\r\n  const home = {\r\n    name : activeGameInfo.homeName,\r\n    href : activeGameInfo.homeHref,\r\n    logo : activeGameInfo.homeLogo,\r\n  }\r\n  \r\n  const away = {\r\n    name : activeGameInfo.awayName,\r\n    href : activeGameInfo.awayHref,\r\n    logo : activeGameInfo.awayLogo,\r\n  }\r\n\r\n  const noInformation = activeGameEvents && !activeGameEvents.squads.some(s => s.length > 0)\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Матч</PanelHeader>\r\n\r\n      <GameHeader\r\n        home={home}\r\n        away={away}\r\n        score={!activeGameInfo.score ? '-:-' : activeGameInfo.score}\r\n        onGoToTeam={goToTeam}\r\n      />\r\n\r\n      <GameInfoTabs\r\n        date={activeGameInfo.date !== '-' ? `${activeGameInfo.date}, ${activeGameInfo.time}` : null}\r\n        refery={activeGameEvents && activeGameEvents.refery !== '-' ? activeGameEvents.refery : null}\r\n        place={activeGameEvents && activeGameEvents.place !== '-' ? activeGameEvents.place : null}\r\n      />\r\n\r\n      {!loading && !noInformation && activeGameInfo.score &&\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => setActiveTab(i)}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      }\r\n      \r\n      {!activeGameInfo.score &&\r\n        <Prediction\r\n          canPredict={canPredict}\r\n          userPrediction={userPrediction}\r\n          predictionsInfo={predictionsInfo}\r\n          loading={loadingPrediction}\r\n          title=\"Количество голов\"\r\n          variants={['Больше 7', 'Не больше 7']}\r\n          onPrediction={doPredict}\r\n        />\r\n      }\r\n\r\n      {noInformation && <Placeholder>Нет информации</Placeholder>}\r\n      \r\n      {loading && <Div><Spinner/></Div>}\r\n\r\n\r\n      {!loading && activeTab === 0 && activeGameEvents &&\r\n        activeGameEvents.events.map((e,i) => {\r\n          let eventSymbol = ''\r\n          if(e.type === 'goal') eventSymbol = '⚽'\r\n          else if(e.type === 'assist') eventSymbol = '✅'\r\n          else if(e.type === 'yc') eventSymbol = '🟨'\r\n          else eventSymbol = '🟥'\r\n          \r\n          return <EventRow\r\n            key={i}\r\n            playerName={e.name}\r\n            eventType={eventSymbol}\r\n            isHome={e.team === 0}\r\n            minute={e.minute}\r\n          />\r\n        })\r\n      }\r\n\r\n      {!loading && activeTab === 1 && <>\r\n        <Tabs mode=\"buttons\">\r\n          {[activeGameInfo.homeName,activeGameInfo.awayName].map((team,i) => {\r\n            return <TabsItem\r\n              key={i}\r\n              selected={activeTeamTab === i}\r\n              onClick={() => setActiveTeamTab(i)}\r\n            >{team}</TabsItem>\r\n          })}\r\n        </Tabs>\r\n        <List>\r\n          {activeGameEvents &&\r\n            activeGameEvents.squads[activeTeamTab].map((player,i) => {\r\n              return <Cell\r\n                disabled\r\n                key={i}\r\n                description={activeGameInfo[activeTeamTab === 0 ? 'homeName' : 'awayName']}\r\n              >{player.name}</Cell>\r\n            })\r\n          }\r\n        </List>\r\n      </>}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default GamePanel","export const nowLessThen = (date : number[], time : number[]) : boolean => {\r\n  const now = Date.now()\r\n\r\n  const [d,m,y] = date\r\n  const [h,min] = time\r\n  const gameTime = new Date(y,m-1,d,h,min).getTime()\r\n\r\n  return now <= gameTime\r\n}","import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Cell,\r\n  Div,\r\n  Header,\r\n  List,\r\n  Panel,\r\n  PanelHeader,\r\n  Snackbar,\r\n  usePlatform,\r\n} from '@vkontakte/vkui';\r\nimport { \r\n  Icon28ChevronRightOutline, \r\n  Icon28ChevronDownOutline,\r\n  Icon28FavoriteCircleFillYellow,\r\n  Icon28AddCircleFillBlue,\r\n  Icon28ReplyCircleFillGreen,\r\n  Icon28Users3Outline,\r\n  Icon16DoneCircle,\r\n  Icon28HomeOutline\r\n} from '@vkontakte/icons';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { goForward } from '../../store/slices/navigation';\r\nimport { requestTournament, setActiveTournament } from '../../store/slices/tournament';\r\n\r\nimport { LEAGUE_PANEL, TOURNAMENT_PANEL } from '../../constans';\r\n\r\nimport { CityInfo } from '../../types/CityInfo';\r\nimport { Tournament } from '../../types/Tournament';\r\nimport { toggleCollapse } from '../../store/slices/tournaments';\r\nimport { setActiveLeague } from '../../store/slices/league';\r\n\r\ninterface TournamentsPanelProps\r\n{\r\n  id : string\r\n  cities : (CityInfo & {collapsed : boolean})[]\r\n}\r\n\r\nconst GROUP_ID = 202380422\r\nconst GROUP_HREF = `https://vk.com/club${GROUP_ID}`\r\n\r\nconst TournamentsPanel : React.FC<TournamentsPanelProps> = ({\r\n  id,\r\n  cities,\r\n}) => {\r\n  const IS_ANDROID = window.location.href.includes('mobile_android')\r\n  const dispatch = useDispatch()\r\n\r\n  const goToLeague = (league : CityInfo) => {\r\n    dispatch(goForward(LEAGUE_PANEL))\r\n    dispatch(setActiveLeague(league))\r\n  }\r\n\r\n  const [snackbar, setSnackbar] = React.useState<React.ReactElement | null>(null)\r\n  const openSnackbar = (text : string) => {\r\n    setSnackbar(\r\n      <Snackbar\r\n        before={\r\n          <Avatar size={24} style={{backgroundColor:'var(--accent)'}}>\r\n            <Icon16DoneCircle fill=\"#fff\" width={14} height={14} />\r\n          </Avatar>\r\n        }\r\n        onClose={() => setSnackbar(null)}\r\n      >{text}</Snackbar>\r\n    )\r\n  }\r\n\r\n  const addToFavourite = () => {\r\n    bridge.send('VKWebAppAddToFavorites')\r\n      .then(_=>openSnackbar('Успешно добавлено !'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const joinToGroup = () => {\r\n    bridge.send('VKWebAppJoinGroup',{group_id:GROUP_ID})\r\n      .then(_=>openSnackbar('Вы вступили. Спасибо!'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const goToGroup = () => {\r\n    let a = document.createElement('a')\r\n    a.href = GROUP_HREF\r\n    a.click()\r\n    a.remove()\r\n  }\r\n\r\n  const share = () => {\r\n    bridge.send('VKWebAppShare')\r\n      .then(res=>res)\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const addToHomeScreen = () => {\r\n    bridge.send('VKWebAppAddToHomeScreen')\r\n      .then(_=>openSnackbar('Успешно добавлено !'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader separator={false}>Главная</PanelHeader>\r\n      \r\n      <Header style={{marginTop:8}}>Информация</Header>\r\n      <Div>\r\n        <Card>\r\n          <Div>\r\n            <div style={{display:'flex'}}>\r\n              <Button\r\n                style={{marginBottom:8,width:'100%',display:'flex',marginRight:8}}\r\n                size=\"l\"\r\n                before={<Icon28Users3Outline/>}\r\n                onClick={goToGroup}\r\n              >Группа</Button>\r\n              <Button\r\n                style={{marginBottom:8,display:'flex',justifyContent:'center',alignItems:'center'}}\r\n                size=\"l\"\r\n                before={<Icon28AddCircleFillBlue/>}\r\n                onClick={joinToGroup}\r\n              />\r\n            </div>\r\n            <Button\r\n              style={{marginBottom:8,width:'100%',display:'flex',}}\r\n              size=\"l\"\r\n              before={<Icon28FavoriteCircleFillYellow/>}\r\n              onClick={addToFavourite}\r\n            >Добавить в избранное</Button>\r\n            <Button\r\n              style={{marginBottom:IS_ANDROID?8:0,width:'100%',display:'flex',}}\r\n              size=\"l\"\r\n              before={<Icon28ReplyCircleFillGreen/>}\r\n              onClick={share}\r\n            >Поделиться</Button>\r\n            {IS_ANDROID &&\r\n              <Button\r\n                style={{marginBottom:0,width:'100%',display:'flex',}}\r\n                size=\"l\"\r\n                onClick={addToHomeScreen}\r\n                before={<Icon28HomeOutline/>}\r\n              >На дом. экран</Button>\r\n            }\r\n          </Div>\r\n        </Card>\r\n      </Div>\r\n\r\n      <Header>Турниры</Header>\r\n      {/* {cities.map((city, i) => {\r\n        return <Div key={i} style={{paddingBottom: i===cities.length-1 ? 12 : 0}}>\r\n          <Card>\r\n            <div\r\n              onClick={() => dispatch(toggleCollapse(i))}\r\n              style={{display:'flex',padding:8}}\r\n            >\r\n              <div style={{display:'flex',flex:1,alignItems:'center',}}>\r\n                <Avatar mode=\"image\" size={32} src={city.tournaments[0].logo}/>\r\n                &nbsp;&nbsp;<div style={{flex:1}}>{city.title}</div>\r\n              </div>\r\n              <Icon28ChevronDownOutline\r\n                style={{color:'var(--accent)',transform : `rotate(${city.collapsed ? '0deg' : '180deg'})`}}\r\n              />\r\n            </div>\r\n            {!city.collapsed &&\r\n              <List>\r\n                {city.tournaments.map((t,i) => {\r\n                  return <Cell\r\n                    key={i}\r\n                    after={<Icon28ChevronRightOutline/>}\r\n                    onClick={() => goToTournament(t)}\r\n                  >{t.name}</Cell>\r\n                })}\r\n              </List>\r\n            }\r\n          </Card>\r\n        </Div>\r\n      })} */}\r\n      {cities.map((city,i) => {\r\n        return <Cell\r\n          key={i}\r\n          before={<Avatar size={32} mode=\"image\" src={city.tournaments[0].logo} />}\r\n          after={<Icon28ChevronRightOutline/>}\r\n          onClick={() => goToLeague(city)}\r\n        >{city.title}</Cell>\r\n      })}\r\n\r\n      {snackbar}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TournamentsPanel","import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {\r\n  Avatar,\r\n  Cell,\r\n  CellButton,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Snackbar,\r\n} from '@vkontakte/vkui';\r\nimport { Icon16DoneCircle, Icon28ChevronRightOutline,Icon24Copy } from '@vkontakte/icons';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\n\r\nimport { TOURNAMENT_PANEL } from '../../constans';\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport { requestTournament, setActiveTournament } from '../../store/slices/tournament';\r\nimport { Tournament } from '../../types/Tournament';\r\n\r\ninterface LeaguePanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst LeaguePanel : React.FC<LeaguePanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const {activeLeague} = useSelector((s:RootState) => s.league)\r\n\r\n  const goToBack = () => {\r\n    dispatch(goBack())\r\n  }\r\n\r\n  const goToTournament = (t : Tournament) => {\r\n    dispatch(goForward(TOURNAMENT_PANEL))\r\n    dispatch(setActiveTournament(t))\r\n    dispatch(requestTournament({tournamentId : +t.id, siteType : t.siteType }))\r\n  }\r\n\r\n  const [snackbar, setSnackbar] = React.useState<React.ReactElement | null>(null)\r\n  const openSnackbar = (text : string) => {\r\n    setSnackbar(\r\n      <Snackbar\r\n        before={\r\n          <Avatar size={24} style={{backgroundColor:'var(--accent)'}}>\r\n            <Icon16DoneCircle fill=\"#fff\" width={14} height={14} />\r\n          </Avatar>\r\n        }\r\n        onClose={() => setSnackbar(null)}\r\n      >{text}</Snackbar>\r\n    )\r\n  }\r\n\r\n  const copyLink = () => {\r\n    bridge.send('VKWebAppCopyText',{text:`https://vk.com/app7746401#league${activeLeague!.id}`})\r\n      .then(_ => openSnackbar('Скопировано'))\r\n      .catch(e=>e)\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Лига</PanelHeader>\r\n\r\n      {activeLeague\r\n        ? <>\r\n            <PlainHeader\r\n              href={activeLeague.vkHref}\r\n              hrefText={'Группа'}\r\n              logo={activeLeague.tournaments[0].logo}\r\n              title={activeLeague.title}\r\n            />\r\n            {activeLeague.tournaments.map((t,i) => {\r\n              return <Cell\r\n                key={i}\r\n                after={<Icon28ChevronRightOutline/>}\r\n                onClick={() => goToTournament(t)}\r\n              >{t.name}</Cell>\r\n            })}\r\n            <CellButton\r\n              centered\r\n              before={<Icon24Copy/>}\r\n              onClick={copyLink}\r\n            >Ссылка на лигу</CellButton>\r\n          </>\r\n        : <Placeholder>Ничего не найдено. Попробуйте найти турнир в\r\n          <span\r\n            style={{color:'var(--accent)'}}\r\n            onClick={goToBack}\r\n          > списке</span>\r\n        </Placeholder>\r\n      }\r\n\r\n      {snackbar}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default LeaguePanel","import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {AdaptivityProvider, AppRoot, ConfigProvider, ScreenSpinner, View} from '@vkontakte/vkui';\r\n\r\nimport TournamentPanel from './panels/Tournament';\r\nimport TeamPanel from './panels/Team';\r\nimport GamePanel from './panels/Game';\r\nimport TournamentsPanel from './panels/Tournaments';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from './store/rootReducer';\r\nimport { GAME_PANEL, LEAGUE_PANEL, TEAM_PANEL, TOURNAMENTS_PANEL, TOURNAMENT_PANEL } from './constans';\r\nimport { requestTournaments } from './store/slices/tournaments';\r\nimport { requestUser } from './store/slices/user';\r\nimport { goBack } from './store/slices/navigation';\r\nimport { clearActiveGame, goBackToGame } from './store/slices/game';\r\nimport { clearActiveteam, goBackToTeam } from './store/slices/team';\r\nimport { clearPredictionsInfo } from './store/slices/predictions';\r\nimport { setNavigation } from './store/slices/navigation';\r\nimport { clearActiveTournament, setActiveTab as setActiveTournamentTab } from './store/slices/tournament';\r\nimport { setActiveTab as setActiveTeamTab } from './store/slices/team';\r\nimport LeaguePanel from './panels/League';\r\nimport { useAppDispatch } from './store/store';\r\nimport { setActiveLeague } from './store/slices/league';\r\nimport { CityInfo } from './types/CityInfo';\r\n\r\nconst App = () => {\r\n  const dispatch = useAppDispatch()\r\n  const {activePanel, history} = useSelector((s:RootState) => s.navigation)\r\n  const {loading : loadingTournaments, cities} = useSelector((s:RootState) => s.tournaments)\r\n  const {loading : loadingTournament} = useSelector((s:RootState) => s.tournament)\r\n  const {loading : loadingUser} = useSelector((s:RootState) => s.user)\r\n\r\n  React.useEffect(() => {\r\n    const initPanels = (cities : CityInfo[]) => {\r\n      const hash = window.location.hash\r\n      if(hash)\r\n      {\r\n        const id = +hash.slice(1).replace('league','')\r\n        dispatch(setActiveLeague(cities.find(c => c.id === id)))\r\n        dispatch(setNavigation({activePanel:LEAGUE_PANEL,history:[TOURNAMENTS_PANEL,LEAGUE_PANEL]}))\r\n      }\r\n    }\r\n\r\n    const initApp = async () => {\r\n\r\n\r\n      const userInfo = await bridge.send('VKWebAppGetUserInfo')\r\n      // const userInfo = {id : 17}\r\n      dispatch(requestUser(userInfo.id))\r\n      dispatch(requestTournaments())\r\n        .then((action) => initPanels(action.payload))\r\n      bridge.send('VKWebAppEnableSwipeBack').then(res=>res).catch(err=>err)\r\n    }\r\n    \r\n    initApp()\r\n  },[])\r\n\r\n  const goToBack = () => {\r\n    const currentPanel = history[history.length-1]\r\n    const newPanel = history[history.length-2]\r\n    \r\n    if(currentPanel === 'team')\r\n    {\r\n      if(newPanel === 'game') dispatch(goBackToGame())\r\n\r\n      dispatch(clearActiveteam())\r\n    }\r\n    else if(currentPanel === 'game')\r\n    {\r\n      if(newPanel === 'team') dispatch(goBackToTeam())\r\n\r\n      dispatch(clearActiveGame())\r\n      dispatch(clearPredictionsInfo())\r\n    }\r\n    \r\n    if(newPanel === 'league')\r\n    {\r\n      dispatch(setActiveTournamentTab(0))\r\n      dispatch(clearActiveTournament())\r\n    }\r\n    else if(newPanel === 'tournament')\r\n    {\r\n      dispatch(setActiveTeamTab(0))\r\n    }\r\n\r\n    dispatch(goBack())\r\n  }\r\n\r\n  return (\r\n    <ConfigProvider isWebView={true}>\r\n      <AppRoot>\r\n        <View\r\n          activePanel={activePanel}\r\n          onSwipeBack={goToBack}\r\n          history={history}\r\n          popout={(loadingTournaments || loadingUser || loadingTournament) && <ScreenSpinner />}\r\n        >\r\n          <TournamentsPanel id={TOURNAMENTS_PANEL} cities={cities}/>\r\n          <LeaguePanel id={LEAGUE_PANEL} />\r\n          <TournamentPanel id={TOURNAMENT_PANEL}/>\r\n          <GamePanel id={GAME_PANEL}/>\r\n          <TeamPanel id={TEAM_PANEL}/>\r\n        </View>\r\n      </AppRoot>\r\n    </ConfigProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './index.sass';\n\nimport bridge from '@vkontakte/vk-bridge'\n\n\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport App from './App';\n\nbridge.send('VKWebAppInit')\nbridge.subscribe(e => {\n  if(e.detail.type === 'VKWebAppUpdateConfig')\n    document.body.setAttribute('scheme', e.detail.data.scheme)\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}