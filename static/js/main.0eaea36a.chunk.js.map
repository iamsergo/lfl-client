{"version":3,"sources":["constans/index.ts","store/slices/navigation.ts","api/BASE_URL.ts","api/request.ts","api/index.ts","api/games.ts","api/tournaments.ts","api/squads.ts","api/predictions.ts","api/user.ts","api/widget.ts","store/slices/tournaments.ts","store/slices/tournament.ts","store/slices/team.ts","store/slices/game.ts","store/slices/user.ts","store/slices/predictions.ts","store/slices/league.ts","store/slices/modal.ts","store/rootReducer.ts","store/store.ts","components/Headers/PlainHeader.tsx","components/Score/index.tsx","components/GamesList/index.tsx","components/Table/TableRow.tsx","utils/getGamesByTour.ts","panels/Tournament/index.tsx","panels/Team/index.tsx","components/Headers/GameHeader.tsx","components/GameInfoTabs/index.tsx","components/EventRow/index.tsx","panels/Game/index.tsx","utils/nowLessThen.ts","panels/Tournaments/index.tsx","components/Actions/index.tsx","panels/League/index.tsx","panels/AddWidget/index.tsx","modal/GameEdit.tsx","App.tsx","index.tsx"],"names":["TOURNAMENTS_PANEL","TOURNAMENT_PANEL","GAME_PANEL","TEAM_PANEL","LEAGUE_PANEL","ADD_WIDGET_PANEL","EDIT_GAME_MODAL","initialState","activePanel","history","navigationSlice","createSlice","name","reducers","setNavigation","state","action","data","payload","goForward","newPanel","push","goBack","pop","length","actions","BASE_URL","process","request","url","a","fetch","res","json","getGames","matchId","postfix","siteType","p","encodeURIComponent","editScore","tournamentId","matchHref","score","userId","mh","s","method","headers","getTournaments","getTournament","getSquads","clubId","getPredictionsByMatch","doPrediction","prediction","body","JSON","stringify","getUser","id","registerUser","addWidget","user_id","group_id","app_id","access_token","v","site_type","tournament_id","league_id","type","requestTournaments","createAsyncThunk","api","tournamentsSlice","loading","error","cities","toggleCollapse","map","c","i","collapsed","extraReducers","builder","addCase","pending","rejected","fulfilled","city","requestTournament","tournamentSlice","activeTournamentName","activeTournamentCity","activeSiteType","activeVkHref","activeTournament","activeTab","setActiveTournament","vkHref","activeDivisionId","divisionId","clearActiveTournament","setActiveTab","setEditedGame","calendar","g","requestSquad","teamSlice","activeTeam","activeTeamSquad","teamHistory","setActiveTeam","clearActiveteam","goForwardToTeam","goBackToTeam","activeGameEvents","activeGameInfo","awayHref","awayLogo","awayName","date","homeHref","homeLogo","homeName","place","time","tour","gameHistory","requestGame","gameParams","gameSlice","setActiveGameInfo","clearActiveGame","goForwardToGame","goBackToGame","activeGame","events","sort","b","minute","requestUser","user","userSlice","addPrediction","predictions","requestPredictions","requestDoPrediction","predictionsSlice","predictionsInfo","clearPredictionsInfo","leagueSlice","activeLeague","setActiveLeague","requestEditScore","params","modalSlice","activeModal","setActiveModal","setActiveGame","rootReducer","combineReducers","navigation","tournaments","tournament","team","game","league","modal","store","configureStore","reducer","useAppDispatch","useDispatch","PlainHeader","logo","title","href","hrefText","style","display","marginTop","mode","size","src","padding","margin","marginLeft","color","target","Score","background","children","className","GamesList","games","header","teamHref","editable","onGoToGame","colors","win","draw","lose","split","home","away","disabled","before","marginRight","after","description","onClick","TableRow","n","isHeader","isDark","photo","values","fontWeight","marginBottom","value","width","textAlign","fontSize","getGamesByTours","forEach","TABS","TournamentPanel","dispatch","useSelector","goToGame","console","log","left","tab","selected","table","goToTeam","points","Object","entries","results","reverse","TeamPanel","filter","GameHeader","onGoToTeam","GameInfoTabs","refery","EventRow","isHome","playerName","eventType","includes","GamePanel","React","useState","setUserPrediction","canPredict","now","Date","d","m","y","h","min","getTime","nowLessThen","useEffect","replace","find","req","abort","e","eventSymbol","GROUP_ID","GROUP_HREF","TournamentsPanel","IS_ANDROID","window","location","snackbar","setSnackbar","openSnackbar","text","backgroundColor","fill","height","onClose","separator","document","createElement","click","remove","justifyContent","alignItems","bridge","send","then","_","catch","err","Actions","stopPropagation","preventDefault","LeaguePanel","goToBack","openThisLeague","setOpenThisLeague","keys","favorite","entrie","key","init","toggleOpenThisLeague","paddingBottom","t","goToTournament","paddingTop","APP_ID","VERSION","WIDGET_TYPES","AddWidgetPanel","step","setStep","setLoading","setError","activeGroup","setActiveGroup","setActiveSiteType","groups","setGroups","accessToken","setAccessToken","activeWidgetType","setActiveWidgetType","requestGroups","scope","extended","fields","response","items","error_data","leagueLink","createMatch","team_a","team_b","slice","matches","title_url","more","more_url","code","head","align","row","URL","requestToken","addInGroup","top","onChange","currentTarget","group","paddingLeft","w","icon","GameEditModal","homeScore","setHomeScore","awayScore","setAwayScore","flex","max","App","loadingTournaments","loadingTournament","loadingUser","initPanels","hash","userInfo","initApp","isWebView","onSwipeBack","currentPanel","setActiveTournamentTab","setActiveTeamTab","popout","GameEdit","Tournaments","League","Tournament","Game","Team","AddWidget","subscribe","detail","setAttribute","scheme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0eaea36a.chunk.js","sourcesContent":["export const TOURNAMENTS_PANEL = 'tournaments'\nexport const TOURNAMENT_PANEL = 'tournament'\nexport const GAME_PANEL = 'game'\nexport const TEAM_PANEL = 'team'\nexport const LEAGUE_PANEL = 'league'\nexport const ADD_WIDGET_PANEL = 'add_widget'\n\nexport const EDIT_GAME_MODAL = 'edit_game'","import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { \n  ADD_WIDGET_PANEL,\n  GAME_PANEL, \n  LEAGUE_PANEL, \n  TEAM_PANEL, \n  TOURNAMENTS_PANEL, \n  TOURNAMENT_PANEL \n} from \"../../constans\";\n\ntype Panel = \n  | typeof TOURNAMENTS_PANEL \n  | typeof TOURNAMENT_PANEL \n  | typeof GAME_PANEL \n  | typeof TEAM_PANEL\n  | typeof LEAGUE_PANEL\n  | typeof ADD_WIDGET_PANEL\n\ninterface NavigationState\n{\n  activePanel : Panel\n  history : Panel[]\n}\n\nconst initialState : NavigationState = {\n  activePanel : TOURNAMENTS_PANEL,\n  history : [TOURNAMENTS_PANEL]\n}\n\nconst navigationSlice = createSlice({\n  name : 'navigation',\n  initialState,\n  reducers : {\n    setNavigation(state, action)\n    {\n      const data = action.payload\n      state.activePanel = data.activePanel\n      state.history = data.history\n    },\n    goForward(state, action)\n    {\n      const newPanel = action.payload\n      state.activePanel = newPanel\n      state.history.push(newPanel)\n    },\n    goBack(state)\n    {\n      state.history.pop()\n      const newPanel = state.history[state.history.length - 1]\n      state.activePanel = newPanel!\n    },\n  }\n})\n\nexport const {goBack, goForward, setNavigation} = navigationSlice.actions\nexport default navigationSlice.reducer","export const BASE_URL = process.env.REACT_APP_SERVER_URL\n// export const BASE_URL = 'http://localhost:5000'","export const request = async (url : string) => {\n  const res = await fetch(url)\n  return res.json()\n}","import {getGames, editScore} from './games'\nimport {getTournaments, getTournament} from './tournaments'\nimport {getSquads} from './squads'\nimport {getPredictionsByMatch,doPrediction} from './predictions'\nimport {getUser, registerUser} from './user'\nimport {addWidget} from './widget'\n\nexport default {\n  getGames,\n  editScore,\n  getTournaments,\n  getTournament,\n  getSquads,\n  getPredictionsByMatch,\n  doPrediction,\n  getUser,\n  registerUser,\n  addWidget,\n}","import { BASE_URL } from \"./BASE_URL\"\nimport { request } from \"./request\"\n\nexport const getGames = async ({\n  matchId,\n  postfix,\n  siteType\n}: {\n  matchId?:string,\n  postfix:string,\n  siteType:number\n}) => {\n  const p = encodeURIComponent(postfix)\n  const url = `${BASE_URL}/games?siteType=${siteType}&postfix=${p}&matchId=${matchId}`\n\n  return await request(url)\n}\n\nexport const editScore = async ({\n  tournamentId,\n  matchHref,\n  score,\n  userId\n}: {\n  tournamentId:string,\n  score:string,\n  userId:number,\n  matchHref:string,\n}) => {\n  const mh = encodeURIComponent(matchHref)\n  const s = encodeURIComponent(score)\n  const url = `${BASE_URL}/games/edit?matchHref=${mh}&score=${s}&userId=${userId}&tournamentId=${tournamentId}`\n\n  const res = await fetch(url,{\n    method : 'POST',\n    headers : {'Content-Type': 'application/json;charset=utf-8'}\n  })\n\n  return res.json()\n}","import { BASE_URL } from \"./BASE_URL\"\nimport { request } from \"./request\"\n\nexport const getTournaments = async () => {\n  const url = `${BASE_URL}/tournaments`\n\n  return await request(url)\n}\n\nexport const getTournament = async ({tournamentId,siteType} : {tournamentId : number, siteType : number}) => {\n  const url = `${BASE_URL}/tournaments/${tournamentId}/${siteType}`\n  return await request(url)\n}","import { BASE_URL } from \"./BASE_URL\"\nimport { request } from \"./request\"\n\nexport const getSquads = async ({tournamentId, clubId} : {tournamentId:string,clubId:string}) => {\n  const url = `${BASE_URL}/squads/${tournamentId}/${clubId}`\n\n  return await request(url)\n}","import { BASE_URL } from \"./BASE_URL\"\nimport { request } from \"./request\"\n\nexport const getPredictionsByMatch = async (matchId : number) => {\n  const url = `${BASE_URL}/predictions/${matchId}`\n\n  return await request(url)\n}\n\nexport const doPrediction = async ({\n  matchId, \n  userId,\n  prediction\n} : {\n  matchId:number,\n  userId:number,\n  prediction : 0 | 1\n}) => {\n  const url = `${BASE_URL}/predictions`\n\n  const res = await fetch(url,{\n    method : 'POST',\n    body : JSON.stringify({matchId, userId, prediction}),\n    headers : {'Content-Type': 'application/json;charset=utf-8'}\n  })\n\n  return res.json()\n}","import { BASE_URL } from \"./BASE_URL\"\nimport { request } from \"./request\"\n\nexport const getUser = async (id : number) => {\n  const url = `${BASE_URL}/users/${id}`\n\n  return await request(url)\n}\n\nexport const registerUser = async (id : number) => {\n  const url = `${BASE_URL}/users/${id}`\n\n  const res = await fetch(url,{\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json;charset=utf-8' }\n  })\n\n  return await res.json()\n}","import { BASE_URL } from \"./BASE_URL\"\n\nexport const addWidget = async ({\n  user_id,\n  group_id,\n  app_id,\n  access_token,\n  v,\n  site_type,\n  tournament_id,\n  league_id,\n  type,\n} : {\n  user_id : number,\n  group_id: number,\n  app_id: number,\n  access_token: string,\n  v: string,\n  site_type: number,\n  tournament_id : number,\n  league_id : number,\n  type : string,\n}) => {\n  const url = `${BASE_URL}/widgets`\n  const res = await fetch(url,{\n    method : 'PUT',\n    body: JSON.stringify({user_id,group_id,app_id,access_token,v,site_type,tournament_id,league_id,type}),\n    headers : {'Content-Type': 'application/json;charset=utf-8'}\n  })\n\n  return await res.json()\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\n\nimport api from \"../../api\"\n\nimport { CityInfo } from \"../../types/CityInfo\"\n\ninterface TournamentsState\n{\n  loading : boolean\n  error : boolean\n  cities : (CityInfo & {collapsed : boolean})[]\n}\n\nconst initialState : TournamentsState = {\n  loading : false,\n  error : false,\n  cities : []\n}\n\nexport const requestTournaments = createAsyncThunk('tournaments/request', api.getTournaments)\n\nconst tournamentsSlice = createSlice({\n  name : 'tournaments',\n  initialState,\n  reducers : {\n    toggleCollapse(state,action)\n    {\n      state.cities = state.cities.map((c,i) => {\n        if(i === action.payload)\n        {\n          return {...c, collapsed : !c.collapsed}\n        }\n\n        return c\n      })\n    },\n  },\n  extraReducers(builder)\n  {\n    builder\n      .addCase(requestTournaments.pending, state => {\n        state.loading = true\n        state.error = false\n      })\n      .addCase(requestTournaments.rejected, state => {\n        state.loading = false\n        state.error = true\n      })\n      .addCase(requestTournaments.fulfilled, (state, action) => {\n        state.loading = false\n        state.error = false\n        state.cities = (action.payload as CityInfo[]).map(city => ({...city, collapsed : true}))\n      })\n  },\n})\n\nexport const {toggleCollapse} = tournamentsSlice.actions\nexport default tournamentsSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport api from \"../../api\";\n\nimport { TournamentInfo } from \"../../types/TournamentInfo\";\n\ninterface TournamentState\n{\n  activeTournamentName : string\n  activeTournamentCity : string\n  activeSiteType : number\n  activeVkHref : string\n  activeTournament : TournamentInfo | null\n  activeTab : number\n  activeDivisionId ?: number\n\n  loading : boolean\n  error : boolean\n}\n\nconst initialState : TournamentState = {\n  loading : false,\n  error : false,\n\n  activeTournamentName : '',\n  activeTournamentCity : '',\n  activeSiteType : 0,\n  activeVkHref : '',\n  activeTournament : null,\n  activeTab : 0\n}\n\nexport const requestTournament = createAsyncThunk('tournament/request', api.getTournament)\n\nconst tournamentSlice = createSlice({\n  name : 'tournament',\n  initialState,\n  reducers : {\n    setActiveTournament(state,action)\n    {\n      const activeTournament = action.payload\n      state.activeTournamentName = activeTournament.name\n      // state.activeTournament = activeTournament.data\n      state.activeSiteType = activeTournament.siteType\n      state.activeVkHref = activeTournament.vkHref\n      state.activeTournamentCity = activeTournament.city\n      state.activeDivisionId = activeTournament.divisionId\n    },\n    clearActiveTournament(state)\n    {\n      state.activeTournament = null\n      state.activeTournamentName = ''\n    },\n    setActiveTab(state,action)\n    {\n      state.activeTab = action.payload\n    },\n    setEditedGame(state,action)\n    {\n      const {matchHref, score} = action.payload\n\n      state.activeTournament!.calendar = state.activeTournament!.calendar.map(g => {\n        return g.matchHref === matchHref ? {...g, score} : g\n      })\n    },\n  },\n  extraReducers(builder)\n  {\n    builder\n      .addCase(requestTournament.pending, state => {\n        state.loading = true\n        state.error = false\n      })\n      .addCase(requestTournament.rejected, state => {\n        state.loading = false\n        state.error = true\n      })\n      .addCase(requestTournament.fulfilled, (state, action) => {\n        state.loading = false\n        state.error = false\n\n        const activeTournament = action.payload\n        state.activeTournament = activeTournament\n      })\n  },\n})\n\nexport const {\n  clearActiveTournament,\n  setActiveTournament,\n  setActiveTab,\n  setEditedGame,\n} = tournamentSlice.actions\nexport default tournamentSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\n\nimport api from \"../../api\"\n\nimport { ClubInfo } from \"../../types/ClubInfo\"\nimport { SquadInfo } from \"../../types/SquadInfo\"\n\ninterface TeamState\n{\n  loading : boolean\n  error : boolean\n  activeTeamSquad : SquadInfo[]\n  activeTab : number\n  \n  activeTeam : ClubInfo | null\n  teamHistory : ClubInfo[]\n}\n\nconst initialState : TeamState = {\n  loading : false,\n  error : false,\n  activeTeam : null,\n  activeTeamSquad: [],\n  teamHistory : [],\n  activeTab : 0,\n}\n\nexport const requestSquad = createAsyncThunk(\n  'squad/request',\n  ({ tournamentId,clubId }: { tournamentId: string, clubId: string}) => {\n    return api.getSquads({tournamentId,clubId})\n  }\n)\n\nconst teamSlice = createSlice({\n  name : 'team',\n  initialState,\n  reducers : {\n    setActiveTeam(state,action)\n    {\n      state.activeTeam = action.payload\n    },\n    clearActiveteam(state)\n    {\n      state.activeTeam = null\n      state.activeTeamSquad = []\n    },\n    goForwardToTeam(state)\n    {\n      state.teamHistory.push(state.activeTeam!)\n    },\n    goBackToTeam(state)\n    {\n      if(state.teamHistory.length === 0) return\n\n      const activeTeam = state.teamHistory.pop()!\n      state.activeTeam = activeTeam\n    },\n    setActiveTab(state,action)\n    {\n      state.activeTab = action.payload\n    },\n  },\n  extraReducers(builder)\n  {\n    builder\n      .addCase(requestSquad.pending, state => {\n        state.loading = true\n        state.error = false\n      })\n      .addCase(requestSquad.rejected, state => {\n        state.loading = false\n        state.error = true\n      })\n      .addCase(requestSquad.fulfilled, (state, action) => {\n        state.loading = false\n        state.error = false\n\n        const activeTeamSquad = action.payload\n        state.activeTeamSquad = activeTeamSquad\n      })\n  },\n})\n\nexport const {\n  clearActiveteam,\n  setActiveTeam,\n  setActiveTab,\n\n  goForwardToTeam,\n  goBackToTeam,\n} = teamSlice.actions\nexport default teamSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport api from \"../../api\"\nimport { GameEvents } from \"../../types/GameEvents\"\nimport { GameInfo } from \"../../types/GameInfo\"\n\n\n\ninterface GameHistoryRecord\n{\n  activeGameInfo : GameInfo\n  activeGameEvents : GameEvents | null  \n}\n\ninterface GameState\n{\n  loading : boolean\n  error : boolean\n  activeGameInfo : GameInfo\n  activeGameEvents : GameEvents | null\n  gameHistory : GameHistoryRecord[]\n}\n\nconst initialState : GameState = {\n  loading : false,\n  error : false,\n  activeGameEvents : null,\n  activeGameInfo : {\n    awayHref: \"\",\n    awayLogo: \"\",\n    awayName: \"\",\n    date: \"-\",\n    homeHref: \"\",\n    homeLogo: \"\",\n    homeName: \"\",\n    matchHref: \"\",\n    place: \"-\",\n    score: \"-:-\",\n    time: \"-\",\n    tour: 1,\n  },\n  gameHistory : [],\n}\n\nexport const requestGame = createAsyncThunk(\n  'game/request',\n  (gameParams: {matchId?:string,postfix:string,siteType:number}) => api.getGames(gameParams)\n)\n\nconst gameSlice = createSlice({\n  name : 'game',\n  initialState,\n  reducers : {\n    setActiveGameInfo(state,action)\n    {\n      state.activeGameInfo = action.payload\n    },\n    clearActiveGame(state)\n    {\n      state.activeGameInfo = initialState.activeGameInfo\n      state.activeGameEvents = null\n    },\n    goForwardToGame(state)\n    {\n      state.gameHistory.push({\n        activeGameEvents : state.activeGameEvents,\n        activeGameInfo : state.activeGameInfo,\n      })\n    },\n    goBackToGame(state)\n    {\n      if(state.gameHistory.length === 0) return\n      \n      const activeGame = state.gameHistory.pop()!\n\n      state.activeGameEvents = activeGame.activeGameEvents\n      state.activeGameInfo = activeGame.activeGameInfo\n    },\n  },\n  extraReducers(builder)\n  {\n    builder\n      .addCase(requestGame.pending, state => {\n        state.loading = true\n        state.error = false\n      })\n      .addCase(requestGame.rejected, state => {\n        state.loading = false\n        state.error = true\n      })\n      .addCase(requestGame.fulfilled, (state, action) => {\n        state.loading = false\n        state.error = false\n\n        const activeGameEvents = action.payload\n        state.activeGameEvents = activeGameEvents\n        state.activeGameEvents!.events.sort((a,b) => a.minute - b.minute)\n      })\n  },\n})\n\nexport const {\n  setActiveGameInfo,\n  goBackToGame,\n  goForwardToGame,\n  clearActiveGame,\n} = gameSlice.actions\nexport default gameSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\n\nimport api from \"../../api\"\n\nimport { User } from \"../../types/User\"\n\ninterface UserState\n{\n  loading : boolean\n  error : boolean\n  user : User | null\n}\n\nconst initialState : UserState = {\n  loading : false,\n  error : false,\n  user : null\n}\n\nexport const requestUser = createAsyncThunk(\n  'user/request',\n  async (userId : number) => {\n    const user = await api.getUser(userId)\n    if(user) return user\n\n    const res = await api.registerUser(userId)\n    return res\n  }\n)\n\nconst userSlice = createSlice({\n  name : 'user',\n  initialState,\n  reducers : {\n    addPrediction(state,action)\n    {\n      state.user!.predictions.push(action.payload)\n    },\n  },\n  extraReducers(builder)\n  {\n    builder\n      .addCase(requestUser.pending, state => {\n        state.loading = true\n        state.error = false\n      })\n      .addCase(requestUser.rejected, state => {\n        state.loading = false\n        state.error = true\n      })\n      .addCase(requestUser.fulfilled, (state, action) => {\n        state.loading = false\n        state.error = false\n        state.user = action.payload\n      })\n  },\n})\n\nexport const { addPrediction } = userSlice.actions\nexport default userSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\n\nimport api from \"../../api\"\n\nimport { PredictionInfo } from \"../../types/PredictionInfo\"\n\ninterface PredictionsState\n{\n  loading : boolean\n  error : boolean\n  predictionsInfo : PredictionInfo | null\n}\n\nconst initialState : PredictionsState = {\n  loading : false,\n  error : false,\n  predictionsInfo : null\n}\n\nexport const requestPredictions = createAsyncThunk(\n  'predictions/get',\n  (matchId : number) => api.getPredictionsByMatch(matchId)\n)\n\nexport const requestDoPrediction = createAsyncThunk(\n  'predictions/do',\n  ({ matchId, userId, prediction }: { matchId: number, userId: number, prediction : 0 | 1 }) => {\n    return api.doPrediction({ matchId, userId, prediction })\n  }\n)\n\nconst predictionsSlice = createSlice({\n  name : 'predictions',\n  initialState,\n  reducers : {\n    clearPredictionsInfo(state)\n    {\n      state.predictionsInfo = null\n    },\n  },\n  extraReducers(builder)\n  {\n    builder\n      .addCase(requestPredictions.pending, state => {\n        state.loading = true\n        state.error = false\n      })\n      .addCase(requestPredictions.rejected, state => {\n        state.loading = false\n        state.error = true\n      })\n      .addCase(requestPredictions.fulfilled, (state, action) => {\n        state.loading = false\n        state.error = false\n        state.predictionsInfo = action.payload\n      })\n\n      .addCase(requestDoPrediction.pending, state => {\n        state.loading = true\n        state.error = false\n      })\n      .addCase(requestDoPrediction.rejected, state => {\n        state.loading = false\n        state.error = true\n      })\n      .addCase(requestDoPrediction.fulfilled, (state, action) => {\n        state.loading = false\n        state.error = false\n      })\n  },\n})\n\nexport const {clearPredictionsInfo} = predictionsSlice.actions\nexport default predictionsSlice.reducer","import { createSlice } from \"@reduxjs/toolkit\"\n\nimport {CityInfo} from '../../types/CityInfo'\n\ninterface leagueState\n{\n  activeLeague : CityInfo | null\n}\n\nconst initialState : leagueState = {\n  activeLeague : null\n}\n\nconst leagueSlice = createSlice({\n  name : 'league',\n  initialState,\n  reducers : {\n    setActiveLeague(state,action)\n    {\n      state.activeLeague = action.payload\n    },\n  },\n})\n\nexport const {setActiveLeague} = leagueSlice.actions\nexport default leagueSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\nimport api from \"../../api\"\n\nimport { GameInfo } from \"../../types/GameInfo\"\n\ninterface ModalState\n{\n  activeModal : string | null\n  activeGame : GameInfo | null\n  loading : boolean\n  error : boolean\n}\n\nconst initialState : ModalState = {\n  activeModal : null,\n  activeGame : null,\n  loading : false,\n  error : false,\n}\n\nexport const requestEditScore = createAsyncThunk(\n  'games/edit/request',\n  (params: { tournamentId: string, score: string, userId: number, matchHref: string }) => api.editScore(params)\n)\n\nconst modalSlice = createSlice({\n  name : 'modal',\n  initialState,\n  reducers : {\n    setActiveModal(state,action)\n    {\n      state.activeModal = action.payload\n    },\n    setActiveGame(state,action)\n    {\n      state.activeGame = action.payload\n    },\n  },\n  extraReducers(builder)\n  {\n    builder\n      .addCase(requestEditScore.pending, state => {\n        state.loading = true\n        state.error = false\n      })\n      .addCase(requestEditScore.rejected, state => {\n        state.loading = false\n        state.error = true\n      })\n      .addCase(requestEditScore.fulfilled, (state, action) => {\n        state.loading = false\n        state.error = false\n        state.activeModal = null\n      })\n  },\n})\n\nexport const {setActiveModal, setActiveGame} = modalSlice.actions\nexport default modalSlice.reducer","import { combineReducers } from \"@reduxjs/toolkit\"\n\nimport navigation from './slices/navigation'\nimport tournaments from './slices/tournaments'\nimport tournament from './slices/tournament'\nimport team from './slices/team'\nimport game from './slices/game'\nimport user from './slices/user'\nimport predictions from './slices/predictions'\nimport league from './slices/league'\nimport modal from './slices/modal'\n\nconst rootReducer = combineReducers({\n  navigation,\n  tournaments,\n  tournament,\n  team,\n  game,\n  user,\n  predictions,\n  league,\n  modal\n})\n\nexport type RootState = ReturnType<typeof rootReducer>\nexport default rootReducer","import { configureStore } from \"@reduxjs/toolkit\"\nimport { useDispatch } from \"react-redux\"\n\nimport rootReducer from './rootReducer'\n\nconst store = configureStore({ reducer: rootReducer })\n\nexport const useAppDispatch = () => useDispatch<typeof store.dispatch>()\nexport default store","import React from 'react';\n\nimport {Avatar, Div, Link} from '@vkontakte/vkui';\n\ninterface PlainHeaderProps\n{\n  logo ?: string\n  title : string\n  league ?: string\n  city ?: string\n  href ?: string\n  hrefText ?: string\n}\n\nconst PlainHeader : React.FC<PlainHeaderProps> = ({\n  logo,\n  title,\n  city,\n  href,\n  hrefText,\n}) => {\n  return(\n    <Div style={{display:'flex',marginTop:12}}>\n      {logo && <Avatar mode=\"image\" size={74} src={logo}/>}\n      <div>\n        <h3 style={{padding:0, margin:0, marginLeft: logo ? 8 : 0}}>{title}</h3>\n        <h5 style={{padding:0, margin:0,marginTop:4,marginLeft: logo ? 8 : 0,color:'gray'}}>{city}</h5>\n        {href && <Link target=\"_blank\" style={{marginLeft:logo ? 8 : 0}} href={href}>{hrefText}</Link>}\n      </div>\n    </Div>\n  )\n}\n\nexport default PlainHeader","import React from 'react';\nimport './Score.sass'\n\ninterface ScoreProps\n{\n  background : string\n}\n\nconst Score : React.FC<ScoreProps> = ({\n  background = '#76787a',\n  children,\n}) => {\n  return(\n    <div\n      className=\"score\"\n      style={{background}}\n    >{children}</div>\n  )\n}\n\nexport default Score","import React from 'react';\n\nimport {\n  Group, \n  Avatar,\n  Cell, \n  Header,\n} from '@vkontakte/vkui';\nimport { Icon28EditOutline } from '@vkontakte/icons';\n\nimport { GameInfo } from '../../types/GameInfo';\nimport Score from '../Score';\n\ninterface GamesListProps\n{\n  games : GameInfo[]\n  header ?: string\n  teamHref ?: string\n  editable ?: boolean\n  onGoToGame ?: (game : GameInfo) => void\n}\n\nconst GamesList : React.FC<GamesListProps> = ({\n  games,\n  header,\n  teamHref,\n  editable = false,\n  onGoToGame,\n}) => {\n  return(\n    <Group\n      header={header && <Header>{header}</Header>}\n    >\n      {games.map((game,i) => {\n        let background = ''\n        if(teamHref)\n        {\n          const colors = {\n            win:'var(--button_commerce_background)',\n            draw:'orange',\n            lose:'var(--button_secondary_destructive_foreground)'\n          }\n          const [home, away] = game.score.split(':').map(s=>+s)\n\n          if(home > away)\n            background = teamHref === game.homeHref ? colors.win : colors.lose\n          else if(home < away)\n            background = teamHref === game.homeHref ? colors.lose : colors.win\n          else\n            background = colors.draw\n        }\n\n        return <Cell\n          disabled={!onGoToGame || (game.date === '-' && !game.score) || (editable && !!game.score)}\n          // disabled={true}\n          key={i}\n          before={<div style={{display:'flex',marginRight:8,}}>\n            <Avatar mode=\"image\" src={game.homeLogo}/>\n            <Avatar mode=\"image\" src={game.awayLogo}/>\n          </div>}\n          after={\n            editable && game.date !== '-' && game.time && !game.score\n              ? <Icon28EditOutline/>\n              : game.score && <Score background={background}>{game.score}</Score> \n          }\n          description={game.date && game.date !== '-' && \n            <div>\n              <div>{game.date}, {game.time}</div>\n              {game.place !== '-' && <div>{game.place}</div>}\n            </div>\n          }\n          onClick={() => onGoToGame && onGoToGame(game)}\n        ><div><div>{game.homeName}</div><div>{game.awayName}</div></div></Cell>\n      })}\n    </Group>\n  )\n}\n\nexport default GamesList","import React from 'react';\nimport './Table.sass';\n\nimport {Avatar, Cell} from '@vkontakte/vkui';\n\ninterface TableRowProps\n{\n  title : string\n  n ?: number\n  description ?: string\n  isHeader ?: boolean\n  isDark ?: boolean\n  colors : string[]\n  values : string[]\n  photo ?: string\n  onClick ?: () => void\n}\n\nconst TableRow : React.FC<TableRowProps> = ({\n  n,\n  isHeader,\n  isDark,\n  photo,\n  colors,\n  values,\n  title,\n  description,\n  onClick,\n}) => {\n  return(\n    <Cell\n      style={{\n        fontWeight: isHeader ? 'bold' : 'normal',\n        background : isDark ? 'var(--background_keyboard)' : '',\n        marginBottom : 4,\n      }}\n      before={photo &&\n        <div className=\"photo\">\n          {n && <div className=\"photo__place\">{n}</div>}\n          <Avatar mode=\"image\" src={photo}/>\n        </div>\n      }\n      after={<div style={{padding:4,display:'flex',}}>\n        {values.map((value, i) => {\n          return <div\n            key={i}\n            style={{color:colors[i], marginRight:4, width:14, textAlign:'center', fontSize:14}}\n          >{value}</div>\n        })}\n        </div>}\n      disabled={!onClick}\n      onClick={onClick}\n      description={description}\n    >{title}</Cell>\n  )\n}\n\nexport default TableRow","import { GameInfo } from \"../types/GameInfo\";\n\nexport const getGamesByTours =  (calendar : GameInfo[]) : {[tour : string] : GameInfo[]} => {\n  const data : {[tour : string] : GameInfo[]} = {}\n\n  calendar.forEach(game => {\n    if(!data[game.tour])\n    {\n      data[game.tour] = []\n    }\n\n    data[game.tour].push(game)\n  })\n\n  return data\n}","import React from 'react';\n\nimport {\n  Cell,\n  HorizontalScroll, \n  List, \n  Panel, \n  PanelHeader, \n  PanelHeaderBack, \n  Tabs, \n  TabsItem\n} from '@vkontakte/vkui';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { goBack, goForward } from '../../store/slices/navigation';\nimport { RootState } from '../../store/rootReducer';\nimport { clearActiveTournament, setActiveTab } from '../../store/slices/tournament';\nimport { setActiveTeam} from '../../store/slices/team';\nimport { setActiveGameInfo } from '../../store/slices/game';\nimport { setActiveGame, setActiveModal } from '../../store/slices/modal';\n\nimport PlainHeader from '../../components/Headers/PlainHeader';\nimport GamesList from '../../components/GamesList';\nimport TableRow from '../../components/Table/TableRow';\n\nimport { GameInfo } from '../../types/GameInfo';\nimport { ClubInfo } from '../../types/ClubInfo';\n\nimport { getGamesByTours } from '../../utils/getGamesByTour';\nimport { EDIT_GAME_MODAL, GAME_PANEL, TEAM_PANEL } from '../../constans';\n\ninterface TournamentPanelProps\n{\n  id : string\n}\n\nconst TABS = [ 'Таблица', 'Расписание', 'Результаты']\n\nconst TournamentPanel : React.FC<TournamentPanelProps> = ({\n  id,\n}) => {\n  const dispatch = useDispatch()\n  const {activeTournament,activeTournamentName,activeTournamentCity,activeTab,activeSiteType} = useSelector((s:RootState) => s.tournament)\n\n  const goToTeam = (team : ClubInfo) => {\n    dispatch(setActiveTeam(team))\n    dispatch(goForward(TEAM_PANEL))\n  }\n\n  const goToGame = (game : GameInfo) => {\n    console.log(game)\n    if(game.date === '-' && !game.score) return\n    \n    dispatch(setActiveGameInfo(game))\n    dispatch(goForward(GAME_PANEL))\n  }\n\n  const goToTournaments = () => {\n    dispatch(goBack())\n    dispatch(clearActiveTournament())\n    dispatch(setActiveTab(0))\n  }\n\n  const editScore = (g : GameInfo) => {\n    console.log('GAME : ', g)\n    dispatch(setActiveGame(g))\n    dispatch(setActiveModal(EDIT_GAME_MODAL))\n  }\n\n  return(\n    <Panel id={id}>\n      <PanelHeader\n        left={<PanelHeaderBack onClick={goToTournaments} />}\n      >Турнир</PanelHeader>\n      \n      <PlainHeader\n        hrefText={'Сайт'}\n        href={activeSiteType === 0\n            ? `https://lfl.ru/tournament${activeTournament?.tournamentId}`\n            : `https://www.goalstream.org/season/${activeTournament?.tournamentId}`\n        }\n        title={activeTournamentName}\n        city={activeTournamentCity}\n      />\n      <HorizontalScroll>\n        <Tabs mode=\"buttons\">\n          {TABS.map((tab,i) => {\n            return <TabsItem\n              key={i}\n              selected={activeTab === i}\n              onClick={() => dispatch(setActiveTab(i))}\n            >{tab}</TabsItem>\n          })}\n        </Tabs>\n      </HorizontalScroll>\n\n      \n      {activeTab === 0 && activeTournament &&\n        <List>\n          <TableRow\n            isHeader={true}\n            title={'Команда'}\n            values={['И','В','Н','П','О']}\n            colors={['','green','orange','red']}\n          />\n          {\n            activeTournament.table.map((team,i) => {\n              if(team.title === '') return null\n\n              return team.title\n                ? <Cell\n                    key={i}\n                    disabled\n                    style={{fontWeight:'bold'}}\n                  >{team.title}</Cell>\n                : <TableRow\n                    key={i}\n                    n={team.place}\n                    title={team.name}\n                    photo={team.logo}\n                    onClick={() => goToTeam(team)}\n                    values={[team.win+team.draw+team.lose,team.win,team.draw,team.lose,team.points].map(n=>''+n)}\n                    colors={['','green','orange','red']}\n                    isDark={i % 2 === 0}\n                  />\n            })\n          }\n        </List>\n      }\n\n      {activeTab === 1 && activeTournament &&\n        Object.entries(getGamesByTours(activeTournament.calendar))\n          .map(([tour, games],i) => {\n            return <GamesList\n              key={i}\n              header={`${tour}${activeSiteType === 0 ? ' ТУР' : ''}`}\n              games={games}\n              editable={true}\n              onGoToGame={editScore}\n            />\n          })\n      }\n\n      {activeTab === 2 && activeTournament &&\n        Object.entries(getGamesByTours(activeTournament.results)).reverse()\n          .map(([tour, games],i) => {\n            return <GamesList\n              key={i}\n              header={`${tour}${activeSiteType === 0 ? ' ТУР' : ''}`}\n              games={games}\n              onGoToGame={goToGame}\n            />\n          })\n      }\n\n      {/* {activeTab === 3 && activeTournament &&\n        <List>\n          <TableRow\n              isHeader={true}\n              title={'Игрок'}\n              values={['Г']}\n              colors={[]}\n            />\n          {\n            activeTournament.strikers.map((player,i) => {\n              return <TableRow\n                key={i}\n                n={i+1}\n                title={player.playerName}\n                photo={player.playerPhoto}\n                description={player.teamName}\n                values={[''+player.points]}\n                colors={[]}\n                isDark={i % 2 === 0}\n              />\n            })\n          }\n        </List>\n      }\n\n      {activeTab === 4 && activeTournament &&\n        <List>\n          <TableRow\n              isHeader={true}\n              title={'Игрок'}\n              values={['А']}\n              colors={[]}\n            />\n          {\n            activeTournament.assistents.map((player,i) => {\n              return <TableRow\n                key={i}\n                n={i+1}\n                title={player.playerName}\n                photo={player.playerPhoto}\n                description={player.teamName}\n                values={[''+player.points]}\n                colors={[]}\n                isDark={i % 2 === 0}\n              />\n            })\n          }\n        </List>\n      } */}\n\n\n    </Panel>\n  )\n}\n\nexport default TournamentPanel","import React from 'react';\n\n\nimport {\n  HorizontalScroll,\n  Panel,\n  PanelHeader,\n  PanelHeaderBack,\n  Tabs,\n  TabsItem\n} from '@vkontakte/vkui';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { goBack, goForward } from '../../store/slices/navigation';\nimport { RootState } from '../../store/rootReducer';\nimport { clearActiveteam, goForwardToTeam,setActiveTab } from '../../store/slices/team';\nimport { goBackToGame, setActiveGameInfo } from '../../store/slices/game';\n\nimport PlainHeader from '../../components/Headers/PlainHeader';\nimport GamesList from '../../components/GamesList';\n\nimport { GameInfo } from '../../types/GameInfo';\n\nimport { GAME_PANEL } from '../../constans';\n\ninterface TeamPanelProps\n{\n  id : string\n}\n\n// const TABS = [ 'Расписание', 'Результаты', 'Состав' ]\nconst TABS = [ 'Расписание', 'Результаты']\n\nconst TeamPanel : React.FC<TeamPanelProps> = ({\n  id,\n}) => {\n  const dispatch = useDispatch()\n  const { activeTeam, activeTab } = useSelector((s:RootState) => s.team)\n  const {history} = useSelector((s:RootState) => s.navigation)\n  const {activeTournament,activeTournamentCity} = useSelector((s:RootState) => s.tournament)\n\n  const goToBack = () => {\n    const isToGame = history[history.length-2] === 'game'\n    if(isToGame) dispatch(goBackToGame())\n\n    dispatch(goBack())\n    dispatch(clearActiveteam())\n  }\n\n  const goToGame = (game : GameInfo) => {\n    if(game.date === '-' && !game.score) return\n\n    dispatch(goForwardToTeam())\n    dispatch(setActiveGameInfo(game))\n    dispatch(goForward(GAME_PANEL))\n  }\n\n  return(\n    <Panel id={id}>\n      <PanelHeader\n        left={<PanelHeaderBack onClick={goToBack} />}\n      >Команда</PanelHeader>\n\n      {activeTeam && <>\n        <PlainHeader\n          logo={activeTeam.logo}\n          title={activeTeam.name}\n          city={activeTournamentCity}\n        />\n        <HorizontalScroll>\n          <Tabs mode=\"buttons\">\n            {TABS.map((tab,i) => {\n              return <TabsItem\n                key={i}\n                selected={activeTab === i}\n                onClick={() => dispatch(setActiveTab(i))}\n              >{tab}</TabsItem>\n            })}\n          </Tabs>\n        </HorizontalScroll>\n      </>}\n\n      \n      {activeTab === 0 && activeTeam &&\n        <GamesList\n          games={activeTournament!.calendar.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\n          // onGoToGame={goToGame}\n        />\n      }\n\n      {activeTab === 1 && activeTeam &&\n        <GamesList\n          teamHref={activeTeam.href}\n          games={activeTournament!.results.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\n          onGoToGame={goToGame}\n        />\n      }\n\n      {/* {activeTab === 2 && activeTeam &&\n        <Group>\n          <TableRow\n            isHeader={true}\n            title={'Игрок'}\n            values={['И', 'Г','А','Ж','К']}\n            colors={['','green','gray','orange','red']}\n          />\n          {\n            loading\n              ? <Div><Spinner/></Div>\n              : activeTeamSquad.map((player,i) => {\n                return <TableRow\n                  key={i}\n                  title={player.playerName}\n                  photo={player.playerPhoto}\n                  description={player.amplua}\n                  values={[player.games,player.goals,player.assists,player.yc,player.rc].map(n=>''+n)}\n                  colors={['','green','gray','orange','red']}\n                  isDark={i % 2 === 0}\n                />\n              })\n          }\n        </Group>\n      } */}\n    </Panel>\n  )\n}\n\nexport default TeamPanel","import React from 'react';\nimport './Headers.sass'\n\nimport {Avatar, Div} from '@vkontakte/vkui';\nimport { ClubInfo } from '../../types/ClubInfo';\n\ninterface Team\n{\n  logo : string\n  href : string\n  name : string\n}\n\ninterface GameHeaderProps\n{\n  home : Team\n  away : Team\n  score : string\n  onGoToTeam ?: (team : ClubInfo) => void\n}\n\nconst GameHeader : React.FC<GameHeaderProps> = ({\n  home,\n  away,\n  score,\n  onGoToTeam,\n}) => {\n  // const goToTeam = (team : Team) => onGoToTeam(team as ClubInfo)\n\n  return(\n    <Div className=\"game-header__container\">\n      <div className=\"game-header__item\"\n        // onClick={() => goToTeam(home)}\n      >\n        <Avatar size={82} mode=\"image\" src={home.logo} />\n        <div style={{textAlign:'center'}}>{home.name}</div>\n      </div>\n      <div className=\"game-header__item\" style={{fontSize:24}}>{score}</div>\n      <div className=\"game-header__item\"\n        // onClick={() => goToTeam(away)}\n      >\n        <Avatar size={82} mode=\"image\" src={away.logo} />\n        <div style={{textAlign:'center'}}>{away.name}</div>\n      </div>\n    </Div>\n  )\n}\n\nexport default GameHeader","import React from 'react';\nimport './GameInfoTabs.sass'\n\nimport {HorizontalScroll, Tabs, TabsItem} from '@vkontakte/vkui';\nimport { Icon28GlobeOutline, Icon28AdvertisingOutline, Icon28CalendarOutline } from '@vkontakte/icons';\ninterface GameInfoTabsProps\n{\n  date : string | null\n  refery : string | null\n  place : string | null\n}\n\nconst GameInfoTabs : React.FC<GameInfoTabsProps> = ({\n  date,\n  refery,\n  place,\n}) => {\n  return(\n    <HorizontalScroll style={{marginBottom:20}}>\n      <Tabs mode=\"buttons\">\n        {date && \n          <TabsItem selected={true} className=\"game-info__item\">\n            <Icon28CalendarOutline/><div>{date}</div>\n          </TabsItem>\n        }\n        {place && \n          <TabsItem selected={true} className=\"game-info__item\">\n            <Icon28GlobeOutline/><div>{place}</div>\n          </TabsItem>\n        }\n        {refery && \n          <TabsItem selected={true} className=\"game-info__item\">\n            <Icon28AdvertisingOutline/><div>{refery}</div>\n          </TabsItem>\n        }\n      </Tabs>\n    </HorizontalScroll>\n  )\n}\n\nexport default GameInfoTabs","import React from 'react';\nimport './EventRow.sass'\n\ninterface EventRowProps\n{\n  isHome : boolean\n  playerName : string\n  eventType : string\n  minute : number\n}\n\nconst EventRow : React.FC<EventRowProps> = ({\n  isHome,\n  playerName,\n  eventType,\n  minute,\n}) => {\n  return(\n    <div className=\"events__row\">\n      {playerName.includes('(аг)')\n        ? <>\n          <div className=\"events__player\">{minute !== 0 && isHome ? minute : ''}{!isHome && playerName}</div>\n          <div className=\"events__type\">{eventType}</div>\n          <div className=\"events__player\">{isHome && playerName}{minute !== 0 && !isHome ? minute : ''}</div>\n        </>\n        : <>\n          <div className=\"events__player\">{minute !== 0 && !isHome ? minute : ''}{isHome && playerName}</div>\n          <div className=\"events__type\">{eventType}</div>\n          <div className=\"events__player\">{!isHome && playerName}{minute !== 0 && isHome ? minute : ''}</div>\n        </>\n      }\n    </div>\n  )\n}\n\nexport default EventRow","import React from 'react';\n\nimport {\n  Div,\n  Link,\n  Panel,\n  PanelHeader,\n  PanelHeaderBack,\n  Placeholder,\n  Spinner} from '@vkontakte/vkui';\n\nimport { useSelector } from 'react-redux';\nimport { goBack, goForward } from '../../store/slices/navigation';\nimport { RootState } from '../../store/rootReducer';\nimport { goBackToTeam, setActiveTeam } from '../../store/slices/team';\nimport { clearActiveGame, goForwardToGame, requestGame } from '../../store/slices/game';\nimport {useAppDispatch} from '../../store/store';\n\nimport GameHeader from '../../components/Headers/GameHeader';\nimport GameInfoTabs from '../../components/GameInfoTabs';\nimport EventRow from '../../components/EventRow';\n\nimport { TEAM_PANEL } from '../../constans';\n\nimport { ClubInfo } from '../../types/ClubInfo';\nimport { requestPredictions, clearPredictionsInfo } from '../../store/slices/predictions';\nimport { nowLessThen } from '../../utils/nowLessThen';\n\ninterface GamePanelProps\n{\n  id : string\n}\n\n// const TABS = [ 'События', 'Составы',]\n\nconst GamePanel : React.FC<GamePanelProps> = ({\n  id,\n}) => {\n  const dispatch = useAppDispatch()\n  const {history} = useSelector((s:RootState) => s.navigation)\n  const {activeGameInfo,activeGameEvents,loading, error} = useSelector((s:RootState) => s.game)\n  const {activeTournament,activeSiteType,activeDivisionId} = useSelector((s:RootState) => s.tournament)\n  const {user} = useSelector((s:RootState) => s.user)\n\n  const [activeTab] = React.useState(0)\n  const [, setUserPrediction] = React.useState<0|1|null>(null)\n\n  const canPredict = nowLessThen(\n    activeGameInfo.date.split(' ')[0].split('.').map(s=>+s),\n    activeGameInfo.time.split(':').map(s=>+s)\n  )\n\n  const goToBack = () => {\n    const isToTeam = history[history.length-2] === 'team'\n    if(isToTeam) dispatch(goBackToTeam())\n    \n    dispatch(goBack())\n    dispatch(clearActiveGame())\n    dispatch(clearPredictionsInfo())\n  }\n\n  const goToTeam = (team : ClubInfo) => {\n\n    dispatch(goForwardToGame())\n    \n    dispatch(setActiveTeam(team))\n    dispatch(goForward(TEAM_PANEL))\n\n    dispatch(clearActiveGame())\n    dispatch(clearPredictionsInfo())\n\n    // dispatch(requestSquad({tournamentId, clubId}))\n  }\n\n\n  React.useEffect(() => {\n    if(activeGameEvents) return\n\n    if(activeGameInfo.matchHref.includes('/empty_protocol'))\n    {\n      const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\n      const prediction = user!.predictions.find(p => p.matchId === matchId)\n      if(prediction)\n      {\n        setUserPrediction(prediction.prediction)\n      }\n\n      if(!canPredict || !!prediction)\n        dispatch(requestPredictions(matchId))\n      return\n    }\n\n    const postfix = activeSiteType === 0\n      ? (activeDivisionId\n        ? `/division${activeDivisionId}/tour${activeGameInfo.tour}`\n        : `/tournament${activeTournament!.tournamentId}/tour${activeGameInfo.tour}`\n      )\n      : activeGameInfo.matchHref\n\n    const matchId = activeSiteType === 0 ? activeGameInfo.matchHref.replace('/match','') : ''\n\n    const req = dispatch(requestGame({\n      postfix,\n      siteType : activeSiteType,\n      matchId,\n    }) )\n    return () => {\n      req.abort()\n    }\n  },[])\n\n  const home = {\n    name : activeGameInfo.homeName,\n    href : activeGameInfo.homeHref,\n    logo : activeGameInfo.homeLogo,\n  }\n  \n  const away = {\n    name : activeGameInfo.awayName,\n    href : activeGameInfo.awayHref,\n    logo : activeGameInfo.awayLogo,\n  }\n\n\n  return(\n    <Panel id={id}>\n      <PanelHeader\n        left={<PanelHeaderBack onClick={goToBack} />}\n      >Матч</PanelHeader>\n\n      <GameHeader\n        home={home}\n        away={away}\n        score={!activeGameInfo.score ? '-:-' : activeGameInfo.score}\n        onGoToTeam={goToTeam}\n      />\n\n      <GameInfoTabs\n        date={activeGameInfo.date !== '-' ? `${activeGameInfo.date}, ${activeGameInfo.time}` : null}\n        refery={activeGameEvents && activeGameEvents.refery !== '-' ? activeGameEvents.refery : null}\n        place={activeGameEvents && activeGameEvents.place !== '-' ? activeGameEvents.place : null}\n      />\n\n      {/* {!loading && !noInformation && activeGameInfo.score &&\n        <HorizontalScroll>\n          <Tabs mode=\"buttons\">\n            {TABS.map((tab,i) => {\n              return <TabsItem\n                key={i}\n                selected={activeTab === i}\n                onClick={() => setActiveTab(i)}\n              >{tab}</TabsItem>\n            })}\n          </Tabs>\n        </HorizontalScroll>\n      } */}\n      \n      {/* {!activeGameInfo.score &&\n        <Prediction\n          canPredict={canPredict}\n          userPrediction={userPrediction}\n          predictionsInfo={predictionsInfo}\n          loading={loadingPrediction}\n          title=\"Количество голов\"\n          variants={['Больше 7', 'Не больше 7']}\n          onPrediction={doPredict}\n        />\n      } */}\n\n      {error &&\n        <Placeholder>\n          Произошла ошибка, попробуйте посмотреть информацию на\n          <Link\n            href={activeSiteType === 0\n              ? (activeDivisionId\n                ? `https://www.lfl.ru/division${activeDivisionId}/tour${activeGameInfo.tour}`\n                : `https://www.lfl.ru/tournament${activeTournament!.tournamentId}/tour${activeGameInfo.tour}`\n              )\n              : `http://www.goalstream.org${activeGameInfo.matchHref}`}\n          >&nbsp;сайте</Link>\n        </Placeholder>\n      }\n\n      {activeGameEvents && activeGameEvents.events.length === 0 && <Placeholder>Нет информации</Placeholder>}\n      \n      {loading && <>\n        <Div><Spinner/></Div>\n        <Placeholder>Загрузка займет некоторое время. Пожалуйста, подождите</Placeholder>\n      </>}\n\n\n      {!loading && activeTab === 0 && activeGameEvents &&\n        activeGameEvents.events.map((e,i) => {\n          let eventSymbol = ''\n          if(e.type === 'goal') eventSymbol = '⚽'\n          else if(e.type === 'assist') eventSymbol = '✅'\n          else if(e.type === 'yc') eventSymbol = '🟨'\n          else eventSymbol = '🟥'\n          \n          return <EventRow\n            key={i}\n            playerName={e.name}\n            eventType={eventSymbol}\n            isHome={e.team === 0}\n            minute={e.minute}\n          />\n        })\n      }\n\n      {/* {!loading && activeTab === 1 && <>\n        <Tabs mode=\"buttons\">\n          {[activeGameInfo.homeName,activeGameInfo.awayName].map((team,i) => {\n            return <TabsItem\n              key={i}\n              selected={activeTeamTab === i}\n              onClick={() => setActiveTeamTab(i)}\n            >{team}</TabsItem>\n          })}\n        </Tabs>\n        <List>\n          {activeGameEvents &&\n            activeGameEvents.squads[activeTeamTab].map((player,i) => {\n              return <Cell\n                disabled\n                key={i}\n                description={activeGameInfo[activeTeamTab === 0 ? 'homeName' : 'awayName']}\n              >{player.name}</Cell>\n            })\n          }\n        </List>\n      </>} */}\n    </Panel>\n  )\n}\n\nexport default GamePanel","export const nowLessThen = (date : number[], time : number[]) : boolean => {\n  const now = Date.now()\n\n  const [d,m,y] = date\n  const [h,min] = time\n  const gameTime = new Date(y,m-1,d,h,min).getTime()\n\n  return now <= gameTime\n}","import React from 'react';\n\nimport bridge from '@vkontakte/vk-bridge'\nimport {\n  Avatar,\n  Button,\n  Card,\n  Cell,\n  Div,\n  Header,\n  Panel,\n  PanelHeader,\n  Snackbar,\n} from '@vkontakte/vkui';\nimport { \n  Icon28ChevronRightOutline, \n  Icon28FavoriteCircleFillYellow,\n  Icon28AddCircleFillBlue,\n  Icon28ReplyCircleFillGreen,\n  Icon28Users3Outline,\n  Icon16DoneCircle,\n  Icon28HomeOutline\n} from '@vkontakte/icons';\n\nimport { useDispatch } from 'react-redux';\nimport { goForward } from '../../store/slices/navigation';\n\nimport { LEAGUE_PANEL } from '../../constans';\n\nimport { CityInfo } from '../../types/CityInfo';\nimport { setActiveLeague } from '../../store/slices/league';\n\ninterface TournamentsPanelProps\n{\n  id : string\n  cities : (CityInfo & {collapsed : boolean})[]\n}\n\nconst GROUP_ID = 202380422\nconst GROUP_HREF = `https://vk.com/club${GROUP_ID}`\n\nconst TournamentsPanel : React.FC<TournamentsPanelProps> = ({\n  id,\n  cities,\n}) => {\n  const IS_ANDROID = window.location.href.includes('mobile_android')\n  const dispatch = useDispatch()\n\n  const goToLeague = (league : CityInfo) => {\n    dispatch(goForward(LEAGUE_PANEL))\n    dispatch(setActiveLeague(league))\n  }\n\n  const [snackbar, setSnackbar] = React.useState<React.ReactElement | null>(null)\n  const openSnackbar = (text : string) => {\n    setSnackbar(\n      <Snackbar\n        before={\n          <Avatar size={24} style={{backgroundColor:'var(--accent)'}}>\n            <Icon16DoneCircle fill=\"#fff\" width={14} height={14} />\n          </Avatar>\n        }\n        onClose={() => setSnackbar(null)}\n      >{text}</Snackbar>\n    )\n  }\n\n  const addToFavourite = () => {\n    bridge.send('VKWebAppAddToFavorites')\n      .then(_=>openSnackbar('Успешно добавлено !'))\n      .catch(err=>err)\n  }\n\n  const joinToGroup = () => {\n    bridge.send('VKWebAppJoinGroup',{group_id:GROUP_ID})\n      .then(_=>openSnackbar('Вы вступили. Спасибо!'))\n      .catch(err=>err)\n  }\n\n  const goToGroup = () => {\n    let a = document.createElement('a')\n    a.href = GROUP_HREF\n    a.target = '_blank'\n    a.click()\n    a.remove()\n  }\n\n  const share = () => {\n    bridge.send('VKWebAppShare')\n      .then(res=>res)\n      .catch(err=>err)\n  }\n\n  const addToHomeScreen = () => {\n    bridge.send('VKWebAppAddToHomeScreen')\n      .then(_=>openSnackbar('Успешно добавлено !'))\n      .catch(err=>err)\n  }\n\n  return(\n    <Panel id={id}>\n      <PanelHeader separator={false}>Главная</PanelHeader>\n      \n      <Header style={{marginTop:8}}>Информация</Header>\n      <Div>\n        <Card>\n          <Div>\n            <div style={{display:'flex'}}>\n              <Button\n                style={{marginBottom:8,width:'100%',display:'flex',marginRight:8}}\n                size=\"l\"\n                before={<Icon28Users3Outline/>}\n                onClick={goToGroup}\n              >Группа</Button>\n              <Button\n                style={{marginBottom:8,display:'flex',justifyContent:'center',alignItems:'center'}}\n                size=\"l\"\n                before={<Icon28AddCircleFillBlue/>}\n                onClick={joinToGroup}\n              />\n            </div>\n            <Button\n              style={{marginBottom:8,width:'100%',display:'flex',}}\n              size=\"l\"\n              before={<Icon28FavoriteCircleFillYellow/>}\n              onClick={addToFavourite}\n            >Добавить в избранное</Button>\n            <Button\n              style={{marginBottom:IS_ANDROID?8:0,width:'100%',display:'flex',}}\n              size=\"l\"\n              before={<Icon28ReplyCircleFillGreen/>}\n              onClick={share}\n            >Поделиться</Button>\n            {IS_ANDROID &&\n              <Button\n                style={{marginBottom:0,width:'100%',display:'flex',}}\n                size=\"l\"\n                onClick={addToHomeScreen}\n                before={<Icon28HomeOutline/>}\n              >На дом. экран</Button>\n            }\n          </Div>\n        </Card>\n      </Div>\n\n      <Header>Турниры</Header>\n      {/* {cities.map((city, i) => {\n        return <Div key={i} style={{paddingBottom: i===cities.length-1 ? 12 : 0}}>\n          <Card>\n            <div\n              onClick={() => dispatch(toggleCollapse(i))}\n              style={{display:'flex',padding:8}}\n            >\n              <div style={{display:'flex',flex:1,alignItems:'center',}}>\n                <Avatar mode=\"image\" size={32} src={city.tournaments[0].logo}/>\n                &nbsp;&nbsp;<div style={{flex:1}}>{city.title}</div>\n              </div>\n              <Icon28ChevronDownOutline\n                style={{color:'var(--accent)',transform : `rotate(${city.collapsed ? '0deg' : '180deg'})`}}\n              />\n            </div>\n            {!city.collapsed &&\n              <List>\n                {city.tournaments.map((t,i) => {\n                  return <Cell\n                    key={i}\n                    after={<Icon28ChevronRightOutline/>}\n                    onClick={() => goToTournament(t)}\n                  >{t.name}</Cell>\n                })}\n              </List>\n            }\n          </Card>\n        </Div>\n      })} */}\n      {cities.map((city,i) => {\n        return <Cell\n          key={i}\n          before={<Avatar size={32} mode=\"image\" src={city.tournaments[0].logo} />}\n          after={<Icon28ChevronRightOutline/>}\n          onClick={() => goToLeague(city)}\n        >{city.title}</Cell>\n      })}\n\n      {snackbar}\n    </Panel>\n  )\n}\n\nexport default TournamentsPanel","import React, { ReactEventHandler } from 'react';\n\nimport bridge from '@vkontakte/vk-bridge'\nimport {CellButton, Card, Div} from '@vkontakte/vkui';\nimport {\n  Icon20AddCircleFillBlue,\n  Icon28FavoriteCircleFillYellow,\n  Icon28HomeOutline,\n  Icon28ReplyCircleFillGreen,\n  Icon28UsersCircleFillGray\n} from '@vkontakte/icons';\n\n\ninterface ActionsProps\n{\n  openSnackbar : (msg : string) => void\n}\n\nconst GROUP_ID = 202380422\nconst GROUP_HREF = `https://vk.com/club${GROUP_ID}`\n\nconst Actions: React.FC<ActionsProps> = ({\n  openSnackbar,\n}) => {\n\n  const IS_ANDROID = window.location.href.includes('mobile_android')\n\n  const addToFavourite = () => {\n    bridge.send('VKWebAppAddToFavorites')\n      .then(_=>openSnackbar('Успешно добавлено !'))\n      .catch(err=>err)\n  }\n\n  const joinToGroup : ReactEventHandler<HTMLDivElement> = (e) => {\n    e.stopPropagation()\n    e.preventDefault()\n    bridge.send('VKWebAppJoinGroup',{group_id:GROUP_ID})\n      .then(_=>openSnackbar('Вы вступили. Спасибо!'))\n      .catch(err=>err)\n  }\n\n  const goToGroup = () => {\n    let a = document.createElement('a')\n    a.href = GROUP_HREF\n    a.target = '_blank'\n    a.click()\n    a.remove()\n  }\n\n  const share = () => {\n    bridge.send('VKWebAppShare')\n      .then(res=>res)\n      .catch(err=>err)\n  }\n\n  const addToHomeScreen = () => {\n    bridge.send('VKWebAppAddToHomeScreen')\n      .then(_=>openSnackbar('Успешно добавлено !'))\n      .catch(err=>err)\n  }\n\n  return(\n    <Div>\n      <Card>\n        <CellButton\n          before={<Icon28UsersCircleFillGray style={{marginRight:8}}/>}\n          onClick={goToGroup}\n          after={<Icon20AddCircleFillBlue onClick={joinToGroup}/>}\n        >Группа приложения</CellButton>\n        <CellButton\n          before={<Icon28FavoriteCircleFillYellow style={{marginRight:8}}/>}\n          onClick={addToFavourite}\n        >Добавить в избранное</CellButton>\n        <CellButton\n          before={<Icon28ReplyCircleFillGreen style={{marginRight:8}}/>}\n          onClick={share}\n        >Поделиться</CellButton>\n        {IS_ANDROID &&\n          <CellButton\n            onClick={addToHomeScreen}\n            before={<Icon28HomeOutline style={{marginRight:8}}/>}\n          >На дом. экран</CellButton>\n        }\n      </Card>\n    </Div>\n  )\n}\n\nexport default Actions","import React from 'react';\n\nimport bridge from '@vkontakte/vk-bridge'\nimport {\n  Avatar,\n  Card,\n  Cell,\n  CellButton,\n  Div,\n  Panel,\n  PanelHeader,\n  PanelHeaderBack,\n  Placeholder,\n  Snackbar,\n} from '@vkontakte/vkui';\nimport { Icon16DoneCircle, Icon28ChevronRightOutline,Icon24Copy, Icon24Add, Icon28FavoriteOutline, Icon28UnfavoriteOutline } from '@vkontakte/icons';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { goBack, goForward } from '../../store/slices/navigation';\nimport { RootState } from '../../store/rootReducer';\n\nimport { ADD_WIDGET_PANEL, TOURNAMENT_PANEL } from '../../constans';\nimport PlainHeader from '../../components/Headers/PlainHeader';\nimport { requestTournament, setActiveTournament } from '../../store/slices/tournament';\nimport { Tournament } from '../../types/Tournament';\nimport Actions from '../../components/Actions';\n\ninterface LeaguePanelProps\n{\n  id : string\n}\n\nconst LeaguePanel : React.FC<LeaguePanelProps> = ({\n  id,\n}) => {\n  const dispatch = useDispatch()\n  const {activeLeague} = useSelector((s:RootState) => s.league)\n  const {user} = useSelector((s:RootState) => s.user)\n\n  const goToBack = () => {\n    dispatch(goBack())\n  }\n\n  const goToTournament = (t : Tournament) => {\n    dispatch(goForward(TOURNAMENT_PANEL))\n    dispatch(setActiveTournament(t))\n    dispatch(requestTournament({tournamentId : +t.id, siteType : t.siteType }))\n  }\n\n  const [snackbar, setSnackbar] = React.useState<React.ReactElement | null>(null)\n  const openSnackbar = (text : string) => {\n    setSnackbar(\n      <Snackbar\n        before={\n          <Avatar size={24} style={{backgroundColor:'var(--accent)'}}>\n            <Icon16DoneCircle fill=\"#fff\" width={14} height={14} />\n          </Avatar>\n        }\n        onClose={() => setSnackbar(null)}\n      >{text}</Snackbar>\n    )\n  }\n\n  const copyLink = () => {\n    bridge.send('VKWebAppCopyText',{text:`https://vk.com/app7746401#league${activeLeague!.id}`})\n      .then(_ => openSnackbar('Скопировано'))\n      .catch(e=>e)\n  }\n\n  const goToAddWidget = () => {\n    dispatch(goForward(ADD_WIDGET_PANEL))\n  }\n\n  const [openThisLeague,setOpenThisLeague] = React.useState(false)\n  React.useEffect(() => {\n    const init = async () => {\n      try\n      {\n        const {keys} = await bridge.send('VKWebAppStorageGet',{keys:['favorite']})\n        const favorite = keys.find(entrie => entrie.key === 'favorite')\n        if(!favorite)\n          setOpenThisLeague(false)\n        else\n          setOpenThisLeague(favorite.value === `league${activeLeague!.id}`)\n      }\n      catch(err){}\n    }\n\n    init()\n  },[])\n\n  const toggleOpenThisLeague = async () => {\n    try\n    {\n      await bridge.send('VKWebAppStorageSet',{\n        key:'favorite',\n        value: openThisLeague ? '' : `league${activeLeague!.id}`\n      })\n\n      setOpenThisLeague(!openThisLeague)\n    }\n    catch(err){}\n  }\n\n  return(\n    <Panel id={id}>\n      <PanelHeader\n        left={<PanelHeaderBack onClick={goToBack} />}\n      >Лига</PanelHeader>\n\n      {activeLeague\n        ? <>\n\n            <PlainHeader\n              href={activeLeague.vkHref}\n              hrefText={'Группа'}\n              logo={activeLeague.tournaments[0].logo}\n              title={activeLeague.title}\n            />\n\n            <Div style={{paddingBottom:0}}>\n              <Card>\n                {activeLeague.tournaments.map((t,i) => {\n                  return <Cell\n                    key={i}\n                    after={<Icon28ChevronRightOutline/>}\n                    onClick={() => goToTournament(t)}\n                  >{t.name}</Cell>\n                })}\n              </Card>\n            </Div>\n\n            <Actions openSnackbar={openSnackbar} />\n\n            <Div style={{paddingTop:0}}>\n              <Card>\n                <CellButton\n                  style={{color: !openThisLeague ? 'orange' : 'red'}}\n                  before={\n                    !openThisLeague\n                      ? <Icon28FavoriteOutline style={{marginRight:8,color:'orange'}}/>\n                      : <Icon28UnfavoriteOutline style={{marginRight:8,color:'red'}}/>\n                  }\n                  onClick={toggleOpenThisLeague}\n                >{\n                  !openThisLeague\n                    ? 'Открывать сразу эту лигу'\n                    : 'Не открывать сразу эту лигу'\n                }</CellButton>\n                <CellButton\n                  before={<Icon24Copy style={{marginRight:8}}/>}\n                  onClick={copyLink}\n                  description=\"Прямая ссылка на эту страницу\"\n                >Скопировать ссылку на лигу</CellButton>\n\n                <CellButton\n                  before={<Icon24Add style={{marginRight:8}}/>}\n                  onClick={goToAddWidget}\n                  description=\"Для администраторов групп\"\n                >Добавить виджет в группу</CellButton>\n              </Card>\n            </Div>\n          </>\n        : <Placeholder>Ничего не найдено. Попробуйте найти турнир в\n          <span\n            style={{color:'var(--accent)'}}\n            onClick={goToBack}\n          > списке</span>\n        </Placeholder>\n      }\n\n      {snackbar}\n    </Panel>\n  )\n}\n\nexport default LeaguePanel","import React from 'react';\n\nimport bridge from '@vkontakte/vk-bridge'\nimport {\n  Button,\n  Div,\n  FormItem,\n  Link,\n  NativeSelect,\n  Panel,\n  PanelHeader,\n  PanelHeaderBack,\n  Placeholder,\n  Spinner,\n} from '@vkontakte/vkui';\nimport { Icon56CheckCircleOutline } from '@vkontakte/icons';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { goBack } from '../../store/slices/navigation';\nimport { RootState } from '../../store/rootReducer';\nimport api from '../../api';\nimport { TournamentInfo } from '../../types/TournamentInfo';\nimport { BASE_URL } from '../../api/BASE_URL';\nimport { ClubInfo } from '../../types/ClubInfo'\n\ninterface AddWidgetPanelProps\n{\n  id : string\n}\n\nconst APP_ID = 7746401\nconst VERSION = '5.126'\n\nconst WIDGET_TYPES = [\n  {id : 'table', name : 'Таблица'},\n  {id : 'matches', name : 'Матчи'}\n]\n\nconst AddWidgetPanel : React.FC<AddWidgetPanelProps> = ({\n  id,\n}) => {\n  const dispatch = useDispatch()\n  const {user} = useSelector((s:RootState) => s.user)\n  // const user = {id:612381684}\n  const {activeLeague} = useSelector((s:RootState) => s.league)\n\n  const goToLeague = () => {\n    dispatch(goBack())\n  }\n\n  const [step, setStep] = React.useState(0)\n\n  const [loading, setLoading] = React.useState(false)\n  const [error, setError] = React.useState('')\n\n  const [activeGroup, setActiveGroup] = React.useState<number|null>(null)\n  const [activeTournament, setActiveTournament] = React.useState<number>(+activeLeague!.tournaments[0].id)\n  const [activeSiteType, setActiveSiteType] = React.useState(activeLeague!.tournaments[0].siteType)\n  const [groups,setGroups] = React.useState<{id:number,name:string,photo_50:string}[]>([])\n  const [accessToken,setAccessToken] = React.useState('')\n  const [activeWidgetType,setActiveWidgetType] = React.useState(WIDGET_TYPES[0].id)\n\n  const requestGroups = async () => {\n    try\n    {\n      setLoading(true)\n      const {access_token} = await bridge.send('VKWebAppGetAuthToken',{app_id:APP_ID,scope:'groups'})\n      const res = await bridge.send('VKWebAppCallAPIMethod', {\n        method : 'groups.get', params : {user_id : user!.id,filter:'admin',extended:1,fields:'name',access_token,v:VERSION}\n      })\n      setLoading(false)\n\n      const groups = res.response.items\n      if(groups.length === 0)\n      {\n        setError('У вас нет администрируемых групп')\n        setStep(-1)\n      }\n      else\n      {\n        setGroups(groups)\n        setActiveGroup(groups[0].id)\n        setStep(s=>s+1)\n      }\n    }\n    catch(e)\n    {\n      console.log('ERROR : ', e, e.error_data)\n      setError('')\n    }\n    finally\n    {\n      setLoading(false)\n    }\n  }\n\n  const changeGroup = (e : React.FormEvent<HTMLSelectElement>) => {\n    setAccessToken('')\n    setActiveGroup(+e.currentTarget.value)\n  }\n\n  const changeWidgetType = (e : React.FormEvent<HTMLSelectElement>) => {\n    setActiveWidgetType(e.currentTarget.value)\n  }\n\n  const addWidget = async () => {\n    setLoading(true)\n    try\n    {\n      const tournament : TournamentInfo = await api.getTournament({\n        tournamentId:activeTournament!,\n        siteType:activeSiteType,\n      })\n      const leagueLink = `https://vk.com/app7746401#league${activeLeague?.id}`\n      \n      if(activeWidgetType === 'matches')\n      {\n        const createMatch = ({\n          date, home, away, score\n        } : {\n          date : string,\n          home : string,\n          away : string,\n          score : number[]\n          url : string\n        }) => {\n          return {\n            state : date,\n            team_a : { name : home },\n            team_b : { name : away },\n            score : { team_a : score[0], team_b : score[1] }\n          }\n        }\n\n        const games = tournament.calendar.length !== 0 ? tournament.calendar.slice(0,4) : tournament.results.slice(0,4)\n        const matches = games.map(game => {\n          const score = !game.score ? [0,0] : game.score.split(':').map(s=>+s)\n          const date = game.date && game.date !== '-'\n            ? `${game.date.replace('.2021','').replace('.2020','').replace(' ','')}${game.time ? `, ${game.time}` : ''}`\n            : (game.score ? 'Итог' : 'Информации нет')\n          return createMatch({\n            date,\n            home:game.homeName,\n            away:game.awayName,\n            score,\n            url : leagueLink,\n          })\n        })\n\n        const data = JSON.stringify({\n          title: \"Матчи\",\n          title_url: leagueLink,\n          more: \"Весь список\",\n          more_url: leagueLink,\n          matches,\n        })\n\n        const code = `return ${data};`\n        \n        await bridge.send('VKWebAppShowCommunityWidgetPreviewBox',{group_id : activeGroup!, type : 'matches', code,})\n      }\n      else if(activeWidgetType === 'table')\n      {\n        const head = [\n          {text : 'Команда', align : 'left'},\n          {text : 'В', align : 'right'},\n          {text : 'Н', align : 'right'},\n          {text : 'П', align : 'right'},\n          {text : 'О', align : 'right'},\n        ]\n\n        const body = tournament.table\n          .slice(activeSiteType === 0 ? 0 : 1, 11 - (activeSiteType === 0 ? 1 : 0))\n          .map(row => {\n            const keys : (keyof ClubInfo)[] = ['name','win','draw','lose','points']\n            \n            return keys.map(key => ({ text : ''+row[key] }) )\n          })\n\n        const data = {\n          title: \"Таблица\",\n          title_url: leagueLink,\n          more : 'Весь список',\n          more_url : leagueLink,\n          head,\n          body,\n        }\n        const code = `return ${JSON.stringify(data)};`\n\n        await bridge.send('VKWebAppShowCommunityWidgetPreviewBox',{group_id : activeGroup!, type : 'table', code,})\n      }\n\n      await api.addWidget({\n        user_id : user!.id,\n        group_id : activeGroup!,\n        app_id : APP_ID,\n        access_token : accessToken,\n        v : VERSION,\n        league_id : activeLeague!.id,\n        tournament_id : activeTournament!,\n        site_type : activeLeague!.tournaments[0].siteType,\n        type : activeWidgetType,\n      })\n      setStep(s=>s+1)\n    }\n    catch(e)\n    {\n      console.log('ERROR : ', e, e.error_data)\n      setError('')\n    }\n    finally\n    {\n      setLoading(false)      \n    }\n    const URL = `${BASE_URL}/widgets/update/${activeGroup}`\n    await fetch(URL,{method:'PUT'})\n  }\n\n  const requestToken = async () => {\n    try\n    {\n      const {access_token} = await bridge.send(\"VKWebAppGetCommunityToken\", {\n        app_id : APP_ID,\n        group_id : activeGroup!,\n        scope:'app_widget'\n      })\n      setAccessToken(access_token)\n    }\n    catch(e)\n    {\n      console.log('ERROR : ', e, e.error_data)\n      setError('')\n    }\n  }\n\n  const addInGroup = async () => {\n    try\n    {\n      await bridge.send('VKWebAppAddToCommunity')\n    }\n    catch(e)\n    {\n      console.log('Error : ', e, e.error_data)\n      setError('')\n    }\n  }\n\n  return(\n    <Panel id={id}>\n      <PanelHeader\n        left={<PanelHeaderBack onClick={goToLeague} />}\n      >Виджет</PanelHeader>\n\n      {loading && <Div style={{marginTop:28}}><Spinner/></Div>}\n      {error && <h1>Error :(</h1>}\n\n      {step === 0 && !loading && <>\n        <Placeholder\n          action={<Button onClick={requestGroups} mode=\"tertiary\">Запросить группы</Button>}\n        >\n          Необходимо выбрать группу, в которую будет установлен виджет.\n          Для получения списка групп понадобится токен доступа.\n        </Placeholder>\n      </>}\n\n      {step === 1 && <>\n        <FormItem top=\"Выберите группу\">\n          <NativeSelect\n            onChange={changeGroup}\n          >\n            {groups.map(group => {\n              return <option key={group.id} value={group.id}>{group.name}</option>\n            })}\n          </NativeSelect>\n        </FormItem>\n        {!accessToken\n          ? <Button\n              before={'❌'}\n              mode=\"tertiary\"\n              style={{width:'100%',display:'flex',color:'var(--accent)'}}\n              size=\"l\"\n              onClick={requestToken}\n            >Предоставить токен</Button>\n          : <div style={{paddingLeft:12}}>✅ Токен предоставлен</div>\n        }\n        {accessToken &&\n          <Div>\n            <Button\n              style={{width:'100%'}}\n              size=\"l\"\n              onClick={() => setStep(s=>s+1)}\n            >Далее</Button>\n          </Div>\n        }\n      </>}\n\n      {step === 2 && !loading && <>\n        <FormItem top=\"Выберите лигу для отображения\">\n          <NativeSelect\n            onChange={e => {\n              const tournamentId = +e.currentTarget.value\n              setActiveTournament(tournamentId)\n              setActiveSiteType(activeLeague!.tournaments.find(t => +t.id === tournamentId)!.siteType)\n            }}\n          >\n            {activeLeague!.tournaments.map(t => {\n              return <option key={t.id} value={t.id}>{t.name}</option>\n            })}\n          </NativeSelect>\n        </FormItem>\n        <FormItem top=\"Выберите тип виджета\">\n          <NativeSelect\n            onChange={changeWidgetType}\n          >\n            {WIDGET_TYPES.map(w => {\n              return <option key={w.id} value={w.id}>{w.name}</option>\n            })}\n          </NativeSelect>\n        </FormItem>\n        \n        <Button\n          before={'⚠️'}\n          mode=\"tertiary\"\n          style={{width:'100%',display:'flex',color:'var(--accent)'}}\n          size=\"l\"\n          onClick={addInGroup}\n        >Убедитесь, что приложение установлено в сообществе</Button>\n        <Div>\n          <Button\n            style={{width:'100%'}}\n            size=\"l\"\n            onClick={addWidget}\n          >Предпросмотр</Button>\n        </Div>\n      </>}\n\n      {step === 3 && !loading && <>\n        <Placeholder\n          icon={<Icon56CheckCircleOutline fill=\"green\"/>}\n        >\n          Виджет установлен <br/><br/>\n          ⚠️ <br/>\n          В данный момент он доступен только администраторам сообщества.\n          Чтобы открыть его для всех, перейдите с компьютера в\n          <Link target=\"_blank\" href={`https://vk.com/club${activeGroup}?act=apps`}> управление сообществом {'>'} приложения </Link>\n          и установите поле <b>Видимость виджета приложения </b> в значение <b>все пользователи</b>\n        </Placeholder>\n      </>}\n    </Panel>\n  )\n}\n\nexport default AddWidgetPanel","import React from 'react';\n\nimport { Button, Div, FormItem, ModalPage, ModalPageHeader, ModalRoot, Slider, Spinner } from '@vkontakte/vkui';\n\nimport { EDIT_GAME_MODAL } from '../constans';\nimport { GameInfo } from '../types/GameInfo';\nimport GameHeader from '../components/Headers/GameHeader';\nimport { useSelector } from 'react-redux';\nimport { requestEditScore, setActiveModal } from '../store/slices/modal';\nimport { RootState } from '../store/rootReducer';\nimport { setEditedGame } from '../store/slices/tournament';\nimport { useAppDispatch } from '../store/store';\n\ninterface GameEditModalProps\n{\n\n}\n\nconst GameEditModal : React.FC<GameEditModalProps> = () => {\n  const dispatch = useAppDispatch()\n\n  const {user} = useSelector((s:RootState) => s.user)\n  const {activeTournament} = useSelector((s:RootState) => s.tournament)\n  const {activeGame : game, activeModal, loading} = useSelector((s:RootState) => s.modal)\n\n  const [homeScore, setHomeScore] = React.useState(0)\n  const [awayScore, setAwayScore] = React.useState(0)\n\n  const closeModal = () => {\n    dispatch(setActiveModal(null))\n  }\n\n  const saveScore = () => {\n    dispatch(requestEditScore({\n      userId : user!.id,\n      tournamentId : activeTournament!.tournamentId,\n      matchHref : game!.matchHref,\n      score : `${homeScore}:${awayScore}`,\n    })).then(_ => {\n      dispatch(setEditedGame({matchHref : game!.matchHref, score : `${homeScore}:${awayScore}`}))\n    })\n  }\n\n  return(\n    <ModalRoot\n      activeModal={activeModal}\n      onClose={closeModal}\n    >\n      <ModalPage\n        id={EDIT_GAME_MODAL}\n        header={<ModalPageHeader>Редактирование</ModalPageHeader>}\n      >\n        {game &&\n          <GameHeader\n            home={{\n              name : game.homeName,\n              href : game.homeHref,\n              logo : game.homeLogo,\n            }}\n            away={{\n              name : game.awayName,\n              href : game.awayHref,\n              logo : game.awayLogo,\n            }}\n            score={`${homeScore}:${awayScore}`}\n          />\n        }\n\n        <Div style={{display:'flex'}}>\n          <FormItem style={{flex:1}}>\n            <Slider\n              disabled={loading}\n              step={1}\n              min={0}\n              max={20}\n              value={homeScore}\n              onChange={s => setHomeScore(+s)}\n            />\n          </FormItem>\n          <FormItem style={{flex:1}}>\n            <Slider\n              disabled={loading}\n              step={1}\n              min={0}\n              max={20}\n              value={awayScore}\n              onChange={s => setAwayScore(+s)}\n            />\n          </FormItem>\n        </Div>\n        <Div>\n          <Button\n            disabled={loading}\n            style={{width:'100%'}}\n            size=\"l\"\n            onClick={saveScore}\n            after={loading ? <Spinner /> : null}\n          >Сохранить</Button>\n        </Div>\n\n      </ModalPage>\n    </ModalRoot>\n  )\n}\n\nexport default GameEditModal","import React from 'react';\n\nimport bridge from '@vkontakte/vk-bridge';\nimport {AppRoot, ConfigProvider, ScreenSpinner, View} from '@vkontakte/vkui';\n\nimport TournamentPanel from './panels/Tournament';\nimport TeamPanel from './panels/Team';\nimport GamePanel from './panels/Game';\nimport TournamentsPanel from './panels/Tournaments';\nimport { useSelector } from 'react-redux';\nimport { RootState } from './store/rootReducer';\nimport { ADD_WIDGET_PANEL, EDIT_GAME_MODAL, GAME_PANEL, LEAGUE_PANEL, TEAM_PANEL, TOURNAMENTS_PANEL, TOURNAMENT_PANEL } from './constans';\nimport { requestTournaments } from './store/slices/tournaments';\nimport { requestUser } from './store/slices/user';\nimport { goBack } from './store/slices/navigation';\nimport { clearActiveGame, goBackToGame } from './store/slices/game';\nimport { clearActiveteam, goBackToTeam } from './store/slices/team';\nimport { clearPredictionsInfo } from './store/slices/predictions';\nimport { setNavigation } from './store/slices/navigation';\nimport { clearActiveTournament, setActiveTab as setActiveTournamentTab } from './store/slices/tournament';\nimport { setActiveTab as setActiveTeamTab } from './store/slices/team';\nimport LeaguePanel from './panels/League';\nimport { useAppDispatch } from './store/store';\nimport { setActiveLeague } from './store/slices/league';\nimport { CityInfo } from './types/CityInfo';\nimport AddWidgetPanel from './panels/AddWidget';\nimport GameEditModal from './modal/GameEdit';\n\nconst App = () => {\n  const dispatch = useAppDispatch()\n  const {activePanel, history} = useSelector((s:RootState) => s.navigation)\n  const {loading : loadingTournaments, cities} = useSelector((s:RootState) => s.tournaments)\n  const {loading : loadingTournament} = useSelector((s:RootState) => s.tournament)\n  const {loading : loadingUser} = useSelector((s:RootState) => s.user)\n  const {activeModal} = useSelector((s:RootState) => s.modal)\n\n  React.useEffect(() => {\n    const initPanels = async (cities : CityInfo[]) => {\n      try\n      {\n        const hash = window.location.hash\n        const {keys} = await bridge.send('VKWebAppStorageGet',{keys:['favorite']})\n        const favorite = keys.find(entrie => entrie.key === 'favorite')\n\n        if(hash)\n        {\n          const id = +hash.slice(1).replace('league','')\n          dispatch(setActiveLeague(cities.find(c => c.id === id)))\n          dispatch(setNavigation({activePanel:LEAGUE_PANEL,history:[TOURNAMENTS_PANEL,LEAGUE_PANEL]}))\n        }\n        else if(favorite && favorite.value !== '')\n        {\n          const id = +favorite.value.replace('league','')\n          dispatch(setActiveLeague(cities.find(c => c.id === id)))\n          dispatch(setNavigation({activePanel:LEAGUE_PANEL,history:[TOURNAMENTS_PANEL,LEAGUE_PANEL]}))\n        }\n      }\n      catch(err){}\n    }\n\n    const initApp = async () => {\n      const userInfo = await bridge.send('VKWebAppGetUserInfo')\n      // const userInfo = {id : 17}\n      dispatch(requestUser(userInfo.id))\n      dispatch(requestTournaments())\n        .then((action) => initPanels(action.payload))\n      bridge.send('VKWebAppEnableSwipeBack').then(res=>res).catch(err=>err)\n    }\n    \n    initApp()\n  },[])\n\n  const goToBack = () => {\n    const currentPanel = history[history.length-1]\n    const newPanel = history[history.length-2]\n    \n    if(currentPanel === 'team')\n    {\n      if(newPanel === 'game') dispatch(goBackToGame())\n\n      dispatch(clearActiveteam())\n    }\n    else if(currentPanel === 'game')\n    {\n      if(newPanel === 'team') dispatch(goBackToTeam())\n\n      dispatch(clearActiveGame())\n      dispatch(clearPredictionsInfo())\n    }\n    \n    if(newPanel === 'league')\n    {\n      dispatch(setActiveTournamentTab(0))\n      dispatch(clearActiveTournament())\n    }\n    else if(newPanel === 'tournament')\n    {\n      dispatch(setActiveTeamTab(0))\n    }\n\n    dispatch(goBack())\n  }\n\n  return (\n    <ConfigProvider isWebView={true}>\n      <AppRoot>\n        <View\n          activePanel={activePanel}\n          onSwipeBack={goToBack}\n          history={history}\n          popout={(loadingTournaments || loadingUser || loadingTournament) && <ScreenSpinner />}\n          modal={activeModal && <GameEditModal />}\n        >\n          <TournamentsPanel id={TOURNAMENTS_PANEL} cities={cities}/>\n          <LeaguePanel id={LEAGUE_PANEL} />\n          <TournamentPanel id={TOURNAMENT_PANEL}/>\n          <GamePanel id={GAME_PANEL}/>\n          <TeamPanel id={TEAM_PANEL}/>\n          <AddWidgetPanel id={ADD_WIDGET_PANEL} />\n        </View>\n      </AppRoot>\n    </ConfigProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './index.sass';\n\nimport bridge from '@vkontakte/vk-bridge'\n\n\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport App from './App';\n\nbridge.send('VKWebAppInit')\nbridge.subscribe(e => {\n  if(e.detail.type === 'VKWebAppUpdateConfig')\n    document.body.setAttribute('scheme', e.detail.data.scheme)\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}