{"version":3,"sources":["constans/index.ts","store/slices/navigation.ts","api/BASE_URL.ts","api/request.ts","api/index.ts","api/games.ts","api/tournaments.ts","api/squads.ts","api/predictions.ts","api/user.ts","api/widget.ts","store/slices/tournaments.ts","store/slices/tournament.ts","store/slices/team.ts","store/slices/game.ts","store/slices/user.ts","store/slices/predictions.ts","store/slices/league.ts","store/rootReducer.ts","store/store.ts","components/Headers/PlainHeader.tsx","components/GamesList/index.tsx","components/Table/TableRow.tsx","utils/getGamesByTour.ts","panels/Tournament/index.tsx","panels/Team/index.tsx","components/Headers/GameHeader.tsx","components/GameInfoTabs/index.tsx","components/EventRow/index.tsx","components/Prediction/index.tsx","panels/Game/index.tsx","utils/nowLessThen.ts","panels/Tournaments/index.tsx","panels/League/index.tsx","panels/AddWidget/index.tsx","App.tsx","index.tsx"],"names":["TOURNAMENTS_PANEL","TOURNAMENT_PANEL","GAME_PANEL","TEAM_PANEL","LEAGUE_PANEL","ADD_WIDGET_PANEL","initialState","activePanel","history","navigationSlice","createSlice","name","reducers","setNavigation","state","action","data","payload","goForward","newPanel","push","goBack","pop","length","actions","BASE_URL","process","request","url","a","fetch","res","json","getGames","gameId","getTournaments","getTournament","tournamentId","siteType","getSquads","clubId","getPredictionsByMatch","matchId","doPrediction","userId","prediction","method","body","JSON","stringify","headers","getUser","id","registerUser","addWidget","user_id","group_id","app_id","access_token","v","site_type","tournament_id","league_id","requestTournaments","createAsyncThunk","api","tournamentsSlice","loading","error","cities","toggleCollapse","map","c","i","collapsed","extraReducers","builder","addCase","pending","rejected","fulfilled","city","requestTournament","tournamentSlice","activeTournamentName","activeTournamentCity","activeSiteType","activeVkHref","activeTournament","activeTab","setActiveTournament","vkHref","clearActiveTournament","setActiveTab","requestSquad","teamSlice","activeTeam","activeTeamSquad","teamHistory","setActiveTeam","clearActiveteam","goForwardToTeam","goBackToTeam","activeGameEvents","activeGameInfo","awayHref","awayLogo","awayName","date","homeHref","homeLogo","homeName","matchHref","place","score","time","tour","gameHistory","requestGame","gameSlice","setActiveGameInfo","clearActiveGame","goForwardToGame","goBackToGame","activeGame","events","sort","b","minute","requestUser","user","userSlice","addPrediction","predictions","requestPredictions","requestDoPrediction","predictionsSlice","predictionsInfo","clearPredictionsInfo","leagueSlice","activeLeague","setActiveLeague","rootReducer","combineReducers","navigation","tournaments","tournament","team","game","league","store","configureStore","reducer","useAppDispatch","useDispatch","PlainHeader","logo","title","href","hrefText","style","display","marginTop","mode","size","src","padding","margin","marginLeft","color","target","GamesList","games","header","teamHref","onGoToGame","background","colors","win","draw","lose","split","s","home","away","disabled","before","marginRight","after","description","TableRow","n","isHeader","isDark","photo","values","onClick","fontWeight","marginBottom","className","value","width","textAlign","fontSize","getGamesByTours","calendar","forEach","TABS","TournamentPanel","dispatch","useSelector","goToGame","console","log","left","tab","selected","table","goToTeam","points","Object","entries","results","reverse","TeamPanel","filter","g","GameHeader","onGoToTeam","GameInfoTabs","refery","EventRow","isHome","playerName","eventType","Prediction","variants","onPrediction","userPrediction","canPredict","React","useState","activeVariant","setActiveVariant","flexDirection","variant","predict","over","under","toFixed","GamePanel","loadingPrediction","activeTeamTab","setActiveTeamTab","setUserPrediction","now","Date","d","m","y","h","min","getTime","nowLessThen","useEffect","includes","replace","find","p","req","abort","noInformation","squads","some","then","_","e","eventSymbol","type","player","GROUP_ID","GROUP_HREF","TournamentsPanel","IS_ANDROID","window","location","snackbar","setSnackbar","openSnackbar","text","backgroundColor","fill","height","onClose","separator","document","createElement","click","remove","justifyContent","alignItems","bridge","send","catch","err","LeaguePanel","goToBack","t","goToTournament","APP_ID","VERSION","AddWidgetPanel","step","setStep","setLoading","setError","activeGroup","setActiveGroup","groups","setGroups","accessToken","setAccessToken","requestGroups","scope","params","extended","fields","response","items","error_data","createMatch","team_a","team_b","slice","matches","code","requestToken","addInGroup","top","onChange","currentTarget","group","paddingLeft","icon","App","loadingTournaments","loadingTournament","loadingUser","initPanels","hash","userInfo","initApp","isWebView","onSwipeBack","currentPanel","setActiveTournamentTab","popout","Tournaments","League","Tournament","Game","Team","AddWidget","subscribe","detail","setAttribute","scheme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.f1d17ec0.chunk.js","sourcesContent":["export const TOURNAMENTS_PANEL = 'tournaments'\r\nexport const TOURNAMENT_PANEL = 'tournament'\r\nexport const GAME_PANEL = 'game'\r\nexport const TEAM_PANEL = 'team'\r\nexport const LEAGUE_PANEL = 'league'\r\nexport const ADD_WIDGET_PANEL = 'add_widget'","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { \r\n  ADD_WIDGET_PANEL,\r\n  GAME_PANEL, \r\n  LEAGUE_PANEL, \r\n  TEAM_PANEL, \r\n  TOURNAMENTS_PANEL, \r\n  TOURNAMENT_PANEL \r\n} from \"../../constans\";\r\n\r\ntype Panel = \r\n  | typeof TOURNAMENTS_PANEL \r\n  | typeof TOURNAMENT_PANEL \r\n  | typeof GAME_PANEL \r\n  | typeof TEAM_PANEL\r\n  | typeof LEAGUE_PANEL\r\n  | typeof ADD_WIDGET_PANEL\r\n\r\ninterface NavigationState\r\n{\r\n  activePanel : Panel\r\n  history : Panel[]\r\n}\r\n\r\nconst initialState : NavigationState = {\r\n  activePanel : TOURNAMENTS_PANEL,\r\n  history : [TOURNAMENTS_PANEL]\r\n}\r\n\r\nconst navigationSlice = createSlice({\r\n  name : 'navigation',\r\n  initialState,\r\n  reducers : {\r\n    setNavigation(state, action)\r\n    {\r\n      const data = action.payload\r\n      state.activePanel = data.activePanel\r\n      state.history = data.history\r\n    },\r\n    goForward(state, action)\r\n    {\r\n      const newPanel = action.payload\r\n      state.activePanel = newPanel\r\n      state.history.push(newPanel)\r\n    },\r\n    goBack(state)\r\n    {\r\n      state.history.pop()\r\n      const newPanel = state.history[state.history.length - 1]\r\n      state.activePanel = newPanel!\r\n    },\r\n  }\r\n})\r\n\r\nexport const {goBack, goForward, setNavigation} = navigationSlice.actions\r\nexport default navigationSlice.reducer","export const BASE_URL = process.env.REACT_APP_SERVER_URL\r\n// export const BASE_URL = 'http://localhost:5000'","export const request = async (url : string) => {\r\n  const res = await fetch(url)\r\n  return res.json()\r\n}","import {getGames} from './games'\r\nimport {getTournaments, getTournament} from './tournaments'\r\nimport {getSquads} from './squads'\r\nimport {getPredictionsByMatch,doPrediction} from './predictions'\r\nimport {getUser, registerUser} from './user'\r\nimport {addWidget} from './widget'\r\n\r\nexport default {\r\n  getGames,\r\n  getTournaments,\r\n  getTournament,\r\n  getSquads,\r\n  getPredictionsByMatch,\r\n  doPrediction,\r\n  getUser,\r\n  registerUser,\r\n  addWidget,\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getGames = async (gameId : number) => {\r\n  const url = `${BASE_URL}/games/${gameId}`\r\n\r\n  return await request(url)\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getTournaments = async () => {\r\n  const url = `${BASE_URL}/tournaments`\r\n\r\n  return await request(url)\r\n}\r\n\r\nexport const getTournament = async ({tournamentId,siteType} : {tournamentId : number, siteType : number}) => {\r\n  const url = `${BASE_URL}/tournaments/${tournamentId}/${siteType}`\r\n  return await request(url)\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getSquads = async ({tournamentId, clubId} : {tournamentId:string,clubId:string}) => {\r\n  const url = `${BASE_URL}/squads/${tournamentId}/${clubId}`\r\n\r\n  return await request(url)\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getPredictionsByMatch = async (matchId : number) => {\r\n  const url = `${BASE_URL}/predictions/${matchId}`\r\n\r\n  return await request(url)\r\n}\r\n\r\nexport const doPrediction = async ({\r\n  matchId, \r\n  userId,\r\n  prediction\r\n} : {\r\n  matchId:number,\r\n  userId:number,\r\n  prediction : 0 | 1\r\n}) => {\r\n  const url = `${BASE_URL}/predictions`\r\n\r\n  const res = await fetch(url,{\r\n    method : 'POST',\r\n    body : JSON.stringify({matchId, userId, prediction}),\r\n    headers : {'Content-Type': 'application/json;charset=utf-8'}\r\n  })\r\n\r\n  return res.json()\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\nimport { request } from \"./request\"\r\n\r\nexport const getUser = async (id : number) => {\r\n  const url = `${BASE_URL}/users/${id}`\r\n\r\n  return await request(url)\r\n}\r\n\r\nexport const registerUser = async (id : number) => {\r\n  const url = `${BASE_URL}/users/${id}`\r\n\r\n  const res = await fetch(url,{\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json;charset=utf-8' }\r\n  })\r\n\r\n  return await res.json()\r\n}","import { BASE_URL } from \"./BASE_URL\"\r\n\r\nexport const addWidget = async ({\r\n  user_id,\r\n  group_id,\r\n  app_id,\r\n  access_token,\r\n  v,\r\n  site_type,\r\n  tournament_id,\r\n  league_id,\r\n} : {\r\n  user_id : number,\r\n  group_id: number,\r\n  app_id: number,\r\n  access_token: string,\r\n  v: string,\r\n  site_type: number,\r\n  tournament_id : number,\r\n  league_id : number,\r\n}) => {\r\n  const url = `${BASE_URL}/widgets`\r\n  const res = await fetch(url,{\r\n    method : 'PUT',\r\n    body: JSON.stringify({user_id,group_id,app_id,access_token,v,site_type,tournament_id,league_id}),\r\n    headers : {'Content-Type': 'application/json;charset=utf-8'}\r\n  })\r\n\r\n  return await res.json()\r\n}","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { CityInfo } from \"../../types/CityInfo\"\r\n\r\ninterface TournamentsState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  cities : (CityInfo & {collapsed : boolean})[]\r\n}\r\n\r\nconst initialState : TournamentsState = {\r\n  loading : false,\r\n  error : false,\r\n  cities : []\r\n}\r\n\r\nexport const requestTournaments = createAsyncThunk('tournaments/request', api.getTournaments)\r\n\r\nconst tournamentsSlice = createSlice({\r\n  name : 'tournaments',\r\n  initialState,\r\n  reducers : {\r\n    toggleCollapse(state,action)\r\n    {\r\n      state.cities = state.cities.map((c,i) => {\r\n        if(i === action.payload)\r\n        {\r\n          return {...c, collapsed : !c.collapsed}\r\n        }\r\n\r\n        return c\r\n      })\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestTournaments.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestTournaments.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestTournaments.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n        state.cities = (action.payload as CityInfo[]).map(city => ({...city, collapsed : true}))\r\n      })\r\n  },\r\n})\r\n\r\nexport const {toggleCollapse} = tournamentsSlice.actions\r\nexport default tournamentsSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport api from \"../../api\";\r\n\r\nimport { TournamentInfo } from \"../../types/TournamentInfo\";\r\n\r\ninterface TournamentState\r\n{\r\n  activeTournamentName : string\r\n  activeTournamentCity : string\r\n  activeSiteType : number\r\n  activeVkHref : string\r\n  activeTournament : TournamentInfo | null\r\n  activeTab : number\r\n\r\n  loading : boolean\r\n  error : boolean\r\n}\r\n\r\nconst initialState : TournamentState = {\r\n  loading : false,\r\n  error : false,\r\n\r\n  activeTournamentName : '',\r\n  activeTournamentCity : '',\r\n  activeSiteType : 0,\r\n  activeVkHref : '',\r\n  activeTournament : null,\r\n  activeTab : 0\r\n}\r\n\r\nexport const requestTournament = createAsyncThunk('tournament/request', api.getTournament)\r\n\r\nconst tournamentSlice = createSlice({\r\n  name : 'tournament',\r\n  initialState,\r\n  reducers : {\r\n    setActiveTournament(state,action)\r\n    {\r\n      const activeTournament = action.payload\r\n      state.activeTournamentName = activeTournament.name\r\n      // state.activeTournament = activeTournament.data\r\n      state.activeSiteType = activeTournament.siteType\r\n      state.activeVkHref = activeTournament.vkHref\r\n      state.activeTournamentCity = activeTournament.city\r\n    },\r\n    clearActiveTournament(state)\r\n    {\r\n      state.activeTournament = null\r\n      state.activeTournamentName = ''\r\n    },\r\n    setActiveTab(state,action)\r\n    {\r\n      state.activeTab = action.payload\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestTournament.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestTournament.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestTournament.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n\r\n        const activeTournament = action.payload\r\n        state.activeTournament = activeTournament\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  clearActiveTournament,\r\n  setActiveTournament,\r\n  setActiveTab,\r\n} = tournamentSlice.actions\r\nexport default tournamentSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { ClubInfo } from \"../../types/ClubInfo\"\r\nimport { SquadInfo } from \"../../types/SquadInfo\"\r\n\r\ninterface TeamState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  activeTeamSquad : SquadInfo[]\r\n  activeTab : number\r\n  \r\n  activeTeam : ClubInfo | null\r\n  teamHistory : ClubInfo[]\r\n}\r\n\r\nconst initialState : TeamState = {\r\n  loading : false,\r\n  error : false,\r\n  activeTeam : null,\r\n  activeTeamSquad: [],\r\n  teamHistory : [],\r\n  activeTab : 0,\r\n}\r\n\r\nexport const requestSquad = createAsyncThunk(\r\n  'squad/request',\r\n  ({ tournamentId,clubId }: { tournamentId: string, clubId: string}) => {\r\n    return api.getSquads({tournamentId,clubId})\r\n  }\r\n)\r\n\r\nconst teamSlice = createSlice({\r\n  name : 'team',\r\n  initialState,\r\n  reducers : {\r\n    setActiveTeam(state,action)\r\n    {\r\n      state.activeTeam = action.payload\r\n    },\r\n    clearActiveteam(state)\r\n    {\r\n      state.activeTeam = null\r\n      state.activeTeamSquad = []\r\n    },\r\n    goForwardToTeam(state)\r\n    {\r\n      state.teamHistory.push(state.activeTeam!)\r\n    },\r\n    goBackToTeam(state)\r\n    {\r\n      if(state.teamHistory.length === 0) return\r\n\r\n      const activeTeam = state.teamHistory.pop()!\r\n      state.activeTeam = activeTeam\r\n    },\r\n    setActiveTab(state,action)\r\n    {\r\n      state.activeTab = action.payload\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestSquad.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestSquad.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestSquad.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n\r\n        const activeTeamSquad = action.payload\r\n        state.activeTeamSquad = activeTeamSquad\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  clearActiveteam,\r\n  setActiveTeam,\r\n  setActiveTab,\r\n\r\n  goForwardToTeam,\r\n  goBackToTeam,\r\n} = teamSlice.actions\r\nexport default teamSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\nimport api from \"../../api\"\r\nimport { GameEvents } from \"../../types/GameEvents\"\r\nimport { GameInfo } from \"../../types/GameInfo\"\r\n\r\n\r\n\r\ninterface GameHistoryRecord\r\n{\r\n  activeGameInfo : GameInfo\r\n  activeGameEvents : GameEvents | null  \r\n}\r\n\r\ninterface GameState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  activeGameInfo : GameInfo\r\n  activeGameEvents : GameEvents | null\r\n  gameHistory : GameHistoryRecord[]\r\n}\r\n\r\nconst initialState : GameState = {\r\n  loading : false,\r\n  error : false,\r\n  activeGameEvents : null,\r\n  activeGameInfo : {\r\n    awayHref: \"\",\r\n    awayLogo: \"\",\r\n    awayName: \"\",\r\n    date: \"-\",\r\n    homeHref: \"\",\r\n    homeLogo: \"\",\r\n    homeName: \"\",\r\n    matchHref: \"\",\r\n    place: \"-\",\r\n    score: \"-:-\",\r\n    time: \"-\",\r\n    tour: 1,\r\n  },\r\n  gameHistory : [],\r\n}\r\n\r\nexport const requestGame = createAsyncThunk(\r\n  'game/request',\r\n  (gameId : number) => api.getGames(gameId)\r\n)\r\n\r\nconst gameSlice = createSlice({\r\n  name : 'game',\r\n  initialState,\r\n  reducers : {\r\n    setActiveGameInfo(state,action)\r\n    {\r\n      state.activeGameInfo = action.payload\r\n    },\r\n    clearActiveGame(state)\r\n    {\r\n      state.activeGameInfo = initialState.activeGameInfo\r\n      state.activeGameEvents = null\r\n    },\r\n    goForwardToGame(state)\r\n    {\r\n      state.gameHistory.push({\r\n        activeGameEvents : state.activeGameEvents,\r\n        activeGameInfo : state.activeGameInfo,\r\n      })\r\n    },\r\n    goBackToGame(state)\r\n    {\r\n      if(state.gameHistory.length === 0) return\r\n      \r\n      const activeGame = state.gameHistory.pop()!\r\n\r\n      state.activeGameEvents = activeGame.activeGameEvents\r\n      state.activeGameInfo = activeGame.activeGameInfo\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestGame.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestGame.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestGame.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n\r\n        const activeGameEvents = action.payload\r\n        state.activeGameEvents = activeGameEvents\r\n        state.activeGameEvents!.events.sort((a,b) => a.minute - b.minute)\r\n      })\r\n  },\r\n})\r\n\r\nexport const {\r\n  setActiveGameInfo,\r\n  goBackToGame,\r\n  goForwardToGame,\r\n  clearActiveGame,\r\n} = gameSlice.actions\r\nexport default gameSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { User } from \"../../types/User\"\r\n\r\ninterface UserState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  user : User | null\r\n}\r\n\r\nconst initialState : UserState = {\r\n  loading : false,\r\n  error : false,\r\n  user : null\r\n}\r\n\r\nexport const requestUser = createAsyncThunk(\r\n  'user/request',\r\n  async (userId : number) => {\r\n    const user = await api.getUser(userId)\r\n    if(user) return user\r\n\r\n    const res = await api.registerUser(userId)\r\n    return res\r\n  }\r\n)\r\n\r\nconst userSlice = createSlice({\r\n  name : 'user',\r\n  initialState,\r\n  reducers : {\r\n    addPrediction(state,action)\r\n    {\r\n      state.user!.predictions.push(action.payload)\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestUser.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestUser.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestUser.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n        state.user = action.payload\r\n      })\r\n  },\r\n})\r\n\r\nexport const { addPrediction } = userSlice.actions\r\nexport default userSlice.reducer","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport api from \"../../api\"\r\n\r\nimport { PredictionInfo } from \"../../types/PredictionInfo\"\r\n\r\ninterface PredictionsState\r\n{\r\n  loading : boolean\r\n  error : boolean\r\n  predictionsInfo : PredictionInfo | null\r\n}\r\n\r\nconst initialState : PredictionsState = {\r\n  loading : false,\r\n  error : false,\r\n  predictionsInfo : null\r\n}\r\n\r\nexport const requestPredictions = createAsyncThunk(\r\n  'predictions/get',\r\n  (matchId : number) => api.getPredictionsByMatch(matchId)\r\n)\r\n\r\nexport const requestDoPrediction = createAsyncThunk(\r\n  'predictions/do',\r\n  ({ matchId, userId, prediction }: { matchId: number, userId: number, prediction : 0 | 1 }) => {\r\n    return api.doPrediction({ matchId, userId, prediction })\r\n  }\r\n)\r\n\r\nconst predictionsSlice = createSlice({\r\n  name : 'predictions',\r\n  initialState,\r\n  reducers : {\r\n    clearPredictionsInfo(state)\r\n    {\r\n      state.predictionsInfo = null\r\n    },\r\n  },\r\n  extraReducers(builder)\r\n  {\r\n    builder\r\n      .addCase(requestPredictions.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestPredictions.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestPredictions.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n        state.predictionsInfo = action.payload\r\n      })\r\n\r\n      .addCase(requestDoPrediction.pending, state => {\r\n        state.loading = true\r\n        state.error = false\r\n      })\r\n      .addCase(requestDoPrediction.rejected, state => {\r\n        state.loading = false\r\n        state.error = true\r\n      })\r\n      .addCase(requestDoPrediction.fulfilled, (state, action) => {\r\n        state.loading = false\r\n        state.error = false\r\n      })\r\n  },\r\n})\r\n\r\nexport const {clearPredictionsInfo} = predictionsSlice.actions\r\nexport default predictionsSlice.reducer","import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nimport {CityInfo} from '../../types/CityInfo'\r\n\r\ninterface leagueState\r\n{\r\n  activeLeague : CityInfo | null\r\n}\r\n\r\nconst initialState : leagueState = {\r\n  activeLeague : null\r\n}\r\n\r\nconst leagueSlice = createSlice({\r\n  name : 'league',\r\n  initialState,\r\n  reducers : {\r\n    setActiveLeague(state,action)\r\n    {\r\n      state.activeLeague = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {setActiveLeague} = leagueSlice.actions\r\nexport default leagueSlice.reducer","import { combineReducers } from \"@reduxjs/toolkit\"\r\n\r\nimport navigation from './slices/navigation'\r\nimport tournaments from './slices/tournaments'\r\nimport tournament from './slices/tournament'\r\nimport team from './slices/team'\r\nimport game from './slices/game'\r\nimport user from './slices/user'\r\nimport predictions from './slices/predictions'\r\nimport league from './slices/league'\r\n\r\nconst rootReducer = combineReducers({\r\n  navigation,\r\n  tournaments,\r\n  tournament,\r\n  team,\r\n  game,\r\n  user,\r\n  predictions,\r\n  league,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\nexport default rootReducer","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport { useDispatch } from \"react-redux\"\r\n\r\nimport rootReducer from './rootReducer'\r\n\r\nconst store = configureStore({ reducer: rootReducer })\r\n\r\nexport const useAppDispatch = () => useDispatch<typeof store.dispatch>()\r\nexport default store","import React from 'react';\r\n\r\nimport {Avatar, Div, Link} from '@vkontakte/vkui';\r\nimport { Icon24Globe } from '@vkontakte/icons';\r\n\r\ninterface PlainHeaderProps\r\n{\r\n  logo ?: string\r\n  title : string\r\n  league ?: string\r\n  city ?: string\r\n  href ?: string\r\n  hrefText ?: string\r\n}\r\n\r\nconst PlainHeader : React.FC<PlainHeaderProps> = ({\r\n  logo,\r\n  title,\r\n  city,\r\n  href,\r\n  hrefText,\r\n}) => {\r\n  return(\r\n    <Div style={{display:'flex',marginTop:12}}>\r\n      {logo && <Avatar mode=\"image\" size={74} src={logo}/>}\r\n      <div>\r\n        <h3 style={{padding:0, margin:0, marginLeft: logo ? 8 : 0}}>{title}</h3>\r\n        <h5 style={{padding:0, margin:0,marginTop:4,marginLeft: logo ? 8 : 0,color:'gray'}}>{city}</h5>\r\n        {href && <Link target=\"_blank\" style={{marginLeft:logo ? 8 : 0}} href={href}>{hrefText}</Link>}\r\n      </div>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default PlainHeader","import React from 'react';\r\n\r\nimport {\r\n  Group, \r\n  Avatar, \r\n  Cell, \r\n  Header, \r\n  Counter,\r\n} from '@vkontakte/vkui';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\n\r\ninterface GamesListProps\r\n{\r\n  games : GameInfo[]\r\n  header ?: string\r\n  teamHref ?: string\r\n  onGoToGame ?: (game : GameInfo) => void\r\n}\r\n\r\nconst GamesList : React.FC<GamesListProps> = ({\r\n  games,\r\n  header,\r\n  teamHref,\r\n  onGoToGame,\r\n}) => {\r\n  return(\r\n    <Group\r\n      header={header && <Header>{header}</Header>}\r\n    >\r\n      {games.map((game,i) => {\r\n        let background = ''\r\n        if(teamHref)\r\n        {\r\n          const colors = {\r\n            win:'var(--button_commerce_background)',\r\n            draw:'orange',\r\n            lose:'var(--button_secondary_destructive_foreground)'\r\n          }\r\n          const [home, away] = game.score.split(':').map(s=>+s)\r\n\r\n          if(home > away)\r\n            background = teamHref === game.homeHref ? colors.win : colors.lose\r\n          else if(home < away)\r\n            background = teamHref === game.homeHref ? colors.lose : colors.win\r\n          else\r\n            background = colors.draw\r\n        }\r\n\r\n        return <Cell\r\n          // disabled={!onGoToGame || (game.date === '-' && !game.score)}\r\n          disabled={true}\r\n          key={i}\r\n          before={<div style={{display:'flex',marginRight:8,}}>\r\n            <Avatar mode=\"image\" src={game.homeLogo}/>\r\n            <Avatar mode=\"image\" src={game.awayLogo}/>\r\n          </div>}\r\n          after={game.score && <Counter mode=\"primary\" style={{padding:4,background}}>{game.score}</Counter>}\r\n          description={game.date && game.date !== '-' && \r\n            <div>\r\n              <div>{game.date}, {game.time}</div>\r\n              {game.place !== '-' && <div>{game.place}</div>}\r\n            </div>\r\n          }\r\n          // onClick={() => onGoToGame && onGoToGame(game)}\r\n        ><div><div>{game.homeName}</div><div>{game.awayName}</div></div></Cell>\r\n      })}\r\n    </Group>\r\n  )\r\n}\r\n\r\nexport default GamesList","import React from 'react';\r\nimport './Table.sass';\r\n\r\nimport {Avatar, Cell} from '@vkontakte/vkui';\r\n\r\ninterface TableRowProps\r\n{\r\n  title : string\r\n  n ?: number\r\n  description ?: string\r\n  isHeader ?: boolean\r\n  isDark ?: boolean\r\n  colors : string[]\r\n  values : string[]\r\n  photo ?: string\r\n  onClick ?: () => void\r\n}\r\n\r\nconst TableRow : React.FC<TableRowProps> = ({\r\n  n,\r\n  isHeader,\r\n  isDark,\r\n  photo,\r\n  colors,\r\n  values,\r\n  title,\r\n  description,\r\n  onClick,\r\n}) => {\r\n  return(\r\n    <Cell\r\n      style={{\r\n        fontWeight: isHeader ? 'bold' : 'normal',\r\n        background : isDark ? 'var(--background_keyboard)' : '',\r\n        marginBottom : 4,\r\n      }}\r\n      before={photo &&\r\n        <div className=\"photo\">\r\n          {n && <div className=\"photo__place\">{n}</div>}\r\n          <Avatar mode=\"image\" src={photo}/>\r\n        </div>\r\n      }\r\n      after={<div style={{padding:4,display:'flex',}}>\r\n        {values.map((value, i) => {\r\n          return <div\r\n            key={i}\r\n            style={{color:colors[i], marginRight:4, width:14, textAlign:'center', fontSize:14}}\r\n          >{value}</div>\r\n        })}\r\n        </div>}\r\n      disabled={!onClick}\r\n      onClick={onClick}\r\n      description={description}\r\n    >{title}</Cell>\r\n  )\r\n}\r\n\r\nexport default TableRow","import { GameInfo } from \"../types/GameInfo\";\r\n\r\nexport const getGamesByTours =  (calendar : GameInfo[]) : {[tour : string] : GameInfo[]} => {\r\n  const data : {[tour : string] : GameInfo[]} = {}\r\n\r\n  calendar.forEach(game => {\r\n    if(!data[game.tour])\r\n    {\r\n      data[game.tour] = []\r\n    }\r\n\r\n    data[game.tour].push(game)\r\n  })\r\n\r\n  return data\r\n}","import React from 'react';\r\n\r\nimport {\r\n  Cell,\r\n  HorizontalScroll, \r\n  List, \r\n  Panel, \r\n  PanelHeader, \r\n  PanelHeaderBack, \r\n  Tabs, \r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { clearActiveTournament, setActiveTab } from '../../store/slices/tournament';\r\nimport { requestSquad, setActiveTeam} from '../../store/slices/team';\r\nimport { setActiveGameInfo } from '../../store/slices/game';\r\n\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport GamesList from '../../components/GamesList';\r\nimport TableRow from '../../components/Table/TableRow';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\n\r\nimport { getGamesByTours } from '../../utils/getGamesByTour';\r\nimport { GAME_PANEL, TEAM_PANEL } from '../../constans';\r\n\r\ninterface TournamentPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst TABS = [ 'Таблица', 'Расписание', 'Результаты']\r\n\r\nconst TournamentPanel : React.FC<TournamentPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const {activeTournament,activeTournamentName,activeTournamentCity,activeTab,activeSiteType,activeVkHref} = useSelector((s:RootState) => s.tournament)\r\n\r\n  const goToTeam = (team : ClubInfo) => {\r\n    dispatch(setActiveTeam(team))\r\n    dispatch(goForward(TEAM_PANEL))\r\n  }\r\n\r\n  const goToGame = (game : GameInfo) => {\r\n    console.log(game)\r\n    if(game.date === '-' && !game.score) return\r\n    \r\n    dispatch(setActiveGameInfo(game))\r\n    dispatch(goForward(GAME_PANEL))\r\n  }\r\n\r\n  const goToTournaments = () => {\r\n    dispatch(goBack())\r\n    dispatch(clearActiveTournament())\r\n    dispatch(setActiveTab(0))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToTournaments} />}\r\n      >Турнир</PanelHeader>\r\n      \r\n      <PlainHeader\r\n        hrefText={'Сайт'}\r\n        href={activeSiteType === 0\r\n            ? `https://lfl.ru/tournament${activeTournament?.tournamentId}`\r\n            : `https://www.goalstream.org/season/${activeTournament?.tournamentId}`\r\n        }\r\n        title={activeTournamentName}\r\n        city={activeTournamentCity}\r\n      />\r\n      <HorizontalScroll>\r\n        <Tabs mode=\"buttons\">\r\n          {TABS.map((tab,i) => {\r\n            return <TabsItem\r\n              key={i}\r\n              selected={activeTab === i}\r\n              onClick={() => dispatch(setActiveTab(i))}\r\n            >{tab}</TabsItem>\r\n          })}\r\n        </Tabs>\r\n      </HorizontalScroll>\r\n\r\n      \r\n      {activeTab === 0 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n            isHeader={true}\r\n            title={'Команда'}\r\n            values={['И','В','Н','П','О']}\r\n            colors={['','green','orange','red']}\r\n          />\r\n          {\r\n            activeTournament.table.map((team,i) => {\r\n              if(team.title === '') return\r\n\r\n              return team.title\r\n                ? <Cell\r\n                    key={i}\r\n                    disabled\r\n                    style={{fontWeight:'bold'}}\r\n                  >{team.title}</Cell>\r\n                : <TableRow\r\n                    key={i}\r\n                    n={team.place}\r\n                    title={team.name}\r\n                    photo={team.logo}\r\n                    onClick={() => goToTeam(team)}\r\n                    values={[team.win+team.draw+team.lose,team.win,team.draw,team.lose,team.points].map(n=>''+n)}\r\n                    colors={['','green','orange','red']}\r\n                    isDark={i % 2 === 0}\r\n                  />\r\n            })\r\n          }\r\n        </List>\r\n      }\r\n\r\n      {activeTab === 1 && activeTournament &&\r\n        Object.entries(getGamesByTours(activeTournament.calendar))\r\n          .map(([tour, games],i) => {\r\n            return <GamesList\r\n              key={i}\r\n              header={`${tour} ТУР`}\r\n              games={games}\r\n              onGoToGame={goToGame} // !!!!\r\n            />\r\n          })\r\n      }\r\n\r\n      {activeTab === 2 && activeTournament &&\r\n        Object.entries(getGamesByTours(activeTournament.results)).reverse()\r\n          .map(([tour, games],i) => {\r\n            return <GamesList\r\n              key={i}\r\n              header={`${tour} ТУР`}\r\n              games={games}\r\n              onGoToGame={goToGame}\r\n            />\r\n          })\r\n      }\r\n\r\n      {/* {activeTab === 3 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n              isHeader={true}\r\n              title={'Игрок'}\r\n              values={['Г']}\r\n              colors={[]}\r\n            />\r\n          {\r\n            activeTournament.strikers.map((player,i) => {\r\n              return <TableRow\r\n                key={i}\r\n                n={i+1}\r\n                title={player.playerName}\r\n                photo={player.playerPhoto}\r\n                description={player.teamName}\r\n                values={[''+player.points]}\r\n                colors={[]}\r\n                isDark={i % 2 === 0}\r\n              />\r\n            })\r\n          }\r\n        </List>\r\n      }\r\n\r\n      {activeTab === 4 && activeTournament &&\r\n        <List>\r\n          <TableRow\r\n              isHeader={true}\r\n              title={'Игрок'}\r\n              values={['А']}\r\n              colors={[]}\r\n            />\r\n          {\r\n            activeTournament.assistents.map((player,i) => {\r\n              return <TableRow\r\n                key={i}\r\n                n={i+1}\r\n                title={player.playerName}\r\n                photo={player.playerPhoto}\r\n                description={player.teamName}\r\n                values={[''+player.points]}\r\n                colors={[]}\r\n                isDark={i % 2 === 0}\r\n              />\r\n            })\r\n          }\r\n        </List>\r\n      } */}\r\n\r\n\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TournamentPanel","import React from 'react';\r\n\r\n\r\nimport {\r\n  Div,\r\n  Group,\r\n  HorizontalScroll,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Spinner,\r\n  Tabs,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { clearActiveteam, goForwardToTeam,setActiveTab } from '../../store/slices/team';\r\nimport { goBackToGame, setActiveGameInfo } from '../../store/slices/game';\r\n\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport GamesList from '../../components/GamesList';\r\nimport TableRow from '../../components/Table/TableRow';\r\n\r\nimport { GameInfo } from '../../types/GameInfo';\r\n\r\nimport { GAME_PANEL } from '../../constans';\r\n\r\ninterface TeamPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\n// const TABS = [ 'Расписание', 'Результаты', 'Состав' ]\r\nconst TABS = [ 'Расписание', 'Результаты']\r\n\r\nconst TeamPanel : React.FC<TeamPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const { activeTeamSquad, loading, activeTeam, activeTab } = useSelector((s:RootState) => s.team)\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeTournament,activeTournamentCity,activeTournamentName} = useSelector((s:RootState) => s.tournament)\r\n\r\n  const goToBack = () => {\r\n    const isToGame = history[history.length-2] === 'game'\r\n    if(isToGame) dispatch(goBackToGame())\r\n\r\n    dispatch(goBack())\r\n    dispatch(clearActiveteam())\r\n  }\r\n\r\n  const goToGame = (game : GameInfo) => {\r\n    if(game.date === '-' && !game.score) return\r\n\r\n    dispatch(goForwardToTeam())\r\n    dispatch(setActiveGameInfo(game))\r\n    dispatch(goForward(GAME_PANEL))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Команда</PanelHeader>\r\n\r\n      {activeTeam && <>\r\n        <PlainHeader\r\n          logo={activeTeam.logo}\r\n          title={activeTeam.name}\r\n          city={activeTournamentCity}\r\n        />\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => dispatch(setActiveTab(i))}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      </>}\r\n\r\n      \r\n      {activeTab === 0 && activeTeam &&\r\n        <GamesList\r\n          games={activeTournament!.calendar.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {activeTab === 1 && activeTeam &&\r\n        <GamesList\r\n          teamHref={activeTeam.href}\r\n          games={activeTournament!.results.filter(g => g.homeHref === activeTeam.href || g.awayHref === activeTeam.href )}\r\n          onGoToGame={goToGame}\r\n        />\r\n      }\r\n\r\n      {/* {activeTab === 2 && activeTeam &&\r\n        <Group>\r\n          <TableRow\r\n            isHeader={true}\r\n            title={'Игрок'}\r\n            values={['И', 'Г','А','Ж','К']}\r\n            colors={['','green','gray','orange','red']}\r\n          />\r\n          {\r\n            loading\r\n              ? <Div><Spinner/></Div>\r\n              : activeTeamSquad.map((player,i) => {\r\n                return <TableRow\r\n                  key={i}\r\n                  title={player.playerName}\r\n                  photo={player.playerPhoto}\r\n                  description={player.amplua}\r\n                  values={[player.games,player.goals,player.assists,player.yc,player.rc].map(n=>''+n)}\r\n                  colors={['','green','gray','orange','red']}\r\n                  isDark={i % 2 === 0}\r\n                />\r\n              })\r\n          }\r\n        </Group>\r\n      } */}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TeamPanel","import React from 'react';\r\nimport './Headers.sass'\r\n\r\nimport {Avatar, Div} from '@vkontakte/vkui';\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\n\r\ninterface Team\r\n{\r\n  logo : string\r\n  href : string\r\n  name : string\r\n}\r\n\r\ninterface GameHeaderProps\r\n{\r\n  home : Team\r\n  away : Team\r\n  score : string\r\n  onGoToTeam : (team : ClubInfo) => void\r\n}\r\n\r\nconst GameHeader : React.FC<GameHeaderProps> = ({\r\n  home,\r\n  away,\r\n  score,\r\n  onGoToTeam,\r\n}) => {\r\n  const goToTeam = (team : Team) => onGoToTeam(team as ClubInfo)\r\n\r\n  return(\r\n    <Div className=\"game-header__container\">\r\n      <div className=\"game-header__item\"\r\n        onClick={() => goToTeam(home)}\r\n      >\r\n        <Avatar size={82} mode=\"image\" src={home.logo} />\r\n        <div style={{textAlign:'center'}}>{home.name}</div>\r\n      </div>\r\n      <div className=\"game-header__item\">{score}</div>\r\n      <div className=\"game-header__item\"\r\n        onClick={() => goToTeam(away)}\r\n      >\r\n        <Avatar size={82} mode=\"image\" src={away.logo} />\r\n        <div style={{textAlign:'center'}}>{away.name}</div>\r\n      </div>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default GameHeader","import React from 'react';\r\nimport './GameInfoTabs.sass'\r\n\r\nimport {HorizontalScroll, Tabs, TabsItem} from '@vkontakte/vkui';\r\nimport { Icon28GlobeOutline, Icon28AdvertisingOutline, Icon28CalendarOutline } from '@vkontakte/icons';\r\ninterface GameInfoTabsProps\r\n{\r\n  date : string | null\r\n  refery : string | null\r\n  place : string | null\r\n}\r\n\r\nconst GameInfoTabs : React.FC<GameInfoTabsProps> = ({\r\n  date,\r\n  refery,\r\n  place,\r\n}) => {\r\n  return(\r\n    <HorizontalScroll>\r\n      <Tabs mode=\"buttons\">\r\n        {date && \r\n          <TabsItem selected={true} className=\"game-info__item\">\r\n            <Icon28CalendarOutline/><div>{date}</div>\r\n          </TabsItem>\r\n        }\r\n        {place && \r\n          <TabsItem selected={true} className=\"game-info__item\">\r\n            <Icon28GlobeOutline/><div>{place}</div>\r\n          </TabsItem>\r\n        }\r\n        {refery && \r\n          <TabsItem selected={true} className=\"game-info__item\">\r\n            <Icon28AdvertisingOutline/><div>{refery}</div>\r\n          </TabsItem>\r\n        }\r\n      </Tabs>\r\n    </HorizontalScroll>\r\n  )\r\n}\r\n\r\nexport default GameInfoTabs","import React from 'react';\r\nimport './EventRow.sass'\r\n\r\ninterface EventRowProps\r\n{\r\n  isHome : boolean\r\n  playerName : string\r\n  eventType : string\r\n  minute : number\r\n}\r\n\r\nconst EventRow : React.FC<EventRowProps> = ({\r\n  isHome,\r\n  playerName,\r\n  eventType,\r\n  minute,\r\n}) => {\r\n  return(\r\n    <div className=\"events__row\">\r\n      <div className=\"events__player\">{minute !== 0 && !isHome ? minute : ''}{isHome && playerName}</div>\r\n      <div className=\"events__type\">{eventType}</div>\r\n      <div className=\"events__player\">{!isHome && playerName}{minute !== 0 && isHome ? minute : ''}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EventRow","import React from 'react';\r\nimport './Prediction.sass';\r\n\r\nimport { Card, Div, Header, Spinner } from '@vkontakte/vkui';\r\nimport { PredictionInfo } from '../../types/PredictionInfo';\r\nimport { Icon12Verified } from '@vkontakte/icons';\r\n\r\ninterface PredictionProps\r\n{\r\n  title : string\r\n  variants : string[]\r\n  onPrediction : (variant : 0 | 1) => void\r\n  loading : boolean\r\n  predictionsInfo : PredictionInfo | null\r\n  userPrediction : 0 | 1 | null\r\n  canPredict : boolean\r\n}\r\n\r\nconst Prediction : React.FC<PredictionProps> = ({\r\n  title,\r\n  variants,\r\n  onPrediction,\r\n  loading,\r\n  predictionsInfo,\r\n  userPrediction,\r\n  canPredict,\r\n}) => {\r\n  const [activeVariant, setActiveVariant] = React.useState<0 | 1 | null>(userPrediction)\r\n  const doPrediction = (predict : 0|1) => {\r\n    if(loading || userPrediction !== null || !canPredict) return\r\n\r\n    setActiveVariant(predict)\r\n    onPrediction(predict)\r\n  }\r\n\r\n  return(\r\n    <Div>\r\n      <Card style={{display:'flex',flexDirection:'column'}}>\r\n        <Header>{title}</Header>\r\n        {loading\r\n          ? <Div><Spinner/></Div>\r\n          : <Div>\r\n            {variants.map((variant,i) => {\r\n              return <div\r\n                key={i}\r\n                className=\"prediction__btn\"\r\n                onClick={() => doPrediction(i as 0|1)}\r\n                style={{background : (!canPredict || userPrediction !== null) ? 'rgba(0,0,0,0.3)' : ''}}\r\n              >\r\n                <div className=\"prediction__variant\">\r\n                  {variant}\r\n                  {predictionsInfo && ` - ${i === 0 ? predictionsInfo.over : predictionsInfo.under}`}                  \r\n                </div>\r\n                {predictionsInfo &&\r\n                  <div className=\"prediction__stat\">\r\n                    {(userPrediction==i || activeVariant === i) && <Icon12Verified/>}\r\n                    {predictionsInfo.over + predictionsInfo.under === 0\r\n                      ? 0\r\n                      : (([predictionsInfo.over,predictionsInfo.under][i]/(predictionsInfo.over + predictionsInfo.under))*100).toFixed(0)\r\n                    }%\r\n                  </div>\r\n                }\r\n              </div>\r\n            })}\r\n          </Div>\r\n        }\r\n\r\n      </Card>\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default Prediction","import React from 'react';\r\n\r\nimport {\r\n  Cell,\r\n  Div,\r\n  HorizontalScroll,\r\n  List,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Spinner,\r\n  Tabs,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport { goBackToTeam, requestSquad, setActiveTeam } from '../../store/slices/team';\r\nimport { clearActiveGame, goForwardToGame, requestGame } from '../../store/slices/game';\r\nimport {useAppDispatch} from '../../store/store';\r\n\r\nimport GameHeader from '../../components/Headers/GameHeader';\r\nimport GameInfoTabs from '../../components/GameInfoTabs';\r\nimport EventRow from '../../components/EventRow';\r\n\r\nimport { TEAM_PANEL } from '../../constans';\r\n\r\nimport { ClubInfo } from '../../types/ClubInfo';\r\nimport Prediction from '../../components/Prediction';\r\nimport { requestDoPrediction, requestPredictions, clearPredictionsInfo } from '../../store/slices/predictions';\r\nimport { addPrediction } from '../../store/slices/user';\r\nimport { nowLessThen } from '../../utils/nowLessThen';\r\n\r\ninterface GamePanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst TABS = [ 'События', 'Составы',]\r\n\r\nconst GamePanel : React.FC<GamePanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n  const {history} = useSelector((s:RootState) => s.navigation)\r\n  const {activeGameInfo,activeGameEvents,loading} = useSelector((s:RootState) => s.game)\r\n  const {activeTournament} = useSelector((s:RootState) => s.tournament)\r\n  const {user} = useSelector((s:RootState) => s.user)\r\n  const {predictionsInfo, loading : loadingPrediction} = useSelector((s:RootState) => s.predictions)\r\n\r\n  const [activeTab, setActiveTab] = React.useState(0)\r\n  const [activeTeamTab, setActiveTeamTab] = React.useState(0)\r\n  const [userPrediction, setUserPrediction] = React.useState<0|1|null>(null)\r\n\r\n  const canPredict = nowLessThen(\r\n    activeGameInfo.date.split(' ')[0].split('.').map(s=>+s),\r\n    activeGameInfo.time.split(':').map(s=>+s)\r\n  )\r\n\r\n  const goToBack = () => {\r\n    const isToTeam = history[history.length-2] === 'team'\r\n    if(isToTeam) dispatch(goBackToTeam())\r\n    \r\n    dispatch(goBack())\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n  }\r\n\r\n  const goToTeam = (team : ClubInfo) => {\r\n    const tournamentId = activeTournament!.tournamentId\r\n    const clubId = team.href.replace('/club','')\r\n\r\n    dispatch(goForwardToGame())\r\n    \r\n    dispatch(setActiveTeam(team))\r\n    dispatch(goForward(TEAM_PANEL))\r\n\r\n    dispatch(clearActiveGame())\r\n    dispatch(clearPredictionsInfo())\r\n\r\n    dispatch(requestSquad({tournamentId, clubId}))\r\n  }\r\n\r\n  const doPredict = (prediction : 0 | 1) => {\r\n    const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\r\n    dispatch(addPrediction({matchId, prediction}))\r\n    dispatch(requestDoPrediction({ matchId, prediction, userId : user!.id, }))\r\n      .then(_ => dispatch(requestPredictions(matchId)))\r\n    setUserPrediction(prediction)\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if(activeGameEvents) return\r\n\r\n    if(activeGameInfo.matchHref.includes('/empty_protocol'))\r\n    {\r\n      const matchId = +activeGameInfo.matchHref.replace('/match','').replace('/empty_protocol','')\r\n      const prediction = user!.predictions.find(p => p.matchId === matchId)\r\n      if(prediction)\r\n      {\r\n        setUserPrediction(prediction.prediction)\r\n      }\r\n\r\n      if(!canPredict || !!prediction)\r\n        dispatch(requestPredictions(matchId))\r\n      return\r\n    }\r\n\r\n    const req = dispatch(requestGame(+activeGameInfo.matchHref.replace('/match','')))\r\n    return () => {\r\n      req.abort()\r\n    }\r\n  },[])\r\n\r\n  const home = {\r\n    name : activeGameInfo.homeName,\r\n    href : activeGameInfo.homeHref,\r\n    logo : activeGameInfo.homeLogo,\r\n  }\r\n  \r\n  const away = {\r\n    name : activeGameInfo.awayName,\r\n    href : activeGameInfo.awayHref,\r\n    logo : activeGameInfo.awayLogo,\r\n  }\r\n\r\n  const noInformation = activeGameEvents && !activeGameEvents.squads.some(s => s.length > 0)\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Матч</PanelHeader>\r\n\r\n      <GameHeader\r\n        home={home}\r\n        away={away}\r\n        score={!activeGameInfo.score ? '-:-' : activeGameInfo.score}\r\n        onGoToTeam={goToTeam}\r\n      />\r\n\r\n      <GameInfoTabs\r\n        date={activeGameInfo.date !== '-' ? `${activeGameInfo.date}, ${activeGameInfo.time}` : null}\r\n        refery={activeGameEvents && activeGameEvents.refery !== '-' ? activeGameEvents.refery : null}\r\n        place={activeGameEvents && activeGameEvents.place !== '-' ? activeGameEvents.place : null}\r\n      />\r\n\r\n      {!loading && !noInformation && activeGameInfo.score &&\r\n        <HorizontalScroll>\r\n          <Tabs mode=\"buttons\">\r\n            {TABS.map((tab,i) => {\r\n              return <TabsItem\r\n                key={i}\r\n                selected={activeTab === i}\r\n                onClick={() => setActiveTab(i)}\r\n              >{tab}</TabsItem>\r\n            })}\r\n          </Tabs>\r\n        </HorizontalScroll>\r\n      }\r\n      \r\n      {!activeGameInfo.score &&\r\n        <Prediction\r\n          canPredict={canPredict}\r\n          userPrediction={userPrediction}\r\n          predictionsInfo={predictionsInfo}\r\n          loading={loadingPrediction}\r\n          title=\"Количество голов\"\r\n          variants={['Больше 7', 'Не больше 7']}\r\n          onPrediction={doPredict}\r\n        />\r\n      }\r\n\r\n      {noInformation && <Placeholder>Нет информации</Placeholder>}\r\n      \r\n      {loading && <Div><Spinner/></Div>}\r\n\r\n\r\n      {!loading && activeTab === 0 && activeGameEvents &&\r\n        activeGameEvents.events.map((e,i) => {\r\n          let eventSymbol = ''\r\n          if(e.type === 'goal') eventSymbol = '⚽'\r\n          else if(e.type === 'assist') eventSymbol = '✅'\r\n          else if(e.type === 'yc') eventSymbol = '🟨'\r\n          else eventSymbol = '🟥'\r\n          \r\n          return <EventRow\r\n            key={i}\r\n            playerName={e.name}\r\n            eventType={eventSymbol}\r\n            isHome={e.team === 0}\r\n            minute={e.minute}\r\n          />\r\n        })\r\n      }\r\n\r\n      {!loading && activeTab === 1 && <>\r\n        <Tabs mode=\"buttons\">\r\n          {[activeGameInfo.homeName,activeGameInfo.awayName].map((team,i) => {\r\n            return <TabsItem\r\n              key={i}\r\n              selected={activeTeamTab === i}\r\n              onClick={() => setActiveTeamTab(i)}\r\n            >{team}</TabsItem>\r\n          })}\r\n        </Tabs>\r\n        <List>\r\n          {activeGameEvents &&\r\n            activeGameEvents.squads[activeTeamTab].map((player,i) => {\r\n              return <Cell\r\n                disabled\r\n                key={i}\r\n                description={activeGameInfo[activeTeamTab === 0 ? 'homeName' : 'awayName']}\r\n              >{player.name}</Cell>\r\n            })\r\n          }\r\n        </List>\r\n      </>}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default GamePanel","export const nowLessThen = (date : number[], time : number[]) : boolean => {\r\n  const now = Date.now()\r\n\r\n  const [d,m,y] = date\r\n  const [h,min] = time\r\n  const gameTime = new Date(y,m-1,d,h,min).getTime()\r\n\r\n  return now <= gameTime\r\n}","import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Cell,\r\n  Div,\r\n  Header,\r\n  List,\r\n  Panel,\r\n  PanelHeader,\r\n  Snackbar,\r\n  usePlatform,\r\n} from '@vkontakte/vkui';\r\nimport { \r\n  Icon28ChevronRightOutline, \r\n  Icon28ChevronDownOutline,\r\n  Icon28FavoriteCircleFillYellow,\r\n  Icon28AddCircleFillBlue,\r\n  Icon28ReplyCircleFillGreen,\r\n  Icon28Users3Outline,\r\n  Icon16DoneCircle,\r\n  Icon28HomeOutline\r\n} from '@vkontakte/icons';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { goForward } from '../../store/slices/navigation';\r\nimport { requestTournament, setActiveTournament } from '../../store/slices/tournament';\r\n\r\nimport { LEAGUE_PANEL, TOURNAMENT_PANEL } from '../../constans';\r\n\r\nimport { CityInfo } from '../../types/CityInfo';\r\nimport { Tournament } from '../../types/Tournament';\r\nimport { toggleCollapse } from '../../store/slices/tournaments';\r\nimport { setActiveLeague } from '../../store/slices/league';\r\n\r\ninterface TournamentsPanelProps\r\n{\r\n  id : string\r\n  cities : (CityInfo & {collapsed : boolean})[]\r\n}\r\n\r\nconst GROUP_ID = 202380422\r\nconst GROUP_HREF = `https://vk.com/club${GROUP_ID}`\r\n\r\nconst TournamentsPanel : React.FC<TournamentsPanelProps> = ({\r\n  id,\r\n  cities,\r\n}) => {\r\n  const IS_ANDROID = window.location.href.includes('mobile_android')\r\n  const dispatch = useDispatch()\r\n\r\n  const goToLeague = (league : CityInfo) => {\r\n    dispatch(goForward(LEAGUE_PANEL))\r\n    dispatch(setActiveLeague(league))\r\n  }\r\n\r\n  const [snackbar, setSnackbar] = React.useState<React.ReactElement | null>(null)\r\n  const openSnackbar = (text : string) => {\r\n    setSnackbar(\r\n      <Snackbar\r\n        before={\r\n          <Avatar size={24} style={{backgroundColor:'var(--accent)'}}>\r\n            <Icon16DoneCircle fill=\"#fff\" width={14} height={14} />\r\n          </Avatar>\r\n        }\r\n        onClose={() => setSnackbar(null)}\r\n      >{text}</Snackbar>\r\n    )\r\n  }\r\n\r\n  const addToFavourite = () => {\r\n    bridge.send('VKWebAppAddToFavorites')\r\n      .then(_=>openSnackbar('Успешно добавлено !'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const joinToGroup = () => {\r\n    bridge.send('VKWebAppJoinGroup',{group_id:GROUP_ID})\r\n      .then(_=>openSnackbar('Вы вступили. Спасибо!'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const goToGroup = () => {\r\n    let a = document.createElement('a')\r\n    a.href = GROUP_HREF\r\n    a.target = '_blank'\r\n    a.click()\r\n    a.remove()\r\n  }\r\n\r\n  const share = () => {\r\n    bridge.send('VKWebAppShare')\r\n      .then(res=>res)\r\n      .catch(err=>err)\r\n  }\r\n\r\n  const addToHomeScreen = () => {\r\n    bridge.send('VKWebAppAddToHomeScreen')\r\n      .then(_=>openSnackbar('Успешно добавлено !'))\r\n      .catch(err=>err)\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader separator={false}>Главная</PanelHeader>\r\n      \r\n      <Header style={{marginTop:8}}>Информация</Header>\r\n      <Div>\r\n        <Card>\r\n          <Div>\r\n            <div style={{display:'flex'}}>\r\n              <Button\r\n                style={{marginBottom:8,width:'100%',display:'flex',marginRight:8}}\r\n                size=\"l\"\r\n                before={<Icon28Users3Outline/>}\r\n                onClick={goToGroup}\r\n              >Группа</Button>\r\n              <Button\r\n                style={{marginBottom:8,display:'flex',justifyContent:'center',alignItems:'center'}}\r\n                size=\"l\"\r\n                before={<Icon28AddCircleFillBlue/>}\r\n                onClick={joinToGroup}\r\n              />\r\n            </div>\r\n            <Button\r\n              style={{marginBottom:8,width:'100%',display:'flex',}}\r\n              size=\"l\"\r\n              before={<Icon28FavoriteCircleFillYellow/>}\r\n              onClick={addToFavourite}\r\n            >Добавить в избранное</Button>\r\n            <Button\r\n              style={{marginBottom:IS_ANDROID?8:0,width:'100%',display:'flex',}}\r\n              size=\"l\"\r\n              before={<Icon28ReplyCircleFillGreen/>}\r\n              onClick={share}\r\n            >Поделиться</Button>\r\n            {IS_ANDROID &&\r\n              <Button\r\n                style={{marginBottom:0,width:'100%',display:'flex',}}\r\n                size=\"l\"\r\n                onClick={addToHomeScreen}\r\n                before={<Icon28HomeOutline/>}\r\n              >На дом. экран</Button>\r\n            }\r\n          </Div>\r\n        </Card>\r\n      </Div>\r\n\r\n      <Header>Турниры</Header>\r\n      {/* {cities.map((city, i) => {\r\n        return <Div key={i} style={{paddingBottom: i===cities.length-1 ? 12 : 0}}>\r\n          <Card>\r\n            <div\r\n              onClick={() => dispatch(toggleCollapse(i))}\r\n              style={{display:'flex',padding:8}}\r\n            >\r\n              <div style={{display:'flex',flex:1,alignItems:'center',}}>\r\n                <Avatar mode=\"image\" size={32} src={city.tournaments[0].logo}/>\r\n                &nbsp;&nbsp;<div style={{flex:1}}>{city.title}</div>\r\n              </div>\r\n              <Icon28ChevronDownOutline\r\n                style={{color:'var(--accent)',transform : `rotate(${city.collapsed ? '0deg' : '180deg'})`}}\r\n              />\r\n            </div>\r\n            {!city.collapsed &&\r\n              <List>\r\n                {city.tournaments.map((t,i) => {\r\n                  return <Cell\r\n                    key={i}\r\n                    after={<Icon28ChevronRightOutline/>}\r\n                    onClick={() => goToTournament(t)}\r\n                  >{t.name}</Cell>\r\n                })}\r\n              </List>\r\n            }\r\n          </Card>\r\n        </Div>\r\n      })} */}\r\n      {cities.map((city,i) => {\r\n        return <Cell\r\n          key={i}\r\n          before={<Avatar size={32} mode=\"image\" src={city.tournaments[0].logo} />}\r\n          after={<Icon28ChevronRightOutline/>}\r\n          onClick={() => goToLeague(city)}\r\n        >{city.title}</Cell>\r\n      })}\r\n\r\n      {snackbar}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default TournamentsPanel","import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {\r\n  Avatar,\r\n  Cell,\r\n  CellButton,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Snackbar,\r\n} from '@vkontakte/vkui';\r\nimport { Icon16DoneCircle, Icon28ChevronRightOutline,Icon24Copy, Icon24Add } from '@vkontakte/icons';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack, goForward } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\n\r\nimport { ADD_WIDGET_PANEL, TOURNAMENT_PANEL } from '../../constans';\r\nimport PlainHeader from '../../components/Headers/PlainHeader';\r\nimport { requestTournament, setActiveTournament } from '../../store/slices/tournament';\r\nimport { Tournament } from '../../types/Tournament';\r\n\r\ninterface LeaguePanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst LeaguePanel : React.FC<LeaguePanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const {activeLeague} = useSelector((s:RootState) => s.league)\r\n\r\n  const goToBack = () => {\r\n    dispatch(goBack())\r\n  }\r\n\r\n  const goToTournament = (t : Tournament) => {\r\n    dispatch(goForward(TOURNAMENT_PANEL))\r\n    dispatch(setActiveTournament(t))\r\n    dispatch(requestTournament({tournamentId : +t.id, siteType : t.siteType }))\r\n  }\r\n\r\n  const [snackbar, setSnackbar] = React.useState<React.ReactElement | null>(null)\r\n  const openSnackbar = (text : string) => {\r\n    setSnackbar(\r\n      <Snackbar\r\n        before={\r\n          <Avatar size={24} style={{backgroundColor:'var(--accent)'}}>\r\n            <Icon16DoneCircle fill=\"#fff\" width={14} height={14} />\r\n          </Avatar>\r\n        }\r\n        onClose={() => setSnackbar(null)}\r\n      >{text}</Snackbar>\r\n    )\r\n  }\r\n\r\n  const copyLink = () => {\r\n    bridge.send('VKWebAppCopyText',{text:`https://vk.com/app7746401#league${activeLeague!.id}`})\r\n      .then(_ => openSnackbar('Скопировано'))\r\n      .catch(e=>e)\r\n  }\r\n\r\n  const goToAddWidget = () => {\r\n    dispatch(goForward(ADD_WIDGET_PANEL))\r\n  }\r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToBack} />}\r\n      >Лига</PanelHeader>\r\n\r\n      {activeLeague\r\n        ? <>\r\n\r\n            <PlainHeader\r\n              href={activeLeague.vkHref}\r\n              hrefText={'Группа'}\r\n              logo={activeLeague.tournaments[0].logo}\r\n              title={activeLeague.title}\r\n            />\r\n\r\n            {activeLeague.tournaments.map((t,i) => {\r\n              return <Cell\r\n                key={i}\r\n                after={<Icon28ChevronRightOutline/>}\r\n                onClick={() => goToTournament(t)}\r\n              >{t.name}</Cell>\r\n            })}\r\n\r\n            <CellButton\r\n              before={<Icon24Copy/>}\r\n              onClick={copyLink}\r\n            >&nbsp;&nbsp;Скопировать ссылку на лигу</CellButton>\r\n            <CellButton\r\n              before={<Icon24Add/>}\r\n              onClick={goToAddWidget}\r\n            >&nbsp;&nbsp;Добавить виджет в группу</CellButton>\r\n          </>\r\n        : <Placeholder>Ничего не найдено. Попробуйте найти турнир в\r\n          <span\r\n            style={{color:'var(--accent)'}}\r\n            onClick={goToBack}\r\n          > списке</span>\r\n        </Placeholder>\r\n      }\r\n\r\n      {snackbar}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default LeaguePanel","import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge'\r\nimport {\r\n  Button,\r\n  Div,\r\n  FormItem,\r\n  Gallery,\r\n  Link,\r\n  NativeSelect,\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  Placeholder,\r\n  Spinner,\r\n} from '@vkontakte/vkui';\r\nimport { Icon56CheckCircleOutline } from '@vkontakte/icons';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { goBack } from '../../store/slices/navigation';\r\nimport { RootState } from '../../store/rootReducer';\r\nimport api from '../../api';\r\nimport { TournamentInfo } from '../../types/TournamentInfo';\r\n\r\ninterface AddWidgetPanelProps\r\n{\r\n  id : string\r\n}\r\n\r\nconst APP_ID = 7746401\r\nconst VERSION = '5.126'\r\n\r\nconst AddWidgetPanel : React.FC<AddWidgetPanelProps> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const {user} = useSelector((s:RootState) => s.user)\r\n  // const user = {id:612381684}\r\n  const {activeLeague} = useSelector((s:RootState) => s.league)\r\n\r\n  const goToLeague = () => {\r\n    dispatch(goBack())\r\n  }\r\n\r\n  const [step, setStep] = React.useState(0)\r\n\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [error, setError] = React.useState('')\r\n\r\n  const [activeGroup, setActiveGroup] = React.useState<number|null>(null)\r\n  const [activeTournament, setActiveTournament] = React.useState<number>(+activeLeague!.tournaments[0].id)\r\n  const [groups,setGroups] = React.useState<{id:number,name:string,photo_50:string}[]>([])\r\n  const [accessToken,setAccessToken] = React.useState('')\r\n  const [appInGroup,setAppInGroup] = React.useState(false)\r\n  \r\n  const requestGroups = async () => {\r\n    try\r\n    {\r\n      setLoading(true)\r\n      const {access_token} = await bridge.send('VKWebAppGetAuthToken',{app_id:APP_ID,scope:'groups'})\r\n      const res = await bridge.send('VKWebAppCallAPIMethod', {\r\n        method : 'groups.get', params : {user_id : user!.id,filter:'admin',extended:1,fields:'name',access_token,v:VERSION}\r\n      })\r\n      setLoading(false)\r\n\r\n      const groups = res.response.items\r\n      if(groups.length === 0)\r\n      {\r\n        setError('У вас нет администрируемых групп')\r\n        setStep(-1)\r\n      }\r\n      else\r\n      {\r\n        setGroups(groups)\r\n        setActiveGroup(groups[0].id)\r\n        setStep(s=>s+1)\r\n      }\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n    finally\r\n    {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const changeGroup = (e : React.FormEvent<HTMLSelectElement>) => {\r\n    if(accessToken) setAccessToken('')\r\n    setActiveGroup(+e.currentTarget.value)\r\n  }\r\n\r\n  const changeTournament = (e : React.FormEvent<HTMLSelectElement>) => {\r\n    setActiveTournament(+e.currentTarget.value)\r\n  }\r\n\r\n  const addWidget = async () => {\r\n    setLoading(true)\r\n    try\r\n    {\r\n      const tournament : TournamentInfo = await api.getTournament({\r\n        tournamentId:activeTournament!,\r\n        siteType:activeLeague!.tournaments[0].siteType,\r\n      })\r\n\r\n      const createMatch = ({\r\n        date, home, away, score\r\n      } : {\r\n        date : string,\r\n        home : string,\r\n        away : string,\r\n        score : number[]\r\n      }) => {\r\n        return {\r\n          state : date,\r\n          team_a : { name : home },\r\n          team_b : { name : away },\r\n          score : { team_a : score[0], team_b : score[1] }\r\n        }\r\n      }\r\n\r\n      const games = tournament.calendar.length !== 0 ? tournament.calendar.slice(0,4) : tournament.results.slice(0,4)\r\n      const matches = JSON.stringify(games.map(game => {\r\n        const score = !game.score ? [0,0] : game.score.split(':').map(s=>+s)\r\n        return createMatch({\r\n          date:`${game.date.replace('.2021','').replace('.2020','').replace(' ','')}, ${game.time}`,\r\n          home:game.homeName,\r\n          away:game.awayName,\r\n          score,\r\n        })\r\n      }) )\r\n\r\n      const code = `\r\n            return {\r\n              \"title\": \"Матчи\",\r\n              \"title_url\": \"https://vk.com/app7746401#league${activeLeague?.id}\",\r\n              \"more\": \"Весь список\",\r\n              \"more_url\": \"https://vk.com/app7746401#league${activeLeague?.id}\",\r\n              \"matches\": ${matches}\r\n            };\r\n          `\r\n\r\n      await bridge.send('VKWebAppShowCommunityWidgetPreviewBox',{group_id : activeGroup!, type : 'matches', code,})\r\n\r\n      await api.addWidget({\r\n        user_id : user!.id,\r\n        group_id : activeGroup!,\r\n        app_id : APP_ID,\r\n        access_token : accessToken,\r\n        v : VERSION,\r\n        league_id : activeLeague!.id,\r\n        tournament_id : activeTournament!,\r\n        site_type : activeLeague!.tournaments[0].siteType\r\n      })\r\n      setStep(s=>s+1)\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n    finally\r\n    {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const requestToken = async () => {\r\n    try\r\n    {\r\n      const {access_token} = await bridge.send(\"VKWebAppGetCommunityToken\", {\r\n        app_id : APP_ID,\r\n        group_id : activeGroup!,\r\n        scope:'app_widget'\r\n      })\r\n      setAccessToken(access_token)\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('ERROR : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n  }\r\n\r\n  const addInGroup = async () => {\r\n    try\r\n    {\r\n      await bridge.send('VKWebAppAddToCommunity')\r\n    }\r\n    catch(e)\r\n    {\r\n      console.log('Error : ', e, e.error_data)\r\n      setError('')\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // React.useEffect(() => {\r\n  //   const app_id = 7746401\r\n  //   const group_id = 202380422\r\n  //   const v = '5.126'\r\n  //   const trying = async () => {\r\n  //     try\r\n  //     {\r\n  //       const {access_token} = await bridge.send(\"VKWebAppGetCommunityToken\", {app_id,group_id,scope:'app_widget'})\r\n        \r\n  //       const createMatch = ({\r\n  //         date, home, away, score\r\n  //       } : {\r\n  //         date : string,\r\n  //         home : string,\r\n  //         away : string,\r\n  //         score : number[]\r\n  //       }) => {\r\n  //         return {\r\n  //           state : date,\r\n  //           team_a : { name : home },\r\n  //           team_b : { name : away },\r\n  //           score : { team_a : score[0], team_b : score[1] }\r\n  //         }\r\n  //       }\r\n\r\n  //       const code = `\r\n  //             return {\r\n  //               \"title_counter\" : 10,\r\n  //               \"title\": \"Name of widget\",\r\n  //               \"title_url\": \"https://vk.com/app123456#source=from_title\",\r\n  //               \"more\": \"Весь список\",\r\n  //               \"more_url\": \"https://vk.com/app123456#source=from_footer\",\r\n  //               \"matches\": ${JSON.stringify([\r\n  //                 createMatch({date:'15.01.21 (пн), 20:45',home:'HOME1',away:'AWAY AWAY AWAY 1',score:[5,3]}),\r\n  //                 createMatch({date:'15 февраля 2021, пн, 20:99',home:'Home sdds fsd2',away:'away2',score:[3,4]})\r\n  //               ])}\r\n  //             };\r\n  //           `\r\n\r\n  //       await bridge.send('VKWebAppShowCommunityWidgetPreviewBox',{\r\n  //         group_id, type : 'matches', code,\r\n  //       })\r\n\r\n  //       // await bridge.send('VKWebAppCallAPIMethod',{\r\n  //       //   method : 'appWidgets.update',\r\n  //       //   params : {\r\n  //       //     v,\r\n  //       //     access_token,\r\n  //       //     type : 'matches',\r\n  //       //     code,\r\n  //       //   }\r\n  //       // })\r\n  //     }\r\n  //     catch(e)\r\n  //     {\r\n  //       console.log('ERROR : ',e.error_data)\r\n  //     }\r\n  //   }\r\n\r\n  //   // trying()\r\n  // },[])\r\n\r\n  \r\n\r\n  return(\r\n    <Panel id={id}>\r\n      <PanelHeader\r\n        left={<PanelHeaderBack onClick={goToLeague} />}\r\n      >Виджет</PanelHeader>\r\n\r\n      {loading && <Div style={{marginTop:28}}><Spinner/></Div>}\r\n      {error && <h1>Error :(</h1>}\r\n\r\n      {step === 0 && !loading && <>\r\n        <Placeholder\r\n          action={<Button onClick={requestGroups} mode=\"tertiary\">Запросить группы</Button>}\r\n        >\r\n          Необходимо выбрать группу, в которую будет установлен виджет.\r\n          Для получения списка групп понадобится токен доступа.\r\n        </Placeholder>\r\n      </>}\r\n\r\n      {step === 1 && <>\r\n        <FormItem top=\"Выберите группу\">\r\n          <NativeSelect\r\n            onChange={changeGroup}\r\n          >\r\n            {groups.map(group => {\r\n              return <option key={group.id} value={group.id}>{group.name}</option>\r\n            })}\r\n          </NativeSelect>\r\n        </FormItem>\r\n        {!accessToken\r\n          ? <Button\r\n              before={'❌'}\r\n              mode=\"tertiary\"\r\n              style={{width:'100%',display:'flex',color:'var(--accent)'}}\r\n              size=\"l\"\r\n              onClick={requestToken}\r\n            >Предоставить токен</Button>\r\n          : <div style={{paddingLeft:12}}>✅ Токен предоставлен</div>\r\n        }\r\n        {accessToken &&\r\n          <Div>\r\n            <Button\r\n              style={{width:'100%'}}\r\n              size=\"l\"\r\n              onClick={() => setStep(s=>s+1)}\r\n            >Далее</Button>\r\n          </Div>\r\n        }\r\n      </>}\r\n\r\n      {step === 2 && <>\r\n          <FormItem top=\"Выберите лигу для отображения\">\r\n          <NativeSelect\r\n            onChange={changeTournament}\r\n          >\r\n            {activeLeague!.tournaments.map(t => {\r\n              return <option key={t.id} value={t.id}>{t.name}</option>\r\n            })}\r\n          </NativeSelect>\r\n        </FormItem>\r\n        \r\n        <Button\r\n          before={'⚠️'}\r\n          mode=\"tertiary\"\r\n          style={{width:'100%',display:'flex',color:'var(--accent)'}}\r\n          size=\"l\"\r\n          onClick={addInGroup}\r\n        >Убедитесь, что приложение установлено в сообществе</Button>\r\n        <Div>\r\n          <Button\r\n            style={{width:'100%'}}\r\n            size=\"l\"\r\n            onClick={addWidget}\r\n          >Предпросмотр</Button>\r\n        </Div>\r\n      </>}\r\n\r\n      {step === 3 && !loading && <>\r\n        <Placeholder\r\n          icon={<Icon56CheckCircleOutline fill=\"green\"/>}\r\n        >\r\n          Виджет установлен <br/><br/>\r\n          ⚠️ <br/>\r\n          В данный момент он доступен только администраторам сообщества.\r\n          Чтобы открыть его для всех, перейдите с компьютера в\r\n          <Link target=\"_blank\" href={`https://vk.com/club${activeGroup}?act=apps`}> управление сообществом {'>'} приложения </Link>\r\n          и установите поле <b>Видимость виджета приложения </b> в значение <b>все пользователи</b>\r\n        </Placeholder>\r\n      </>}\r\n    </Panel>\r\n  )\r\n}\r\n\r\nexport default AddWidgetPanel","import React from 'react';\r\n\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport {AdaptivityProvider, AppRoot, ConfigProvider, ScreenSpinner, View} from '@vkontakte/vkui';\r\n\r\nimport TournamentPanel from './panels/Tournament';\r\nimport TeamPanel from './panels/Team';\r\nimport GamePanel from './panels/Game';\r\nimport TournamentsPanel from './panels/Tournaments';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from './store/rootReducer';\r\nimport { ADD_WIDGET_PANEL, GAME_PANEL, LEAGUE_PANEL, TEAM_PANEL, TOURNAMENTS_PANEL, TOURNAMENT_PANEL } from './constans';\r\nimport { requestTournaments } from './store/slices/tournaments';\r\nimport { requestUser } from './store/slices/user';\r\nimport { goBack } from './store/slices/navigation';\r\nimport { clearActiveGame, goBackToGame } from './store/slices/game';\r\nimport { clearActiveteam, goBackToTeam } from './store/slices/team';\r\nimport { clearPredictionsInfo } from './store/slices/predictions';\r\nimport { setNavigation } from './store/slices/navigation';\r\nimport { clearActiveTournament, setActiveTab as setActiveTournamentTab } from './store/slices/tournament';\r\nimport { setActiveTab as setActiveTeamTab } from './store/slices/team';\r\nimport LeaguePanel from './panels/League';\r\nimport { useAppDispatch } from './store/store';\r\nimport { setActiveLeague } from './store/slices/league';\r\nimport { CityInfo } from './types/CityInfo';\r\nimport AddWidgetPanel from './panels/AddWidget';\r\n\r\nconst App = () => {\r\n  const dispatch = useAppDispatch()\r\n  const {activePanel, history} = useSelector((s:RootState) => s.navigation)\r\n  const {loading : loadingTournaments, cities} = useSelector((s:RootState) => s.tournaments)\r\n  const {loading : loadingTournament} = useSelector((s:RootState) => s.tournament)\r\n  const {loading : loadingUser} = useSelector((s:RootState) => s.user)\r\n\r\n  React.useEffect(() => {\r\n    const initPanels = (cities : CityInfo[]) => {\r\n      const hash = window.location.hash\r\n      if(hash)\r\n      {\r\n        const id = +hash.slice(1).replace('league','')\r\n        dispatch(setActiveLeague(cities.find(c => c.id === id)))\r\n        dispatch(setNavigation({activePanel:LEAGUE_PANEL,history:[TOURNAMENTS_PANEL,LEAGUE_PANEL]}))\r\n      }\r\n    }\r\n\r\n    const initApp = async () => {\r\n      const userInfo = await bridge.send('VKWebAppGetUserInfo')\r\n      // const userInfo = {id : 17}\r\n      dispatch(requestUser(userInfo.id))\r\n      dispatch(requestTournaments())\r\n        .then((action) => initPanels(action.payload))\r\n      bridge.send('VKWebAppEnableSwipeBack').then(res=>res).catch(err=>err)\r\n    }\r\n    \r\n    initApp()\r\n  },[])\r\n\r\n  const goToBack = () => {\r\n    const currentPanel = history[history.length-1]\r\n    const newPanel = history[history.length-2]\r\n    \r\n    if(currentPanel === 'team')\r\n    {\r\n      if(newPanel === 'game') dispatch(goBackToGame())\r\n\r\n      dispatch(clearActiveteam())\r\n    }\r\n    else if(currentPanel === 'game')\r\n    {\r\n      if(newPanel === 'team') dispatch(goBackToTeam())\r\n\r\n      dispatch(clearActiveGame())\r\n      dispatch(clearPredictionsInfo())\r\n    }\r\n    \r\n    if(newPanel === 'league')\r\n    {\r\n      dispatch(setActiveTournamentTab(0))\r\n      dispatch(clearActiveTournament())\r\n    }\r\n    else if(newPanel === 'tournament')\r\n    {\r\n      dispatch(setActiveTeamTab(0))\r\n    }\r\n\r\n    dispatch(goBack())\r\n  }\r\n\r\n  return (\r\n    <ConfigProvider isWebView={true}>\r\n      <AppRoot>\r\n        <View\r\n          activePanel={activePanel}\r\n          onSwipeBack={goToBack}\r\n          history={history}\r\n          popout={(loadingTournaments || loadingUser || loadingTournament) && <ScreenSpinner />}\r\n        >\r\n          <TournamentsPanel id={TOURNAMENTS_PANEL} cities={cities}/>\r\n          <LeaguePanel id={LEAGUE_PANEL} />\r\n          <TournamentPanel id={TOURNAMENT_PANEL}/>\r\n          <GamePanel id={GAME_PANEL}/>\r\n          <TeamPanel id={TEAM_PANEL}/>\r\n          <AddWidgetPanel id={ADD_WIDGET_PANEL} />\r\n        </View>\r\n      </AppRoot>\r\n    </ConfigProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport '@vkontakte/vkui/dist/vkui.css';\nimport './index.sass';\n\nimport bridge from '@vkontakte/vk-bridge'\n\n\nimport { Provider } from 'react-redux';\nimport store from './store/store';\n\nimport App from './App';\n\nbridge.send('VKWebAppInit')\nbridge.subscribe(e => {\n  if(e.detail.type === 'VKWebAppUpdateConfig')\n    document.body.setAttribute('scheme', e.detail.data.scheme)\n})\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}